# File generated by CompCert 3.8
# Command line: -stdlib ../../runtime -relf -o chomp.compcert chomp.c -lm
	.option nopic
	.option norelax
	.option norvc
	.section	.rodata
	.balign 1
__stringlit_7:
	.ascii	"player %d loses\012\000"
	.type	__stringlit_7, @object
	.size	__stringlit_7, . - __stringlit_7
	.section	.rodata
	.balign 1
__stringlit_1:
	.ascii	"%d\000"
	.type	__stringlit_1, @object
	.size	__stringlit_1, . - __stringlit_1
	.section	.rodata
	.balign 1
__stringlit_2:
	.ascii	")\012\000"
	.type	__stringlit_2, @object
	.size	__stringlit_2, . - __stringlit_2
	.section	.rodata
	.balign 1
__stringlit_4:
	.ascii	"  value = %d\012\000"
	.type	__stringlit_4, @object
	.size	__stringlit_4, . - __stringlit_4
	.section	.rodata
	.balign 1
__stringlit_3:
	.ascii	"For state :\012\000"
	.type	__stringlit_3, @object
	.size	__stringlit_3, . - __stringlit_3
	.section	.rodata
	.balign 1
__stringlit_6:
	.ascii	"player %d plays at (%d,%d)\012\000"
	.type	__stringlit_6, @object
	.size	__stringlit_6, . - __stringlit_6
	.section	.rodata
	.balign 1
__stringlit_5:
	.ascii	"We get, in order :\012\000"
	.type	__stringlit_5, @object
	.size	__stringlit_5, . - __stringlit_5
	.comm	wanted, 4, 4
	.comm	game_tree, 4, 4
	.comm	nrow, 4, 4
	.comm	ncol, 4, 4
	.text
	.balign 2
	.globl copy_data
copy_data:
	addi	x30, x2, 0
	addi	x2, x2, -16
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	sw	x8, 8(x2)
	addi	x8, x10, 0
    lui	x31, %lo(ncol)
	lw	x13, %lo(ncol)(x31)
	slli	x10, x13, 2
    jal   x1, malloc
    lui	x31, %lo(ncol)
	lw	x5, %lo(ncol)(x31)
	nop
	addi	x6, x5, 0
	addi	x5, x6, -1
    beq  x6, x0, 14
	slli	x7, x5, 2
	add	x12, x10, x7
	add	x13, x8, x7
	lw	x11, 0(x13)
	sw	x11, 0(x12)
    jal   x0, -18
	nop
	lw	x8, 8(x2)
	lw	x1, 4(x2)
	addi	x2, x2, 16
    jalr   x0, x1, 0
	.type	copy_data, @function
	.size	copy_data, . - copy_data
	.text
	.balign 2
	.globl next_data
next_data:
	addi	x30, x2, 0
	addi	x2, x2, -16
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	addi	x5, x10, 0
	addi	x14, x0, 0
	addi	x10, x0, 0
	nop
    lui	x31, %lo(ncol)
	lw	x11, %lo(ncol)(x31)
    beq  x14, x11, 36
	xori	x11, x10, 1
    beq  x11, x0, 32
	slli	x16, x14, 2
	add	x6, x5, x16
	lw	x7, 0(x6)
    lui	x31, %lo(nrow)
	lw	x15, %lo(nrow)(x31)
    beq  x7, x15, 10
	addi	x13, x7, 1
	sw	x13, 0(x6)
	addi	x10, x0, 1
    jal   x0, -30
	nop
	addi	x12, x0, 0
	sw	x12, 0(x6)
	addi	x14, x14, 1
    jal   x0, -40
	nop
	lw	x1, 4(x2)
	addi	x2, x2, 16
    jalr   x0, x1, 0
	.type	next_data, @function
	.size	next_data, . - next_data
	.text
	.balign 2
	.globl melt_data
melt_data:
	addi	x30, x2, 0
	addi	x2, x2, -16
	sw	x30, 0(x2)
	sw	x1, 4(x2)
    lui	x31, %lo(ncol)
	lw	x7, %lo(ncol)(x31)
	nop
	addi	x12, x7, 0
	addi	x7, x12, -1
    beq  x12, x0, 18
	slli	x6, x7, 2
	add	x12, x10, x6
	lw	x13, 0(x12)
	add	x14, x11, x6
	lw	x5, 0(x14)
    bge  x5, x13, -18
	sw	x5, 0(x12)
    jal   x0, -22
	nop
	lw	x1, 4(x2)
	addi	x2, x2, 16
    jalr   x0, x1, 0
	.type	melt_data, @function
	.size	melt_data, . - melt_data
	.text
	.balign 2
	.globl equal_data
equal_data:
	addi	x30, x2, 0
	addi	x2, x2, -16
	sw	x30, 0(x2)
	sw	x1, 4(x2)
    lui	x31, %lo(ncol)
	lw	x6, %lo(ncol)(x31)
	nop
	addi	x7, x6, 0
	addi	x6, x7, -1
    beq  x7, x0, 14
	slli	x5, x6, 2
	add	x12, x10, x5
	lw	x12, 0(x12)
	add	x14, x11, x5
	lw	x13, 0(x14)
    beq  x12, x13, -18
	nop
	slt	x10, x6, x0
	lw	x1, 4(x2)
	addi	x2, x2, 16
    jalr   x0, x1, 0
	.type	equal_data, @function
	.size	equal_data, . - equal_data
	.text
	.balign 2
	.globl valid_data
valid_data:
	addi	x30, x2, 0
	addi	x2, x2, -16
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	addi	x12, x0, 0
    lui	x31, %lo(nrow)
	lw	x6, %lo(nrow)(x31)
	nop
    lui	x31, %lo(ncol)
	lw	x11, %lo(ncol)(x31)
    beq  x12, x11, 16
	slli	x11, x12, 2
	add	x7, x10, x11
	lw	x5, 0(x7)
    blt  x6, x5, 8
	addi	x6, x5, 0
	addi	x12, x12, 1
    jal   x0, -20
	nop
    lui	x31, %lo(ncol)
	lw	x13, %lo(ncol)(x31)
	xor	x10, x12, x13
	sltiu	x10, x10, 1
	lw	x1, 4(x2)
	addi	x2, x2, 16
    jalr   x0, x1, 0
	.type	valid_data, @function
	.size	valid_data, . - valid_data
	.text
	.balign 2
	.globl dump_list
dump_list:
	addi	x30, x2, 0
	addi	x2, x2, -16
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	sw	x8, 8(x2)
	addi	x8, x10, 0
    beq  x8, x0, 20
	lw	x10, 4(x8)
    jal   x1, dump_list
	lw	x10, 0(x8)
    jal   x1, free
	addi	x10, x8, 0
	lw	x8, 8(x2)
	lw	x1, 4(x2)
	addi	x2, x2, 16
    jal   x0, free
	nop
	lw	x8, 8(x2)
	lw	x1, 4(x2)
	addi	x2, x2, 16
    jalr   x0, x1, 0
	.type	dump_list, @function
	.size	dump_list, . - dump_list
	.text
	.balign 2
	.globl dump_play
dump_play:
	addi	x30, x2, 0
	addi	x2, x2, -16
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	sw	x8, 8(x2)
	addi	x8, x10, 0
    beq  x8, x0, 24
	lw	x10, 12(x8)
    jal   x1, dump_play
	lw	x10, 8(x8)
    jal   x1, dump_list
	lw	x10, 4(x8)
    jal   x1, free
	addi	x10, x8, 0
	lw	x8, 8(x2)
	lw	x1, 4(x2)
	addi	x2, x2, 16
    jal   x0, free
	nop
	lw	x8, 8(x2)
	lw	x1, 4(x2)
	addi	x2, x2, 16
    jalr   x0, x1, 0
	.type	dump_play, @function
	.size	dump_play, . - dump_play
	.text
	.balign 2
	.globl get_value
get_value:
	addi	x30, x2, 0
	addi	x2, x2, -16
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	sw	x8, 8(x2)
	sw	x9, 12(x2)
	addi	x8, x10, 0
    lui	x31, %lo(game_tree)
	lw	x9, %lo(game_tree)(x31)
	nop
	lw	x10, 4(x9)
	addi	x11, x8, 0
    jal   x1, equal_data
    bne  x10, x0, 6
	lw	x9, 12(x9)
    jal   x0, -12
	nop
	lw	x10, 0(x9)
	lw	x8, 8(x2)
	lw	x9, 12(x2)
	lw	x1, 4(x2)
	addi	x2, x2, 16
    jalr   x0, x1, 0
	.type	get_value, @function
	.size	get_value, . - get_value
	.text
	.balign 2
	.globl show_data
show_data:
	addi	x30, x2, 0
	addi	x2, x2, -16
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	sw	x8, 8(x2)
	sw	x9, 12(x2)
	addi	x8, x10, 0
	addi	x9, x0, 0
	nop
    lui	x31, %lo(ncol)
	lw	x10, %lo(ncol)(x31)
    beq  x9, x10, 30
	addi	x5, x9, 0
	addi	x9, x5, 1
    lui	x10, %lo(__stringlit_1)
    addi  x10, x10, %lo(__stringlit_1)
	slli	x12, x5, 2
	add	x11, x8, x12
	lw	x11, 0(x11)
    jal   x1, printf
    lui	x31, %lo(ncol)
	lw	x6, %lo(ncol)(x31)
    beq  x9, x6, -28
	addi	x10, x0, 44
    jal   x1, putchar
    jal   x0, -34
	nop
	lw	x8, 8(x2)
	lw	x9, 12(x2)
	lw	x1, 4(x2)
	addi	x2, x2, 16
    jalr   x0, x1, 0
	.type	show_data, @function
	.size	show_data, . - show_data
	.text
	.balign 2
	.globl show_move
show_move:
	addi	x30, x2, 0
	addi	x2, x2, -16
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	sw	x8, 8(x2)
	addi	x8, x10, 0
	addi	x10, x0, 40
    jal   x1, putchar
	addi	x10, x8, 0
    jal   x1, show_data
    lui	x10, %lo(__stringlit_2)
    addi  x10, x10, %lo(__stringlit_2)
    jal   x1, printf
	lw	x8, 8(x2)
	lw	x1, 4(x2)
	addi	x2, x2, 16
    jalr   x0, x1, 0
	.type	show_move, @function
	.size	show_move, . - show_move
	.text
	.balign 2
	.globl show_list
show_list:
	addi	x30, x2, 0
	addi	x2, x2, -16
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	sw	x8, 8(x2)
	addi	x8, x10, 0
	nop
    beq  x8, x0, 10
	lw	x10, 0(x8)
    jal   x1, show_move
	lw	x8, 4(x8)
    jal   x0, -10
	nop
	lw	x8, 8(x2)
	lw	x1, 4(x2)
	addi	x2, x2, 16
    jalr   x0, x1, 0
	.type	show_list, @function
	.size	show_list, . - show_list
	.text
	.balign 2
	.globl show_play
show_play:
	addi	x30, x2, 0
	addi	x2, x2, -16
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	sw	x8, 8(x2)
	addi	x8, x10, 0
	nop
    beq  x8, x0, 34
    lui	x10, %lo(__stringlit_3)
    addi  x10, x10, %lo(__stringlit_3)
    jal   x1, printf
	lw	x10, 4(x8)
    jal   x1, show_data
    lui	x10, %lo(__stringlit_4)
    addi  x10, x10, %lo(__stringlit_4)
	lw	x11, 0(x8)
    jal   x1, printf
    lui	x10, %lo(__stringlit_5)
    addi  x10, x10, %lo(__stringlit_5)
    jal   x1, printf
	lw	x10, 8(x8)
    jal   x1, show_list
	lw	x8, 12(x8)
    jal   x0, -34
	nop
	lw	x8, 8(x2)
	lw	x1, 4(x2)
	addi	x2, x2, 16
    jalr   x0, x1, 0
	.type	show_play, @function
	.size	show_play, . - show_play
	.text
	.balign 2
	.globl in_wanted
in_wanted:
	addi	x30, x2, 0
	addi	x2, x2, -16
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	sw	x8, 8(x2)
	sw	x9, 12(x2)
	addi	x8, x10, 0
    lui	x31, %lo(wanted)
	lw	x9, %lo(wanted)(x31)
	nop
    beq  x9, x0, 14
	lw	x10, 0(x9)
	addi	x11, x8, 0
    jal   x1, equal_data
    bne  x10, x0, 6
	lw	x9, 4(x9)
    jal   x0, -14
	nop
    bne  x9, x0, 6
	addi	x10, x0, 0
    jal   x0, 6
	nop
	addi	x10, x0, 1
	nop
	lw	x8, 8(x2)
	lw	x9, 12(x2)
	lw	x1, 4(x2)
	addi	x2, x2, 16
    jalr   x0, x1, 0
	.type	in_wanted, @function
	.size	in_wanted, . - in_wanted
	.text
	.balign 2
	.globl make_data
make_data:
	addi	x30, x2, 0
	addi	x2, x2, -16
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	sw	x8, 8(x2)
	sw	x9, 12(x2)
	addi	x8, x11, 0
	addi	x9, x10, 0
    lui	x31, %lo(ncol)
	lw	x6, %lo(ncol)(x31)
	slli	x10, x6, 2
    jal   x1, malloc
	addi	x15, x0, 0
	nop
    beq  x15, x8, 16
	slli	x5, x15, 2
	add	x7, x10, x5
    lui	x31, %lo(nrow)
	lw	x13, %lo(nrow)(x31)
	sw	x13, 0(x7)
	addi	x15, x15, 1
    jal   x0, -16
	nop
    lui	x31, %lo(ncol)
	lw	x11, %lo(ncol)(x31)
    beq  x15, x11, 12
	slli	x11, x15, 2
	add	x14, x10, x11
	sw	x9, 0(x14)
	addi	x15, x15, 1
    jal   x0, -16
	nop
	lw	x8, 8(x2)
	lw	x9, 12(x2)
	lw	x1, 4(x2)
	addi	x2, x2, 16
    jalr   x0, x1, 0
	.type	make_data, @function
	.size	make_data, . - make_data
	.text
	.balign 2
	.globl make_list
make_list:
	addi	x30, x2, 0
	addi	x2, x2, -48
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	sw	x8, 8(x2)
	sw	x9, 12(x2)
	sw	x18, 16(x2)
	sw	x19, 20(x2)
	sw	x20, 24(x2)
	sw	x21, 28(x2)
	sw	x22, 32(x2)
	sw	x23, 36(x2)
	addi	x21, x12, 0
	addi	x22, x11, 0
	addi	x8, x10, 0
	addi	x7, x0, 1
	sw	x7, 0(x22)
	addi	x10, x0, 8
    jal   x1, malloc
	addi	x18, x10, 0
	addi	x6, x0, 0
	sw	x6, 4(x18)
	addi	x23, x18, 0
	addi	x20, x0, 0
	nop
    lui	x31, %lo(nrow)
	lw	x6, %lo(nrow)(x31)
    beq  x20, x6, 136
	addi	x19, x0, 0
	nop
    lui	x31, %lo(ncol)
	lw	x13, %lo(ncol)(x31)
    beq  x19, x13, 120
	addi	x11, x19, 0
	addi	x10, x20, 0
    jal   x1, make_data
	addi	x9, x10, 0
	addi	x11, x8, 0
	addi	x10, x9, 0
    jal   x1, melt_data
	addi	x11, x8, 0
	addi	x10, x9, 0
    jal   x1, equal_data
    bne  x10, x0, 70
	addi	x10, x0, 8
    jal   x1, malloc
	sw	x10, 4(x23)
	addi	x10, x9, 0
    jal   x1, copy_data
	lw	x30, 4(x23)
	sw	x10, 0(x30)
	lw	x11, 4(x23)
	addi	x12, x0, 0
	sw	x12, 4(x11)
	lw	x23, 4(x23)
	lw	x13, 0(x22)
	addi	x31, x0, 1
    bne  x13, x31, 8
	addi	x10, x9, 0
    jal   x1, get_value
	sw	x10, 0(x22)
	nop
	lw	x28, 0(x21)
    bne  x28, x0, 48
	lw	x29, 0(x22)
    bne  x29, x0, 44
    lui	x31, %lo(ncol)
	lw	x10, %lo(ncol)(x31)
	addi	x19, x10, -1
    lui	x31, %lo(nrow)
	lw	x16, %lo(nrow)(x31)
	addi	x20, x16, -1
	addi	x10, x9, 0
    jal   x1, in_wanted
    beq  x10, x0, 26
	addi	x7, x0, 2
	sw	x7, 0(x21)
    jal   x0, 20
	nop
    bne  x19, x0, 8
    lui	x31, %lo(nrow)
	lw	x5, %lo(nrow)(x31)
	addi	x20, x5, -1
	nop
    lui	x31, %lo(ncol)
	lw	x15, %lo(ncol)(x31)
	addi	x19, x15, -1
	nop
	addi	x10, x9, 0
    jal   x1, free
	addi	x19, x19, 1
    jal   x0, -124
	nop
	addi	x20, x20, 1
    jal   x0, -140
	nop
	lw	x8, 4(x18)
	addi	x10, x18, 0
    jal   x1, free
    beq  x8, x0, 10
	addi	x10, x0, 1
	lw	x5, 0(x22)
	sub	x14, x10, x5
	sw	x14, 0(x22)
	nop
	addi	x10, x8, 0
	lw	x8, 8(x2)
	lw	x9, 12(x2)
	lw	x18, 16(x2)
	lw	x19, 20(x2)
	lw	x20, 24(x2)
	lw	x21, 28(x2)
	lw	x22, 32(x2)
	lw	x23, 36(x2)
	lw	x1, 4(x2)
	addi	x2, x2, 48
    jalr   x0, x1, 0
	.type	make_list, @function
	.size	make_list, . - make_list
	.text
	.balign 2
	.globl make_play
make_play:
	addi	x30, x2, 0
	addi	x2, x2, -32
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	sw	x8, 8(x2)
	sw	x9, 12(x2)
	sw	x18, 16(x2)
	sw	x10, 24(x2)
	addi	x10, x0, 16
    jal   x1, malloc
	addi	x9, x10, 0
	addi	x18, x9, 0
	addi	x11, x0, 0
    lui	x31, %lo(game_tree)
	sw	x11, %lo(game_tree)(x31)
	addi	x10, x0, 0
	addi	x11, x0, 0
    jal   x1, make_data
	addi	x8, x10, 0
	lw	x30, 0(x8)
	addi	x10, x30, -1
	sw	x10, 0(x8)
	nop
	addi	x10, x8, 0
    jal   x1, next_data
    beq  x10, x0, 84
	addi	x10, x8, 0
    jal   x1, valid_data
    beq  x10, x0, -12
	addi	x10, x0, 16
    jal   x1, malloc
	sw	x10, 12(x18)
    lui	x31, %lo(game_tree)
	lw	x16, %lo(game_tree)(x31)
    bne  x16, x0, 6
    lui	x31, %lo(game_tree)
	sw	x10, %lo(game_tree)(x31)
	nop
	addi	x10, x8, 0
    jal   x1, copy_data
	lw	x5, 12(x18)
	sw	x10, 4(x5)
	addi	x11, x2, 28
	addi	x12, x2, 24
	addi	x10, x8, 0
    jal   x1, make_list
	lw	x28, 12(x18)
	sw	x10, 8(x28)
	lw	x6, 12(x18)
	lw	x17, 28(x2)
	sw	x17, 0(x6)
	lw	x15, 12(x18)
	addi	x14, x0, 0
	sw	x14, 12(x15)
	lw	x18, 12(x18)
	lw	x12, 24(x2)
	addi	x31, x0, 2
    bne  x12, x31, -70
	addi	x10, x8, 0
    jal   x1, free
    lui	x31, %lo(nrow)
	lw	x10, %lo(nrow)(x31)
    lui	x31, %lo(ncol)
	lw	x11, %lo(ncol)(x31)
    jal   x1, make_data
	addi	x8, x10, 0
    jal   x0, -88
	nop
	lw	x8, 12(x9)
	addi	x10, x9, 0
    jal   x1, free
	addi	x10, x8, 0
	lw	x8, 8(x2)
	lw	x9, 12(x2)
	lw	x18, 16(x2)
	lw	x1, 4(x2)
	addi	x2, x2, 32
    jalr   x0, x1, 0
	.type	make_play, @function
	.size	make_play, . - make_play
	.text
	.balign 2
	.globl make_wanted
make_wanted:
	addi	x30, x2, 0
	addi	x2, x2, -32
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	sw	x8, 8(x2)
	sw	x9, 12(x2)
	sw	x18, 16(x2)
	sw	x19, 20(x2)
	sw	x20, 24(x2)
	sw	x21, 28(x2)
	addi	x8, x10, 0
	addi	x10, x0, 8
    jal   x1, malloc
	addi	x18, x10, 0
	addi	x15, x0, 0
	sw	x15, 4(x18)
	addi	x19, x18, 0
	addi	x21, x0, 0
	nop
    lui	x31, %lo(nrow)
	lw	x7, %lo(nrow)(x31)
    beq  x21, x7, 92
	addi	x20, x0, 0
	nop
    lui	x31, %lo(ncol)
	lw	x5, %lo(ncol)(x31)
    beq  x20, x5, 76
	addi	x11, x20, 0
	addi	x10, x21, 0
    jal   x1, make_data
	addi	x9, x10, 0
	addi	x11, x8, 0
	addi	x10, x9, 0
    jal   x1, melt_data
	addi	x11, x8, 0
	addi	x10, x9, 0
    jal   x1, equal_data
    bne  x10, x0, 26
	addi	x10, x0, 8
    jal   x1, malloc
	sw	x10, 4(x19)
	addi	x10, x9, 0
    jal   x1, copy_data
	lw	x16, 4(x19)
	sw	x10, 0(x16)
	lw	x10, 4(x19)
	addi	x11, x0, 0
	sw	x11, 4(x10)
	lw	x19, 4(x19)
    jal   x0, 20
	nop
    bne  x20, x0, 8
    lui	x31, %lo(nrow)
	lw	x13, %lo(nrow)(x31)
	addi	x21, x13, -1
	nop
    lui	x31, %lo(ncol)
	lw	x6, %lo(ncol)(x31)
	addi	x20, x6, -1
	nop
	addi	x10, x9, 0
    jal   x1, free
	addi	x20, x20, 1
    jal   x0, -80
	nop
	addi	x21, x21, 1
    jal   x0, -96
	nop
	lw	x8, 4(x18)
	addi	x10, x18, 0
    jal   x1, free
    lui	x31, %lo(wanted)
	sw	x8, %lo(wanted)(x31)
	lw	x8, 8(x2)
	lw	x9, 12(x2)
	lw	x18, 16(x2)
	lw	x19, 20(x2)
	lw	x20, 24(x2)
	lw	x21, 28(x2)
	lw	x1, 4(x2)
	addi	x2, x2, 32
    jalr   x0, x1, 0
	.type	make_wanted, @function
	.size	make_wanted, . - make_wanted
	.text
	.balign 2
	.globl get_good_move
get_good_move:
	addi	x30, x2, 0
	addi	x2, x2, -16
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	sw	x8, 8(x2)
	addi	x8, x10, 0
    bne  x8, x0, 12
	addi	x10, x0, 0
	lw	x8, 8(x2)
	lw	x1, 4(x2)
	addi	x2, x2, 16
    jalr   x0, x1, 0
	nop
	lw	x5, 4(x8)
    beq  x5, x0, 12
	lw	x10, 0(x8)
    jal   x1, get_value
    beq  x10, x0, 6
	lw	x8, 4(x8)
    jal   x0, -14
	nop
	lw	x10, 0(x8)
	lw	x8, 8(x2)
	lw	x1, 4(x2)
	addi	x2, x2, 16
    jal   x0, copy_data
	.type	get_good_move, @function
	.size	get_good_move, . - get_good_move
	.text
	.balign 2
	.globl get_winning_move
get_winning_move:
	addi	x30, x2, 0
	addi	x2, x2, -16
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	nop
	lw	x5, 12(x10)
    beq  x5, x0, 6
	addi	x10, x5, 0
    jal   x0, -8
	nop
	lw	x10, 8(x10)
	lw	x1, 4(x2)
	addi	x2, x2, 16
    jal   x0, get_good_move
	.type	get_winning_move, @function
	.size	get_winning_move, . - get_winning_move
	.text
	.balign 2
	.globl where
where:
	addi	x30, x2, 0
	addi	x2, x2, -16
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	sw	x8, 8(x2)
	sw	x9, 12(x2)
	addi	x9, x11, 0
	addi	x8, x10, 0
	nop
	lw	x10, 4(x9)
	addi	x11, x8, 0
    jal   x1, equal_data
    bne  x10, x0, 6
	lw	x9, 12(x9)
    jal   x0, -12
	nop
	lw	x10, 8(x9)
	lw	x8, 8(x2)
	lw	x9, 12(x2)
	lw	x1, 4(x2)
	addi	x2, x2, 16
    jalr   x0, x1, 0
	.type	where, @function
	.size	where, . - where
	.text
	.balign 2
	.globl get_real_move
get_real_move:
	addi	x30, x2, 0
	addi	x2, x2, -16
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	addi	x15, x0, 0
	sw	x15, 0(x13)
	nop
	lw	x5, 0(x13)
	slli	x6, x5, 2
	add	x14, x10, x6
	lw	x7, 0(x14)
	add	x14, x11, x6
	lw	x14, 0(x14)
    bne  x7, x14, 8
	addi	x14, x5, 1
	sw	x14, 0(x13)
    jal   x0, -20
	nop
	sw	x7, 0(x12)
	lw	x1, 4(x2)
	addi	x2, x2, 16
    jalr   x0, x1, 0
	.type	get_real_move, @function
	.size	get_real_move, . - get_real_move
	.text
	.balign 2
	.globl main
main:
	addi	x30, x2, 0
	addi	x2, x2, -32
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	sw	x8, 8(x2)
	sw	x9, 12(x2)
	sw	x18, 16(x2)
	sw	x19, 20(x2)
	addi	x6, x0, 7
    lui	x31, %lo(ncol)
	sw	x6, %lo(ncol)(x31)
	addi	x6, x0, 7
    lui	x31, %lo(nrow)
	sw	x6, %lo(nrow)(x31)
	addi	x10, x0, 1
    jal   x1, make_play
	addi	x19, x10, 0
	addi	x18, x0, 0
    lui	x31, %lo(nrow)
	lw	x10, %lo(nrow)(x31)
    lui	x31, %lo(ncol)
	lw	x11, %lo(ncol)(x31)
    jal   x1, make_data
	addi	x8, x10, 0
	nop
    beq  x8, x0, 50
	addi	x11, x19, 0
	addi	x10, x8, 0
    jal   x1, where
    jal   x1, get_good_move
	addi	x9, x10, 0
    beq  x9, x0, 32
	addi	x12, x2, 24
	addi	x13, x2, 28
	addi	x11, x8, 0
	addi	x10, x9, 0
    jal   x1, get_real_move
    lui	x10, %lo(__stringlit_6)
    addi  x10, x10, %lo(__stringlit_6)
	lw	x12, 24(x2)
	lw	x13, 28(x2)
	addi	x11, x18, 0
    jal   x1, printf
	addi	x6, x0, 1
	sub	x18, x6, x18
	addi	x10, x8, 0
    jal   x1, free
	nop
	addi	x8, x9, 0
    jal   x0, -50
	nop
	addi	x10, x19, 0
    jal   x1, dump_play
    lui	x10, %lo(__stringlit_7)
    addi  x10, x10, %lo(__stringlit_7)
	addi	x11, x0, 1
	sub	x11, x11, x18
    jal   x1, printf
	addi	x10, x0, 0
	lw	x8, 8(x2)
	lw	x9, 12(x2)
	lw	x18, 16(x2)
	lw	x19, 20(x2)
	lw	x1, 4(x2)
	addi	x2, x2, 32
    jalr   x0, x1, 0
	.type	main, @function
	.size	main, . - main
