# File generated by CompCert 3.8
# Command line: -stdlib ../../runtime -relf -o nsievebits.compcert nsievebits.c -lm
	.option nopic
	.option norelax
	.option norvc
	.section	.rodata
	.balign 1
__stringlit_1:
	.ascii	"Primes up to %8u %8u\012\000"
	.type	__stringlit_1, @object
	.size	__stringlit_1, . - __stringlit_1
	.text
	.balign 2
test:
	addi	x30, x2, 0
	addi	x2, x2, -32
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	sw	x8, 8(x2)
	sw	x9, 12(x2)
	sw	x18, 16(x2)
	lui	x12, 2
	addi	x12, x12, 1808
	addi	x11, x0, 1
	sll	x10, x11, x10
	mul	x8, x10, x12
	addi	x18, x0, 0
	nop
	srli	x7, x8, 5
	slli	x10, x7, 2
    jal   x1, malloc
	addi	x9, x10, 0
	addi	x11, x0, 255
	srli	x14, x8, 5
	slli	x12, x14, 2
	addi	x10, x9, 0
    jal   x1, memset
	addi	x12, x0, 0
	addi	x28, x0, 2
	nop
    bgeu   x28, x8, 60
	srli	x15, x28, 5
	slli	x11, x15, 2
	add	x13, x9, x11
	lw	x7, 0(x13)
	addi	x29, x0, 1
	andi	x13, x28, 31
	sll	x6, x29, x13
	and	x17, x7, x6
    beq  x17, x0, 36
	add	x16, x28, x28
	nop
    bgeu   x16, x8, 26
	srli	x14, x16, 5
	slli	x7, x14, 2
	add	x5, x9, x7
	lw	x13, 0(x5)
	addi	x30, x0, 1
	andi	x29, x16, 31
	sll	x17, x30, x29
	xori	x17, x17, -1
	and	x15, x13, x17
	sw	x15, 0(x5)
	add	x16, x16, x28
    jal   x0, -26
	nop
	addi	x12, x12, 1
	nop
	addi	x28, x28, 1
    jal   x0, -60
	nop
	addi	x18, x18, 1
	addi	x31, x0, 2
    blt  x18, x31, -92
    lui	x10, %lo(__stringlit_1)
    addi  x10, x10, %lo(__stringlit_1)
	addi	x11, x8, 0
    jal   x1, printf
	lw	x8, 8(x2)
	lw	x9, 12(x2)
	lw	x18, 16(x2)
	lw	x1, 4(x2)
	addi	x2, x2, 32
    jalr   x0, x1, 0
	.type	test, @function
	.size	test, . - test
	.text
	.balign 2
	.globl main
main:
	addi	x30, x2, 0
	addi	x2, x2, -16
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	sw	x8, 8(x2)
	addi	x31, x0, 2
    blt  x10, x31, 8
	lw	x10, 4(x11)
    jal   x1, atoi
    jal   x0, 6
	nop
	addi	x10, x0, 9
	nop
	addi	x8, x10, 0
	addi	x10, x8, 0
    jal   x1, test
	addi	x31, x0, 1
    bltu   x8, x31, 6
	addi	x10, x8, -1
    jal   x1, test
	nop
	addi	x31, x0, 2
    bltu   x8, x31, 6
	addi	x10, x8, -2
    jal   x1, test
	nop
	addi	x10, x0, 0
    jal   x1, exit
	addi	x10, x0, 0
	lw	x8, 8(x2)
	lw	x1, 4(x2)
	addi	x2, x2, 16
    jalr   x0, x1, 0
	.type	main, @function
	.size	main, . - main
