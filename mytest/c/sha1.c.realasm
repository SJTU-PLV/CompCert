# File generated by CompCert 3.8
# Command line: -stdlib ../../runtime -relf -o sha1.compcert sha1.c -lm
	.option nopic
	.option norelax
	.option norvc
	.section	.rodata
	.balign 1
__stringlit_2:
	.ascii	"passed\000"
	.type	__stringlit_2, @object
	.size	__stringlit_2, . - __stringlit_2
	.section	.rodata
	.balign 1
__stringlit_4:
	.ascii	"Cannot determine endianness\012\000"
	.type	__stringlit_4, @object
	.size	__stringlit_4, . - __stringlit_4
	.section	.rodata
	.balign 1
__stringlit_3:
	.ascii	"Test `%s': %s\012\000"
	.type	__stringlit_3, @object
	.size	__stringlit_3, . - __stringlit_3
	.section	.rodata
	.balign 1
__stringlit_1:
	.ascii	"FAILED\000"
	.type	__stringlit_1, @object
	.size	__stringlit_1, . - __stringlit_1
	.local	arch_big_endian
	.comm	arch_big_endian, 4, 4
	.text
	.balign 2
SHA1_copy_and_swap:
	addi	x30, x2, 0
	addi	x2, x2, -16
	sw	x30, 0(x2)
	sw	x1, 4(x2)
    lui	x31, %lo(arch_big_endian)
	lw	x13, %lo(arch_big_endian)(x31)
    bne  x13, x0, 30
	nop
    bge  x0, x12, 38
	lbu	x5, 0(x10)
	lbu	x7, 1(x10)
	lbu	x13, 3(x10)
	sb	x13, 0(x11)
	lbu	x6, 2(x10)
	sb	x6, 1(x11)
	sb	x7, 2(x11)
	sb	x5, 3(x11)
	addi	x10, x10, 4
	addi	x11, x11, 4
	addi	x12, x12, -1
    jal   x0, -26
	nop
	slli	x12, x12, 2
	addi	x13, x10, 0
	addi	x10, x11, 0
	addi	x11, x13, 0
    jal   x1, memcpy
	nop
	lw	x1, 4(x2)
	addi	x2, x2, 16
    jalr   x0, x1, 0
	.type	SHA1_copy_and_swap, @function
	.size	SHA1_copy_and_swap, . - SHA1_copy_and_swap
	.text
	.balign 2
SHA1_transform:
	addi	x30, x2, 0
	addi	x2, x2, -336
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	sw	x8, 8(x2)
	addi	x8, x10, 0
	addi	x10, x8, 32
	addi	x11, x2, 16
	addi	x12, x0, 16
    jal   x1, SHA1_copy_and_swap
	addi	x6, x0, 16
	nop
	addi	x30, x2, 4
	slli	x7, x6, 2
	add	x12, x30, x7
	lw	x29, 0(x12)
	addi	x10, x2, -16
	add	x12, x10, x7
	lw	x11, 0(x12)
	xor	x17, x29, x11
	addi	x13, x2, -40
	add	x30, x13, x7
	lw	x5, 0(x30)
	xor	x29, x17, x5
	addi	x10, x2, -48
	add	x28, x10, x7
	lw	x11, 0(x28)
	xor	x30, x29, x11
	addi	x17, x2, 16
	add	x14, x17, x7
	slli	x16, x30, 1
	srli	x11, x30, 31
	or	x15, x16, x11
	sw	x15, 0(x14)
	addi	x6, x6, 1
	addi	x31, x0, 80
    blt  x6, x31, -50
	lw	x11, 0(x8)
	lw	x13, 4(x8)
	lw	x15, 8(x8)
	lw	x5, 12(x8)
	lw	x6, 16(x8)
	addi	x30, x0, 0
	nop
	xor	x14, x15, x5
	and	x10, x13, x14
	xor	x28, x5, x10
	slli	x7, x11, 5
	srli	x14, x11, 27
	or	x29, x7, x14
	add	x16, x28, x29
	add	x12, x16, x6
	addi	x16, x2, 16
	slli	x10, x30, 2
	add	x6, x16, x10
	lw	x29, 0(x6)
	add	x16, x12, x29
	lui	x31, 370728
	addi	x31, x31, -1639
	add	x14, x16, x31
	addi	x6, x5, 0
	addi	x5, x15, 0
	slli	x10, x13, 30
	srli	x7, x13, 2
	or	x15, x10, x7
	addi	x13, x11, 0
	addi	x11, x14, 0
	addi	x30, x30, 1
	addi	x31, x0, 20
    blt  x30, x31, -52
	nop
	addi	x31, x0, 40
    bge  x30, x31, 50
	xor	x12, x13, x15
	xor	x17, x12, x5
	slli	x14, x11, 5
	srli	x16, x11, 27
	or	x16, x14, x16
	add	x12, x17, x16
	add	x29, x12, x6
	addi	x7, x2, 16
	slli	x16, x30, 2
	add	x6, x7, x16
	lw	x14, 0(x6)
	add	x17, x29, x14
	lui	x31, 454047
	addi	x31, x31, -1119
	add	x10, x17, x31
	addi	x6, x5, 0
	addi	x5, x15, 0
	slli	x7, x13, 30
	srli	x16, x13, 2
	or	x15, x7, x16
	addi	x13, x11, 0
	addi	x11, x10, 0
	addi	x30, x30, 1
    jal   x0, -52
	nop
	addi	x31, x0, 60
    bge  x30, x31, 54
	and	x10, x13, x15
	or	x28, x13, x15
	and	x7, x5, x28
	or	x14, x10, x7
	slli	x7, x11, 5
	srli	x12, x11, 27
	or	x12, x7, x12
	add	x7, x14, x12
	add	x16, x7, x6
	addi	x28, x2, 16
	slli	x6, x30, 2
	add	x14, x28, x6
	lw	x14, 0(x14)
	add	x17, x16, x14
	lui	x31, 586172
	addi	x31, x31, -804
	add	x16, x17, x31
	addi	x6, x5, 0
	addi	x5, x15, 0
	slli	x7, x13, 30
	srli	x10, x13, 2
	or	x15, x7, x10
	addi	x13, x11, 0
	addi	x11, x16, 0
	addi	x30, x30, 1
    jal   x0, -56
	nop
	addi	x31, x0, 80
    bge  x30, x31, 50
	xor	x16, x13, x15
	xor	x10, x16, x5
	slli	x29, x11, 5
	srli	x14, x11, 27
	or	x7, x29, x14
	add	x16, x10, x7
	add	x12, x16, x6
	addi	x14, x2, 16
	slli	x10, x30, 2
	add	x28, x14, x10
	lw	x14, 0(x28)
	add	x17, x12, x14
	lui	x31, 828972
	addi	x31, x31, 470
	add	x12, x17, x31
	addi	x6, x5, 0
	addi	x5, x15, 0
	slli	x10, x13, 30
	srli	x17, x13, 2
	or	x15, x10, x17
	addi	x13, x11, 0
	addi	x11, x12, 0
	addi	x30, x30, 1
    jal   x0, -52
	nop
	lw	x7, 0(x8)
	add	x7, x7, x11
	sw	x7, 0(x8)
	lw	x28, 4(x8)
	add	x7, x28, x13
	sw	x7, 4(x8)
	lw	x13, 8(x8)
	add	x30, x13, x15
	sw	x30, 8(x8)
	lw	x29, 12(x8)
	add	x30, x29, x5
	sw	x30, 12(x8)
	lw	x29, 16(x8)
	add	x17, x29, x6
	sw	x17, 16(x8)
	lw	x8, 8(x2)
	lw	x1, 4(x2)
	addi	x2, x2, 336
    jalr   x0, x1, 0
	.type	SHA1_transform, @function
	.size	SHA1_transform, . - SHA1_transform
	.text
	.balign 2
	.globl SHA1_init
SHA1_init:
	addi	x30, x2, 0
	addi	x2, x2, -16
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	lui	x6, 422994
	addi	x6, x6, 769
	sw	x6, 0(x10)
	lui	x13, 982235
	addi	x13, x13, -1143
	sw	x13, 4(x10)
	lui	x7, 625582
	addi	x7, x7, -770
	sw	x7, 8(x10)
	lui	x11, 66341
	addi	x11, x11, 1142
	sw	x11, 12(x10)
	lui	x5, 802094
	addi	x5, x5, 496
	sw	x5, 16(x10)
	addi	x11, x0, 0
	sw	x11, 28(x10)
	addi	x14, x0, 0
	sw	x14, 20(x10)
	addi	x12, x0, 0
	sw	x12, 24(x10)
	lw	x1, 4(x2)
	addi	x2, x2, 16
    jalr   x0, x1, 0
	.type	SHA1_init, @function
	.size	SHA1_init, . - SHA1_init
	.text
	.balign 2
	.globl SHA1_add_data
SHA1_add_data:
	addi	x30, x2, 0
	addi	x2, x2, -32
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	sw	x8, 8(x2)
	sw	x9, 12(x2)
	sw	x18, 16(x2)
	sw	x19, 20(x2)
	addi	x18, x12, 0
	addi	x9, x11, 0
	addi	x19, x10, 0
	lw	x5, 24(x19)
	slli	x17, x18, 3
	add	x14, x5, x17
	sw	x14, 24(x19)
    bgeu   x14, x5, 8
	lw	x13, 20(x19)
	addi	x6, x13, 1
	sw	x6, 20(x19)
	nop
	lw	x11, 20(x19)
	srli	x7, x18, 29
	add	x15, x11, x7
	sw	x15, 20(x19)
	lw	x5, 28(x19)
    beq  x5, x0, 46
	addi	x10, x0, 64
	sub	x8, x10, x5
    bgeu   x18, x8, 20
	add	x10, x19, x5
	addi	x10, x10, 32
	addi	x12, x18, 0
	addi	x11, x9, 0
    jal   x1, memcpy
	lw	x30, 28(x19)
	add	x29, x30, x18
	sw	x29, 28(x19)
    jal   x0, 58
	nop
	add	x6, x19, x5
	addi	x10, x6, 32
	addi	x12, x8, 0
	addi	x11, x9, 0
    jal   x1, memcpy
	addi	x10, x19, 0
    jal   x1, SHA1_transform
	add	x9, x9, x8
	sub	x18, x18, x8
	nop
	addi	x31, x0, 64
    bltu   x18, x31, 20
	addi	x10, x19, 32
	addi	x12, x0, 64
	addi	x11, x9, 0
    jal   x1, memcpy
	addi	x10, x19, 0
    jal   x1, SHA1_transform
	addi	x9, x9, 64
	addi	x18, x18, -64
    jal   x0, -22
	nop
	addi	x10, x19, 32
	addi	x12, x18, 0
	addi	x11, x9, 0
    jal   x1, memcpy
	sw	x18, 28(x19)
	nop
	lw	x8, 8(x2)
	lw	x9, 12(x2)
	lw	x18, 16(x2)
	lw	x19, 20(x2)
	lw	x1, 4(x2)
	addi	x2, x2, 32
    jalr   x0, x1, 0
	.type	SHA1_add_data, @function
	.size	SHA1_add_data, . - SHA1_add_data
	.text
	.balign 2
	.globl SHA1_finish
SHA1_finish:
	addi	x30, x2, 0
	addi	x2, x2, -16
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	sw	x8, 8(x2)
	sw	x9, 12(x2)
	addi	x8, x11, 0
	addi	x9, x10, 0
	lw	x5, 28(x9)
	addi	x17, x5, 1
	add	x16, x9, x5
	addi	x12, x0, 128
	sb	x12, 32(x16)
	addi	x31, x0, 56
    bge  x31, x17, 20
	add	x7, x9, x17
	addi	x10, x7, 32
	addi	x11, x0, 0
	addi	x15, x0, 64
	sub	x12, x15, x17
    jal   x1, memset
	addi	x10, x9, 0
    jal   x1, SHA1_transform
	addi	x17, x0, 0
	nop
	add	x11, x9, x17
	addi	x10, x11, 32
	addi	x11, x0, 0
	addi	x13, x0, 56
	sub	x12, x13, x17
    jal   x1, memset
	addi	x10, x9, 20
	addi	x11, x9, 88
	addi	x12, x0, 2
    jal   x1, SHA1_copy_and_swap
	addi	x10, x9, 0
    jal   x1, SHA1_transform
	addi	x12, x0, 5
	addi	x11, x8, 0
	addi	x10, x9, 0
	lw	x8, 8(x2)
	lw	x9, 12(x2)
	lw	x1, 4(x2)
	addi	x2, x2, 16
    jal   x0, SHA1_copy_and_swap
	.type	SHA1_finish, @function
	.size	SHA1_finish, . - SHA1_finish
	.text
	.balign 2
do_test:
	addi	x30, x2, 0
	addi	x2, x2, -144
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	sw	x8, 8(x2)
	sw	x9, 12(x2)
	addi	x9, x11, 0
	addi	x8, x10, 0
	addi	x10, x2, 40
    jal   x1, SHA1_init
	addi	x10, x8, 0
    jal   x1, strlen
	addi	x12, x10, 0
	addi	x10, x2, 40
	addi	x11, x8, 0
    jal   x1, SHA1_add_data
	addi	x10, x2, 40
	addi	x11, x2, 16
    jal   x1, SHA1_finish
	addi	x10, x2, 16
	addi	x12, x0, 20
	addi	x11, x9, 0
    jal   x1, memcmp
    beq  x10, x0, 8
    lui	x12, %lo(__stringlit_1)
    addi  x12, x12, %lo(__stringlit_1)
    jal   x0, 8
	nop
    lui	x12, %lo(__stringlit_2)
    addi  x12, x12, %lo(__stringlit_2)
	nop
    lui	x10, %lo(__stringlit_3)
    addi  x10, x10, %lo(__stringlit_3)
	addi	x11, x8, 0
    jal   x1, printf
	lw	x8, 8(x2)
	lw	x9, 12(x2)
	lw	x1, 4(x2)
	addi	x2, x2, 144
    jalr   x0, x1, 0
	.type	do_test, @function
	.size	do_test, . - do_test
	.data
	.balign 1
	.globl	test_input_1
test_input_1:
	.byte	97
	.byte	98
	.byte	99
	.byte	0
	.type	test_input_1, @object
	.size	test_input_1, . - test_input_1
	.data
	.balign 1
	.globl	test_output_1
test_output_1:
	.byte	169
	.byte	153
	.byte	62
	.byte	54
	.byte	71
	.byte	6
	.byte	129
	.byte	106
	.byte	186
	.byte	62
	.byte	37
	.byte	113
	.byte	120
	.byte	80
	.byte	194
	.byte	108
	.byte	156
	.byte	208
	.byte	216
	.byte	157
	.type	test_output_1, @object
	.size	test_output_1, . - test_output_1
	.data
	.balign 1
	.globl	test_input_2
test_input_2:
	.byte	97
	.byte	98
	.byte	99
	.byte	100
	.byte	98
	.byte	99
	.byte	100
	.byte	101
	.byte	99
	.byte	100
	.byte	101
	.byte	102
	.byte	100
	.byte	101
	.byte	102
	.byte	103
	.byte	101
	.byte	102
	.byte	103
	.byte	104
	.byte	102
	.byte	103
	.byte	104
	.byte	105
	.byte	103
	.byte	104
	.byte	105
	.byte	106
	.byte	104
	.byte	105
	.byte	106
	.byte	107
	.byte	105
	.byte	106
	.byte	107
	.byte	108
	.byte	106
	.byte	107
	.byte	108
	.byte	109
	.byte	107
	.byte	108
	.byte	109
	.byte	110
	.byte	108
	.byte	109
	.byte	110
	.byte	111
	.byte	109
	.byte	110
	.byte	111
	.byte	112
	.byte	110
	.byte	111
	.byte	112
	.byte	113
	.byte	0
	.type	test_input_2, @object
	.size	test_input_2, . - test_input_2
	.data
	.balign 1
	.globl	test_output_2
test_output_2:
	.byte	132
	.byte	152
	.byte	62
	.byte	68
	.byte	28
	.byte	59
	.byte	210
	.byte	110
	.byte	186
	.byte	174
	.byte	74
	.byte	161
	.byte	249
	.byte	81
	.byte	41
	.byte	229
	.byte	229
	.byte	70
	.byte	112
	.byte	241
	.type	test_output_2, @object
	.size	test_output_2, . - test_output_2
	.text
	.balign 2
	.globl main
main:
	addi	x30, x2, 0
	addi	x2, x2, -208
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	sw	x8, 8(x2)
	lui	x6, 74565
	addi	x6, x6, 1656
	sw	x6, 16(x2)
	lbu	x6, 16(x2)
	addi	x31, x0, 18
    beq  x6, x31, 26
	addi	x31, x0, 120
    bne  x6, x31, 10
	addi	x6, x0, 0
    lui	x31, %lo(arch_big_endian)
	sw	x6, %lo(arch_big_endian)(x31)
    jal   x0, 22
	nop
    lui	x10, %lo(__stringlit_4)
    addi  x10, x10, %lo(__stringlit_4)
    jal   x1, printf
	addi	x10, x0, 2
    jal   x0, 82
	nop
	addi	x6, x0, 1
    lui	x31, %lo(arch_big_endian)
	sw	x6, %lo(arch_big_endian)(x31)
	nop
    lui	x10, %lo(test_input_1)
    addi  x10, x10, %lo(test_input_1)
    lui	x11, %lo(test_output_1)
    addi  x11, x11, %lo(test_output_1)
    jal   x1, do_test
    lui	x10, %lo(test_input_2)
    addi  x10, x10, %lo(test_input_2)
    lui	x11, %lo(test_output_2)
    addi  x11, x11, %lo(test_output_2)
    jal   x1, do_test
	lui	x8, 49
	addi	x8, x8, -704
	addi	x5, x0, 0
	nop
	addi	x13, x2, 48
	add	x11, x13, x5
	sb	x5, 0(x11)
	addi	x5, x5, 1
	addi	x31, x0, 64
    blt  x5, x31, -12
	addi	x10, x2, 112
    jal   x1, SHA1_init
	nop
    bge  x0, x8, 14
	addi	x10, x2, 112
	addi	x11, x2, 48
	addi	x12, x0, 64
    jal   x1, SHA1_add_data
	addi	x8, x8, -1
    jal   x0, -14
	nop
	addi	x10, x2, 112
	addi	x11, x2, 24
    jal   x1, SHA1_finish
	addi	x10, x0, 0
	nop
	lw	x8, 8(x2)
	lw	x1, 4(x2)
	addi	x2, x2, 208
    jalr   x0, x1, 0
	.type	main, @function
	.size	main, . - main
