# File generated by CompCert 3.8
# Command line: -stdlib ../../runtime -relf -fall -DARCH_riscV -DMODEL_32 -o aligned.compcert aligned.c -lm
	.option nopic
	.option norelax
	.option norvc
	.section	.rodata
	.balign 1
__stringlit_14:
	.ascii	"i\000"
	.type	__stringlit_14, @object
	.size	__stringlit_14, . - __stringlit_14
	.section	.rodata
	.balign 1
__stringlit_16:
	.ascii	"T2: size %zu, alignment %zu\012\000"
	.type	__stringlit_16, @object
	.size	__stringlit_16, . - __stringlit_16
	.section	.rodata
	.balign 1
__stringlit_11:
	.ascii	"f\000"
	.type	__stringlit_11, @object
	.size	__stringlit_11, . - __stringlit_11
	.section	.rodata
	.balign 1
__stringlit_18:
	.ascii	"t2: size %zu, alignment %zu\012\000"
	.type	__stringlit_18, @object
	.size	__stringlit_18, . - __stringlit_18
	.section	.rodata
	.balign 1
__stringlit_12:
	.ascii	"g\000"
	.type	__stringlit_12, @object
	.size	__stringlit_12, . - __stringlit_12
	.section	.rodata
	.balign 1
__stringlit_15:
	.ascii	"j\000"
	.type	__stringlit_15, @object
	.size	__stringlit_15, . - __stringlit_15
	.section	.rodata
	.balign 1
__stringlit_6:
	.ascii	"%s: size %s that of a pointer, offset mod 16 %s\012\000"
	.type	__stringlit_6, @object
	.size	__stringlit_6, . - __stringlit_6
	.section	.rodata
	.balign 1
__stringlit_8:
	.ascii	"b\000"
	.type	__stringlit_8, @object
	.size	__stringlit_8, . - __stringlit_8
	.section	.rodata
	.balign 1
__stringlit_2:
	.ascii	"IS BAD\000"
	.type	__stringlit_2, @object
	.size	__stringlit_2, . - __stringlit_2
	.section	.rodata
	.balign 1
__stringlit_9:
	.ascii	"c\000"
	.type	__stringlit_9, @object
	.size	__stringlit_9, . - __stringlit_9
	.section	.rodata
	.balign 1
__stringlit_3:
	.ascii	"is good\000"
	.type	__stringlit_3, @object
	.size	__stringlit_3, . - __stringlit_3
	.section	.rodata
	.balign 1
__stringlit_5:
	.ascii	"is\000"
	.type	__stringlit_5, @object
	.size	__stringlit_5, . - __stringlit_5
	.section	.rodata
	.balign 1
__stringlit_10:
	.ascii	"d\000"
	.type	__stringlit_10, @object
	.size	__stringlit_10, . - __stringlit_10
	.section	.rodata
	.balign 1
__stringlit_1:
	.ascii	"%s: size %zu, offset mod 16 = %lu\012\000"
	.type	__stringlit_1, @object
	.size	__stringlit_1, . - __stringlit_1
	.section	.rodata
	.balign 1
__stringlit_7:
	.ascii	"a\000"
	.type	__stringlit_7, @object
	.size	__stringlit_7, . - __stringlit_7
	.section	.rodata
	.balign 1
__stringlit_13:
	.ascii	"h\000"
	.type	__stringlit_13, @object
	.size	__stringlit_13, . - __stringlit_13
	.section	.rodata
	.balign 1
__stringlit_4:
	.ascii	"IS NOT\000"
	.type	__stringlit_4, @object
	.size	__stringlit_4, . - __stringlit_4
	.section	.rodata
	.balign 1
__stringlit_17:
	.ascii	"T4: size %s that of a pointer, alignment %s that of a pointer\012\000"
	.type	__stringlit_17, @object
	.size	__stringlit_17, . - __stringlit_17
	.comm	x, 208, 16
	.text
	.balign 2
	.globl check
check:
	addi	x30, x2, 0
	addi	x2, x2, -16
	sw	x30, 0(x2)
	sw	x1, 4(x2)
    lui	x5, %lo(__stringlit_1)
    addi  x5, x5, %lo(__stringlit_1)
    lui	x7, %lo(x)
    addi  x7, x7, %lo(x)
	sub	x6, x11, x7
	andi	x13, x6, 15
	addi	x11, x10, 0
	addi	x10, x5, 0
    jal   x1, printf
	lw	x1, 4(x2)
	addi	x2, x2, 16
    jalr   x0, x1, 0
	.type	check, @function
	.size	check, . - check
	.text
	.balign 2
	.globl checkptr
checkptr:
	addi	x30, x2, 0
	addi	x2, x2, -16
	sw	x30, 0(x2)
	sw	x1, 4(x2)
	addi	x31, x0, 4
    beq  x12, x31, 8
    lui	x12, %lo(__stringlit_4)
    addi  x12, x12, %lo(__stringlit_4)
    jal   x0, 8
	nop
    lui	x12, %lo(__stringlit_5)
    addi  x12, x12, %lo(__stringlit_5)
	nop
    lui	x14, %lo(x)
    addi  x14, x14, %lo(x)
	sub	x11, x11, x14
	srai	x31, x11, 31
	srli	x31, x31, 28
	add	x31, x11, x31
	srai	x7, x31, 4
	slli	x14, x7, 4
	sub	x14, x11, x14
    beq  x14, x13, 8
    lui	x13, %lo(__stringlit_2)
    addi  x13, x13, %lo(__stringlit_2)
    jal   x0, 8
	nop
    lui	x13, %lo(__stringlit_3)
    addi  x13, x13, %lo(__stringlit_3)
	nop
    lui	x5, %lo(__stringlit_6)
    addi  x5, x5, %lo(__stringlit_6)
	addi	x11, x10, 0
	addi	x10, x5, 0
    jal   x1, printf
	lw	x1, 4(x2)
	addi	x2, x2, 16
    jalr   x0, x1, 0
	.type	checkptr, @function
	.size	checkptr, . - checkptr
	.text
	.balign 2
	.globl main
main:
	addi	x30, x2, 0
	addi	x2, x2, -16
	sw	x30, 0(x2)
	sw	x1, 4(x2)
    lui	x10, %lo(__stringlit_7)
    addi  x10, x10, %lo(__stringlit_7)
    lui	x11, %lo(x + 16)
    addi  x11, x11, %lo(x + 16)
	addi	x12, x0, 1
    jal   x1, check
    lui	x10, %lo(__stringlit_8)
    addi  x10, x10, %lo(__stringlit_8)
    lui	x11, %lo(x + 32)
    addi  x11, x11, %lo(x + 32)
	addi	x12, x0, 3
    jal   x1, check
    lui	x10, %lo(__stringlit_9)
    addi  x10, x10, %lo(__stringlit_9)
    lui	x11, %lo(x + 48)
    addi  x11, x11, %lo(x + 48)
	addi	x12, x0, 4
	addi	x13, x0, 0
    jal   x1, checkptr
    lui	x10, %lo(__stringlit_10)
    addi  x10, x10, %lo(__stringlit_10)
    lui	x11, %lo(x + 64)
    addi  x11, x11, %lo(x + 64)
	addi	x12, x0, 1
    jal   x1, check
    lui	x10, %lo(__stringlit_11)
    addi  x10, x10, %lo(__stringlit_11)
    lui	x11, %lo(x + 68)
    addi  x11, x11, %lo(x + 68)
	addi	x12, x0, 4
	addi	x13, x0, 4
    jal   x1, checkptr
    lui	x10, %lo(__stringlit_12)
    addi  x10, x10, %lo(__stringlit_12)
    lui	x11, %lo(x + 80)
    addi  x11, x11, %lo(x + 80)
	addi	x12, x0, 32
    jal   x1, check
    lui	x10, %lo(__stringlit_13)
    addi  x10, x10, %lo(__stringlit_13)
    lui	x11, %lo(x + 128)
    addi  x11, x11, %lo(x + 128)
	addi	x12, x0, 16
    jal   x1, check
    lui	x10, %lo(__stringlit_14)
    addi  x10, x10, %lo(__stringlit_14)
    lui	x11, %lo(x + 160)
    addi  x11, x11, %lo(x + 160)
	addi	x12, x0, 16
    jal   x1, check
    lui	x10, %lo(__stringlit_15)
    addi  x10, x10, %lo(__stringlit_15)
    lui	x11, %lo(x + 192)
    addi  x11, x11, %lo(x + 192)
	addi	x12, x0, 16
    jal   x1, check
    lui	x10, %lo(__stringlit_16)
    addi  x10, x10, %lo(__stringlit_16)
	addi	x11, x0, 112
	addi	x12, x0, 16
    jal   x1, printf
    lui	x11, %lo(__stringlit_5)
    addi  x11, x11, %lo(__stringlit_5)
	addi	x12, x11, 0
    lui	x10, %lo(__stringlit_17)
    addi  x10, x10, %lo(__stringlit_17)
    jal   x1, printf
    lui	x10, %lo(__stringlit_18)
    addi  x10, x10, %lo(__stringlit_18)
	addi	x11, x0, 9
	addi	x12, x0, 1
    jal   x1, printf
	addi	x10, x0, 0
	lw	x1, 4(x2)
	addi	x2, x2, 16
    jalr   x0, x1, 0
	.type	main, @function
	.size	main, . - main
