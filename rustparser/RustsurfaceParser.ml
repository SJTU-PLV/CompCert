
(* This generated code requires the following version of MenhirLib: *)

let () =
  MenhirLib.StaticVersion.require_20220210

module MenhirBasics = struct
  
  exception Error
  
  let _eRR =
    fun _s ->
      raise Error
  
  type token = 
    | WHILE
    | WHERE
    | UINT8
    | UINT64
    | UINT32
    | UINT16
    | TRUE
    | SUBS
    | STR_LITERAL of (
# 9 "rustparser/RustsurfaceParser.mly"
       (string)
# 28 "rustparser/RustsurfaceParser.ml"
  )
    | STRUCT
    | SEMICOLON
    | RPAREN
    | RETURN
    | REF
    | RBRACE
    | RARROWW
    | RARROW
    | RANGLE
    | PREF
    | ORIGIN of (
# 6 "rustparser/RustsurfaceParser.mly"
       (string)
# 43 "rustparser/RustsurfaceParser.ml"
  )
    | OR
    | NOT
    | NE
    | MUT
    | MATCH
    | LPAREN
    | LOOP
    | LET
    | LE
    | LBRACE
    | LANGLE
    | INT8
    | INT64
    | INT32
    | INT16
    | INT of (
# 8 "rustparser/RustsurfaceParser.mly"
       (int)
# 63 "rustparser/RustsurfaceParser.ml"
  )
    | IN
    | IF
    | ID of (
# 5 "rustparser/RustsurfaceParser.mly"
       (string)
# 70 "rustparser/RustsurfaceParser.ml"
  )
    | GE
    | FN
    | FLOAT64
    | FLOAT32
    | FALSE
    | EQ
    | EOF
    | ENUM
    | ELSE
    | DOT
    | DIV
    | CONTINUE
    | COMMA
    | COLON2
    | COLON
    | CASE
    | BREAK
    | BOX
    | BOOL
    | ASTERISK
    | ASSIGN
    | AS
    | AND
    | ADD
  
end

include MenhirBasics

# 1 "rustparser/RustsurfaceParser.mly"
  
open Rustsurface

# 105 "rustparser/RustsurfaceParser.ml"

module Tables = struct
  
  include MenhirBasics
  
  let token2terminal : token -> int =
    fun _tok ->
      match _tok with
      | ADD ->
          63
      | AND ->
          62
      | AS ->
          61
      | ASSIGN ->
          60
      | ASTERISK ->
          59
      | BOOL ->
          58
      | BOX ->
          57
      | BREAK ->
          56
      | CASE ->
          55
      | COLON ->
          54
      | COLON2 ->
          53
      | COMMA ->
          52
      | CONTINUE ->
          51
      | DIV ->
          50
      | DOT ->
          49
      | ELSE ->
          48
      | ENUM ->
          47
      | EOF ->
          46
      | EQ ->
          45
      | FALSE ->
          44
      | FLOAT32 ->
          43
      | FLOAT64 ->
          42
      | FN ->
          41
      | GE ->
          40
      | ID _ ->
          39
      | IF ->
          38
      | IN ->
          37
      | INT _ ->
          36
      | INT16 ->
          35
      | INT32 ->
          34
      | INT64 ->
          33
      | INT8 ->
          32
      | LANGLE ->
          31
      | LBRACE ->
          30
      | LE ->
          29
      | LET ->
          28
      | LOOP ->
          27
      | LPAREN ->
          26
      | MATCH ->
          25
      | MUT ->
          24
      | NE ->
          23
      | NOT ->
          22
      | OR ->
          21
      | ORIGIN _ ->
          20
      | PREF ->
          19
      | RANGLE ->
          18
      | RARROW ->
          17
      | RARROWW ->
          16
      | RBRACE ->
          15
      | REF ->
          14
      | RETURN ->
          13
      | RPAREN ->
          12
      | SEMICOLON ->
          11
      | STRUCT ->
          10
      | STR_LITERAL _ ->
          9
      | SUBS ->
          8
      | TRUE ->
          7
      | UINT16 ->
          6
      | UINT32 ->
          5
      | UINT64 ->
          4
      | UINT8 ->
          3
      | WHERE ->
          2
      | WHILE ->
          1
  
  and error_terminal =
    0
  
  and token2value : token -> Obj.t =
    fun _tok ->
      match _tok with
      | ADD ->
          Obj.repr ()
      | AND ->
          Obj.repr ()
      | AS ->
          Obj.repr ()
      | ASSIGN ->
          Obj.repr ()
      | ASTERISK ->
          Obj.repr ()
      | BOOL ->
          Obj.repr ()
      | BOX ->
          Obj.repr ()
      | BREAK ->
          Obj.repr ()
      | CASE ->
          Obj.repr ()
      | COLON ->
          Obj.repr ()
      | COLON2 ->
          Obj.repr ()
      | COMMA ->
          Obj.repr ()
      | CONTINUE ->
          Obj.repr ()
      | DIV ->
          Obj.repr ()
      | DOT ->
          Obj.repr ()
      | ELSE ->
          Obj.repr ()
      | ENUM ->
          Obj.repr ()
      | EOF ->
          Obj.repr ()
      | EQ ->
          Obj.repr ()
      | FALSE ->
          Obj.repr ()
      | FLOAT32 ->
          Obj.repr ()
      | FLOAT64 ->
          Obj.repr ()
      | FN ->
          Obj.repr ()
      | GE ->
          Obj.repr ()
      | ID _v ->
          Obj.repr _v
      | IF ->
          Obj.repr ()
      | IN ->
          Obj.repr ()
      | INT _v ->
          Obj.repr _v
      | INT16 ->
          Obj.repr ()
      | INT32 ->
          Obj.repr ()
      | INT64 ->
          Obj.repr ()
      | INT8 ->
          Obj.repr ()
      | LANGLE ->
          Obj.repr ()
      | LBRACE ->
          Obj.repr ()
      | LE ->
          Obj.repr ()
      | LET ->
          Obj.repr ()
      | LOOP ->
          Obj.repr ()
      | LPAREN ->
          Obj.repr ()
      | MATCH ->
          Obj.repr ()
      | MUT ->
          Obj.repr ()
      | NE ->
          Obj.repr ()
      | NOT ->
          Obj.repr ()
      | OR ->
          Obj.repr ()
      | ORIGIN _v ->
          Obj.repr _v
      | PREF ->
          Obj.repr ()
      | RANGLE ->
          Obj.repr ()
      | RARROW ->
          Obj.repr ()
      | RARROWW ->
          Obj.repr ()
      | RBRACE ->
          Obj.repr ()
      | REF ->
          Obj.repr ()
      | RETURN ->
          Obj.repr ()
      | RPAREN ->
          Obj.repr ()
      | SEMICOLON ->
          Obj.repr ()
      | STRUCT ->
          Obj.repr ()
      | STR_LITERAL _v ->
          Obj.repr _v
      | SUBS ->
          Obj.repr ()
      | TRUE ->
          Obj.repr ()
      | UINT16 ->
          Obj.repr ()
      | UINT32 ->
          Obj.repr ()
      | UINT64 ->
          Obj.repr ()
      | UINT8 ->
          Obj.repr ()
      | WHERE ->
          Obj.repr ()
      | WHILE ->
          Obj.repr ()
  
  and default_reduction =
    (8, "\000\000\000\000\000\0005\0002\000\000\000\000\000\000DA\000k\000\000\000wuv\000?\000\000\000ptrs\000~\000\000\000xy\000\000q\000{\000\000G\000\000\000\000z|}\000\000\n\000j\000\000\000\000\000\000\000\000\000\000\000\020\000.\000\000\000\018\019\000\000\000\000\021\000\000\000\029\000\000\000\000\000\000\026\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\000\000\000\000\000-\000\023\000\030\000\017\000\000\000\000\000\000\000\000\000\000\000\000\000\00067\000\000HK\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\000d\000\000\000\000\000fe\000\000^\000\000\000\000\000a\000\000\000\000\000\000YZ\000\000]\000\000\\\0009J\000\000\000\000L\007\000o\000i\000;\000\000[\0000\000\000\000/\000\000\000\000\012\000\000\000\000\000=\000\000\000\016\000\014\000\011\000\000U\000V\000R\000TS\001\000W")
  
  and error =
    (64, "\000 \000\000\000A\000\000\000\000\000\000\001\000\000\000 \016\000\003\000\000\000\000\000\000(\000\000\000\000\000\000\000 \000\000\000\b\000\000\000(\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000 \000\000\000\000\000\000\000\000\000\000\000\000\000 \016\000\002\000\000\000\000 \025(\002\000\000\b\b\000\000\000\000\000\000\002\000\000\000\b\000\000\000\000\000 \025 \002\000\000\b\b \025(\002\000\000\b\b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\001\000\000\000\000\000\000\000\000\000\002\000\022\002\000 \177p\000`\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\022\002\b\160\177p\000`\000\000\000\000\000\000\000\000\022\002\000\160\177p\000`\022\002\000 \177p\000`\000\b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000 \025 \003\000\000\b\b\000\000\000\000\000\000\000\000\000\000\000!\000\000\000\000\000\000\000 \000\000\000\000\022\n\000 \177p\000`\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\022\002\000 \177p\000`\000\000\000\000\000\000\000\000\000\000 \000\000\000\000\000\000\000\000\000\000\000\000\000\000\b\000\000\000\000\b\000\022\n\000 \177p\000`\000\000\000\000\000\000\000\000\000\b\000\000\000\000\000\000\000\000@\000\000\000\000\000\022\002\000 \177p\000` \025 \002\000\000\b\b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\000\000\000\000\b\000\000\t\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000!\000\000\000\000\000\000\000 \000\000\000\000\000\b\000\000\001\000\000\000\000\b\000\000\000\000\000\000 \000@\002\000\000\000\000\022\002\000 \177p\000` \000\000\002\000\000\000\000\000\000\000\002\000\000\000\000A\215\002z\011\b\016\208\001\194\002 \t\b\000P\000\000\000\000\000\000\000\000\001\194\002 \t\b\000P\000\000\000\000\000\000\000\000\001\194\002\160\t\b\000P\001\194\002 \t\b\000P\001\202\002 \t\b\000P\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\153%'\000\132l\027\000\000\000\000\001\000\000\000\000\153%'\000\132h\027\001\194\002 \t\b\000P\000\000\000\000\000\000\000\000\000\000\000 \000\000\000\000\001\194\002 \t\b\000P\001\194\002 \t\b\000P\000\000\000\000\000\000\000\000\000\153%'\000\132h\027\001\202\002 \t\b\000P\000\136%%\000\132h\027\001\194\002 \t\b\000P\000\153%'\000\132h\027\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\001\194\002 \t\b\000P\000\153%'\000\132h\027\001\194\002 \t\b\000P\000\153%'\000\132h\027\001\194\002 \t\b\000P\000\153%'\000\132h\027\001\194\002 \t\b\000P\000\153%'\000\132h\027\001\194\002 \t\b\000P\000\153%'\000\132h\027\001\194\002 \t\b\000P\000\153%'\000\132h\027\001\194\002 \t\b\000P\000\153%'\000\132h\027\001\194\002 \t\b\000P\000\153%'\000\132h\027\001\194\002 \t\b\000P\000\153%'\000\132h\027\001\194\002 \t\b\000P\000\153%'\000\132h\027\001\202\002 \t\b\000P\000\000\000\000\000\000\000\000\001\194\002 \t\b\000P\000\153%'\000\132h\027\001\194\002 \t\b\000P\000\153%'\000\132h\027\000\b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\136%%\000\132`\027\000\000\000\000\000\000\000\000\000\136%%\000\132`\027\000\000\000\000\000\000\000\000\000\136%%\000\132`\027\000\000\000\000\000\000\000\000\000\153%'\000\132h\027\001\194\002 \t\b\000P\000\153%'\000\132h\027\000\153%'\000\132h\027\000\153%'\000\132h\027\000\128%'\000\132`\027A\215\002z\011\b\016\208\001\211\002 \t\b\000P\000\145%%\000\132`\027\001\194\002 \t\b\000P\000\128%'\000\132`\027\000\000\016\000\001\000\000\000\000\000\000\128\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\b\128\000\000\000\012\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\128\000\000\000\000\000\000\000\000\002\000\000\000\000A\215\002z\011\b\016\208\000\000\000\002\000\000\000\000A\215\002z\011\b\016\208\000\000\000\000\001\000\000\000\000\000\000\000\000\000\002\000\022\002\000 \177p\000`\000\017\000\000\000\000\000\b\001\194\002 \t\b\000P\000\145%'\000\132d\027\000\001\000\000\001\000\000\000\000\000\000\000\000\000\002\000\001\194\002 \t\b\000P\000\129%%\000\132h\027\000\001\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\145%%\000\132`\027A\215\002z\011\b\016\208\001\194\002 \t\b\000P\000\128%'\000\132`\027A\215\002z\011\b\016\208\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\000\000\000\000\000\000A\215\002z\011\b\016\208\000\000\000\000\000\000\000\000\000\145%%\000\132`\027\001\194\002 \t\b\000P\000\145%'\000\132d\027\000\001\000\000\001\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000A\215\002z\011\b\144\208\000\000\000\002\000\000\000\000A\215\002z\011\b\016\208\000\001\000\000\000\000\000\000A\215\002z\011\b\016\208\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000A\215\002z\011\b\016\208\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000A\215\002z\011\b\016\208\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\b\128 \000\000\b\000\000\b\016\000\001\000\000\000\000\b\000\000\000\000\b\000\000\b\016\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\016\000\001\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000A\215\002z\011\b\016\208\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000A\215\002z\011\b\016\208\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000 \016\000\003\000\000\000\000 \016\000\002\000\000\000\000\000\016\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\001\000 \000\000\b\000\022\002\000 \177p\000`\000\b\000\000\000\000\b\000\022\002\000 \177p\000`\000\000\000\000\000\000\000\000\000\b\000\000\000\000\000\000\000\001\000\000\000\000\b
  
  and start =
    1
  
  and action =
    ((16, "\000\017\0001\000L\000B\000\028\000B\000\000\000Z\000\000\000\190\000\150\000\"\000~\001B\000\150\000\000\000\000\000F\000\000\000\023\000<\tZ\000\000\000\000\000\000\b\206\000\000\tZ\tZ\000\146\000\000\000\000\000\000\000\000\000\236\000\000\000T\000\140\tZ\000\000\000\000\000\218\tZ\000\000\001\028\000\000\000|\tZ\000\000\001:\0014\tZ\001\152\000\000\000\000\000\000\000\014\000\n\000\000\001L\000\000\001\030\000T\001L\000\n\001x\000\002\tZ\000\002\001X\000\003\000\003\000\000\000\003\000\000\000\003\000\003\000\003\000\000\000\000\000b\001H\000\184\000\003\000\000\001~\000\003\000\003\000\000\001\014\t\164\007\140\000\003\001d\001t\000\000\000\003\001\186\000\003\002\016\000\003\002f\000\003\002\188\000\003\003\018\000\003\003h\000\003\003\190\000\003\004\020\000\003\004j\000\003\004\192\t\164\000\000\000\003\005\022\000\003\005l\001\182\000\000\007\226\000\000\b8\000\000\t\026\000\000\005\194\000\003\006\024\006n\006\196\007\140\000\003\t\164\007\140\000\003\007\226\000\007\000\200\001\136\000\000\000\000\000\023\001\156\000\000\000\000\001\204\001\190\000\003\001\192\000\003\001\176\001\152\tZ\000\246\t\182\007\026\000\154\001\154\000\003\007\226\000\154\000\000\001\234\000\000\b8\000\003\000\003\b8\000\003\000\000\000\000\001\162\000\003\000\000\b\142\n\002\0076\000\154\001\244\000\000\001\248\000\003\001\220\000\003\001\252\000\003\000\000\000\000\002\006\000\003\000\000\002\012\000\003\000\000\002\014\000\000\000\000\000H\000\007\000\210\000\007\000\000\000\000\002$\000\000\002\"\000\000\000\030\000\000\002$\000\003\000\000\002(\000\000\002\012\000\003\0022\000\000\002\004\000L\000\190\000\230\000\000\002\006\001D\tZ\000\214\tZ\000\000\002>\000\152\002\006\000\000\002\006\000\000\002:\000\000\000F\000\242\000\000\001H\000\000\001\148\000\000\001\176\000\000\000\000\000\000\001\254\000\000"), (16, "\001\030\000\221\000\006\000*\000\029\000\221\001\"\001&\001*\000\017\001y\001:\002&\001.\001y\000\n\002:\000\029\001\014\000!\000\029\0012\000!\002\014\002.\0016\002f\002n\000R\002\170\000\229\000\253\000\205\000\246\002:\001>\002J\002\174\001B\003~\000\193\000\221\002N\001R\000R\000\006\000J\002\238\001!\000\193\002\186\000\201\001!\000\018\002J\002\190\001V\000U\001^\000\230\000U\000U\003.\000\"\000U\000N\000\022\000U\000\193\000\014\000U\0002\000U\000\014\001\021\000U\000\246\001\005\000U\000U\000U\0015\003~\0006\000V\000z\001\005\001\005\001!\000U\001\005\0009\001\173\001\005\000U\000.\000\154\000*\000U\000U\001\029\000U\001F\001\029\001\029\001\005\000\253\001\029\000U\000U\001\029\000U\000U\001\029\000\190\001\029\002\138\000\021\001N\000\237\000\193\001\029\001\029\001\029\002>\000\253\003\142\001\005\003\178\000\193\000\193\000\006\001\029\000\193\001\133\001\005\000\193\001\029\001\133\002F\000\170\001\029\001\029\000i\001\029\003\146\000i\000i\000\193\000\014\000i\001\029\001\029\000i\001\029\001\029\000i\0036\000i\003\162\000\182\001j\000\246\001\t\000i\000i\000i\001=\003~\000\202\000\193\000\206\001\t\001\t\000\006\000i\001\t\0001\000\193\001\t\000i\000\242\000\250\002~\001z\000i\000\133\000i\003\154\000\133\000\133\001\t\001\002\000\133\000i\000i\000\133\000i\000i\000\133\001\n\000\133\001\026\001J\001j\000\246\000*\000\133\000\133\000\133\001A\003~\000\006\000:\003\186\000\253\000\253\001Z\000\133\000\253\002\198\001\t\000\253\000\133\001]\001~\000\006\001z\001\130\000\141\000\133\001\238\000\141\000\141\000\253\002B\000\141\001\138\000\133\000\141\000\133\000\133\000\141\000\246\000\141\002R\002^\001j\0011\003~\000\141\000\141\000\141\002b\002j\002r\000\253\000\246\002v\002\142\002\162\000\141\0019\003~\000\253\002\226\000\141\002\234\002\242\002\250\001z\000\141\000\137\000\141\003\n\000\137\000\137\003\022\003\"\000\137\000\141\000\141\000\137\000\141\000\141\000\137\003F\000\137\003N\003^\001j\003j\003r\000\137\000\137\000\137\003z\003\130\003\150\003\174\003\198\003\251\000\000\000\000\000\137\000\000\000\000\000\000\000\000\000\137\000\000\000\000\000\000\001z\000\137\001r\000\137\000\000\000\153\000\153\000\000\000\000\000\153\000\137\000\137\000\153\000\137\000\137\000\153\000\000\000\153\000\000\000\000\001j\000\000\000\000\000\153\000\153\000\153\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\153\000\000\000\000\000\000\000\000\000\153\000\000\000\000\000\000\001z\001\130\000\129\000\153\000\000\000\129\000\129\000\000\000\000\000\129\001\138\000\153\000\129\000\153\001\154\000\129\000\000\000\129\000\000\000\000\001j\000\000\000\000\000\129\000\129\000\129\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\129\000\000\000\000\000\000\000\000\000\129\000\000\000\000\000\000\001z\001\130\001r\000\129\000\000\000\169\000\169\000\000\000\000\000\169\001\138\000\129\001\146\000\129\000\129\000\169\000\000\001\170\000\000\000\000\001j\000\000\000\000\001\178\000\169\001\186\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\194\000\000\000\000\000\000\000\000\001\202\000\000\000\000\000\000\001z\001\130\001r\000\169\000\000\000\165\000\165\000\000\000\000\000\165\001\138\000\169\001\146\000\169\001\154\000\165\000\000\000\165\000\000\000\000\001j\000\000\000\000\001\178\000\165\001\186\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\194\000\000\000\000\000\000\000\000\000\165\000\000\000\000\000\000\001z\001\130\001r\000\165\000\000\000\145\000\145\000\000\000\000\000\145\001\138\000\165\000\145\000\165\001\154\000\145\000\000\000\145\000\000\000\000\001j\000\000\000\000\000\145\000\145\000\145\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\145\000\000\000\000\000\000\000\000\000\145\000\000\000\000\000\000\001z\001\130\001r\000\145\000\000\000\157\000\157\000\000\000\000\000\157\001\138\000\145\000\157\000\145\001\154\000\157\000\000\000\157\000\000\000\000\001j\000\000\000\000\000\157\000\157\000\157\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\157\000\000\000\000\000\000\000\000\000\157\000\000\000\000\000\000\001z\001\130\001r\000\157\000\000\000\149\000\149\000\000\000\000\000\149\001\138\000\157\000\149\000\157\001\154\000\149\000\000\000\149\000\000\000\000\001j\000\000\000\000\000\149\000\149\000\149\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\149\000\000\000\000\000\000\000\000\000\149\000\000\000\000\000\000\001z\001\130\001r\000\149\000\000\000\161\000\161\000\000\000\000\000\161\001\138\000\149\001\146\000\149\001\154\000\161\000\000\000\161\000\000\000\000\001j\000\000\000\000\001\178\000\161\001\186\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\194\000\000\000\000\000\000\000\000\000\161\000\000\000\000\000\000\001z\001\130\001r\000\161\000\000\000m\000m\000\000\000\000\000m\001\138\000\161\001\146\000\161\001\154\001\162\000\000\001\170\000\000\000\000\001j\000\000\000\000\001\178\000m\001\186\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\194\000\000\000\000\000\000\000\000\001\202\000\000\000\000\000\000\001z\001\130\001r\000m\000\000\000\173\000\173\000\000\000\000\000\173\001\138\000m\001\146\001\226\001\154\000\173\000\000\001\170\000\000\000\000\001j\000\000\000\000\001\178\000\173\001\186\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\194\000\000\000\000\000\000\000\000\001\202\000\000\000\000\000\000\001z\001\130\001r\000\173\000\000\000}\000}\000\000\000\000\000}\001\138\000\173\001\146\000\173\001\154\000}\000\000\001\170\000\000\000\000\001j\000\000\000\000\001\178\000}\001\186\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\194\000\000\000\000\000\000\000\000\001\202\000\000\000\000\000\000\001z\001\130\000]\000}\000\000\000]\000]\000\000\000\000\000]\001\138\000}\000]\000}\001\154\000]\000\000\000]\000\000\000\000\001j\000\000\000\000\000]\000]\000]\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000]\000\000\000\000\000\000\000\000\000]\000\000\000\000\000\000\001z\000]\000a\000]\000\000\000a\000a\000\000\000\000\000a\000]\000]\000a\000]\000]\000a\000\000\000a\000\000\000\000\001j\000\000\000\000\000a\000a\000a\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\000\000\000\000\000\000\000\000\000a\000\000\000\000\000\000\001z\000a\000y\000a\000\000\000y\000y\000\000\000\000\000y\000a\000a\000y\000a\000a\000y\000\000\000y\000\000\000\000\001j\000\000\000\000\000y\000y\000y\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\000\000\000\000\000\000\000\000\000y\000\000\000\000\000\000\001z\001\130\000U\000y\000\000\000U\000\000\000\000\000\000\000U\001\138\000y\000U\000y\000y\000U\000U\000U\000\000\000U\000U\000\000\000\000\000U\002\134\000U\000U\000\000\000\000\000U\000\000\000U\000\000\000\000\000U\000\000\000\000\000U\002\218\000U\000\000\000\000\000\000\000U\000U\000\000\000\000\001F\000U\000\000\000\000\000\000\000\000\000U\000U\000\000\000U\000U\000U\001r\000\000\001F\001\157\000\t\000\000\000\000\001\157\000U\000U\001\146\000U\000U\001\162\000\000\001\170\000\000\000\000\001j\000\000\000\000\001\178\002\"\001\186\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\194\000\000\000\000\000\000\000\000\001\202\000\000\000\000\000\000\001z\001\130\001r\001\210\000\000\000\000\001\246\000\000\000\000\001\177\001\138\001\218\001\146\001\226\001\154\001\162\000\000\001\170\000\000\000\000\001j\000\000\000\000\001\178\0026\001\186\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\194\000\000\000\000\000\000\000\000\001\202\000\000\000\000\000\000\001z\001\130\001r\002\150\000\000\001\137\001\254\000\000\000\000\001\137\001\138\001\218\001\146\001\226\001\154\001\162\000\000\001\170\000\000\000\000\001j\000\000\000\000\001\178\002\182\001\186\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\194\000\000\000\000\000\000\000\000\001\202\000\000\000\000\000\000\001z\001\130\001r\000\000\000\000\001}\000\000\000\000\000\000\001}\001\138\001\218\001\146\001\226\001\154\001\162\000\000\001\170\000\000\000\000\001j\000\000\000\000\001\178\000\000\001\186\000\000\000\000\000\000\000\245\000\000\000\245\000\245\000\000\001\194\000\000\000\000\000\000\000\000\001\202\000\245\000\000\000\000\001z\001\130\000\000\000j\000\000\000\000\000\000\000\245\000\000\000\245\001\138\002\210\000\000\001\226\001\154\000\245\000\000\000\245\000\245\000\000\000\000\000\000\000\245\000\000\000\245\000\245\000\245\000\000\000\000\001r\000\000\000\000\000\000\002\006\000\000\000\000\000\000\000\000\000\000\001\146\000\245\000\245\001\162\000\000\001\170\000\000\000\000\001j\000\000\000\000\001\178\000\000\001\186\000\000\000\000\000\000\000Z\000\000\000^\000b\000\000\001\194\000\000\000\000\000\000\001\017\001\202\000f\000\000\000\000\001z\001\130\000\000\000\000\000\000\000\000\000\000\000r\000\000\000v\001\138\001\218\000\000\001\226\001\154\000~\000\000\000\130\000\134\000\000\000\000\000\000\000\138\000\000\000\146\000\158\000\162\001\"\001&\001*\000\000\001\153\000\005\000\000\001.\001\153\001\"\001&\001*\000\000\000\166\000\174\0012\001.\000\000\000\000\0016\000\000\000\000\000\000\000\000\0012\000\000\000\000\000\000\0016\001>\000\000\000\000\001B\000\000\000\000\000\000\000\000\001R\001>\000\000\000\000\002\130\000\000\000\000\000\000\000\000\001R\001\"\001&\001*\001V\000\000\001^\000\000\001.\000\000\000\000\000\000\000\000\001V\000\000\001^\0012\000\000\000\000\000\000\0016\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001>\000\000\000\000\002\214\000\000\000\000\000\000\000\000\001R\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001V\000\000\001^"))
  
  and lhs =
    (8, "\000\030\030\030\029\029\029\028\028\028\027\026\025\025\025\025\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\023\023\022\022\021\021\021\020\020\020\019\018\018\017\017\016\016\015\015\014\014\014\r\r\r\012\011\n\n\n\t\t\t\t\t\t\t\t\t\t\b\007\007\007\007\007\007\007\006\006\006\006\006\006\006\006\006\006\006\005\004\003\003\003\002\001\001\001\001\001\001\001\001\001\001\001\001\001\001\001")
  
  and goto =
    ((16, "\000\t\000\000\000'\000\031\000\000\000\029\000\000\000\000\000\000\000\t\000\005\000\000\000\000\000\000\000\003\000\000\000\000\000\000\000\000\000\b\000\000\000p\000\000\000\000\000\000\000\150\000\000\000\182\000\224\000\000\000\000\000\000\000\000\000\000\000\202\000\000\000\204\000\000\000\002\000\000\000\000\000\000\000\252\000\000\000\000\000\000\000\000\000(\000\000\000\000\000\000\000\254\000\234\000\000\000\000\000\000\000\000\000\230\000\000\000\000\000\000\000\000\001f\000\000\001\\\000\000\001x\001\152\001~\000\000\000\006\000H\000\000\000v\000\000\000\140\000\148\001\026\000\000\000\000\000\000\000\000\000\000\001\028\000\000\000\000\001\"\001$\000\000\000\000\000.\000\000\001(\000\000\000\000\000\000\001*\000\000\001,\000\000\0010\000\000\0018\000\000\001>\000\000\001F\000\000\001J\000\000\001L\000\000\001N\000\000\001R\000\000\000N\000\000\001T\000\000\001X\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001Z\000\000\000\000\000\000\000\000\000\166\001\\\000\000\001`\000\000\000\012\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\188\000\000\000\196\000\000\000\000\001\158\000\000\001h\000\000\001\156\000\000\001n\000\000\001\158\000\000\000\000\000\000\000\000\000\204\001v\000\000\000\210\000\000\000\000\000\000\000\218\000\000\000\000\001T\000\000\001\162\000\000\000\000\000\000\000\226\000\000\000\248\000\000\001\000\000\000\000\000\000\000\001\b\000\000\000\000\001\014\000\000\000\000\000\000\000\000\000\000\000:\000\000\000@\000\000\000\000\000\000\000\000\000\000\000\000\000$\000\000\000\000\001\022\000\000\000\000\000\000\000\000\001\030\000\000\000\000\000\000\001~\001\142\000\000\000\000\001|\000\000\000n\000\000\000z\000\000\000\000\000\000\001~\000\000\001\128\000\000\000\000\000\000\000R\000d\000\000\000z\000\000\000\140\000\000\000\152\000\000\000\000\000\000\000\000\000\000"), (8, "\243\244/\n\253\254\b\007\150\177\218\018\017\0162Y\151\202\203\246\150/\248\250\211\213\207\180\151\202\203\150<1\150Y\214\213\207\205\202\203\205\202\203\243\244\\Y\207\252Y\207{\243\244\2329\209\245\136\208\232\\\246\243\244\248\250v\247Y\235\246\243\244\248\250\234\249\243\244Y\135\246\251Y\248\250\177\215\0288\246\134Y\248\250\131\246\177\200\248\250\177\197Y\180\177\194Y\177\1867Y\177\179Y\180\177\193Y\180$&Y\180-5\180\177\1906\180\177\192Y\180\177\196Y\177\199;Y\177\217Y\180\177\222Y\180YYY\180YY\180YYY\180Y\129\127\180Y}ZY^bdYfYYYhYYjYYYlYnprYtxYz\133\139Y\141@B\220\170EF\165\159\168\167\173\184\226\227\241\238\240"))
  
  and semantic_action =
    [|
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let _menhir_s = _menhir_env.MenhirLib.EngineTypes.current in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _endpos = _startpos in
        let _v : (
# 90 "rustparser/RustsurfaceParser.mly"
      (expr list)
# 403 "rustparser/RustsurfaceParser.ml"
        ) = 
# 196 "rustparser/RustsurfaceParser.mly"
    ( [] )
# 407 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = e;
          MenhirLib.EngineTypes.startp = _startpos_e_;
          MenhirLib.EngineTypes.endp = _endpos_e_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let e : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 428 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_e_ in
        let _endpos = _endpos_e_ in
        let _v : (
# 90 "rustparser/RustsurfaceParser.mly"
      (expr list)
# 436 "rustparser/RustsurfaceParser.ml"
        ) = 
# 197 "rustparser/RustsurfaceParser.mly"
             ( [e] )
# 440 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = es;
          MenhirLib.EngineTypes.startp = _startpos_es_;
          MenhirLib.EngineTypes.endp = _endpos_es_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _2;
            MenhirLib.EngineTypes.startp = _startpos__2_;
            MenhirLib.EngineTypes.endp = _endpos__2_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _menhir_s;
              MenhirLib.EngineTypes.semv = e;
              MenhirLib.EngineTypes.startp = _startpos_e_;
              MenhirLib.EngineTypes.endp = _endpos_e_;
              MenhirLib.EngineTypes.next = _menhir_stack;
            };
          };
        } = _menhir_stack in
        let es : (
# 90 "rustparser/RustsurfaceParser.mly"
      (expr list)
# 473 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic es in
        let _2 : unit = Obj.magic _2 in
        let e : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 479 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_e_ in
        let _endpos = _endpos_es_ in
        let _v : (
# 90 "rustparser/RustsurfaceParser.mly"
      (expr list)
# 487 "rustparser/RustsurfaceParser.ml"
        ) = 
# 198 "rustparser/RustsurfaceParser.mly"
                                    ( e::es )
# 491 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let _menhir_s = _menhir_env.MenhirLib.EngineTypes.current in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _endpos = _startpos in
        let _v : (
# 109 "rustparser/RustsurfaceParser.mly"
      (pat list)
# 509 "rustparser/RustsurfaceParser.ml"
        ) = 
# 243 "rustparser/RustsurfaceParser.mly"
    ( [] )
# 513 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = p;
          MenhirLib.EngineTypes.startp = _startpos_p_;
          MenhirLib.EngineTypes.endp = _endpos_p_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let p : (
# 108 "rustparser/RustsurfaceParser.mly"
      (pat)
# 534 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic p in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_p_ in
        let _endpos = _endpos_p_ in
        let _v : (
# 109 "rustparser/RustsurfaceParser.mly"
      (pat list)
# 542 "rustparser/RustsurfaceParser.ml"
        ) = 
# 244 "rustparser/RustsurfaceParser.mly"
                 ( [p] )
# 546 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = args;
          MenhirLib.EngineTypes.startp = _startpos_args_;
          MenhirLib.EngineTypes.endp = _endpos_args_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _2;
            MenhirLib.EngineTypes.startp = _startpos__2_;
            MenhirLib.EngineTypes.endp = _endpos__2_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _menhir_s;
              MenhirLib.EngineTypes.semv = p;
              MenhirLib.EngineTypes.startp = _startpos_p_;
              MenhirLib.EngineTypes.endp = _endpos_p_;
              MenhirLib.EngineTypes.next = _menhir_stack;
            };
          };
        } = _menhir_stack in
        let args : (
# 109 "rustparser/RustsurfaceParser.mly"
      (pat list)
# 579 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic args in
        let _2 : unit = Obj.magic _2 in
        let p : (
# 108 "rustparser/RustsurfaceParser.mly"
      (pat)
# 585 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic p in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_p_ in
        let _endpos = _endpos_args_ in
        let _v : (
# 109 "rustparser/RustsurfaceParser.mly"
      (pat list)
# 593 "rustparser/RustsurfaceParser.ml"
        ) = 
# 245 "rustparser/RustsurfaceParser.mly"
                                            ( p :: args )
# 597 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let _menhir_s = _menhir_env.MenhirLib.EngineTypes.current in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _endpos = _startpos in
        let _v : (
# 99 "rustparser/RustsurfaceParser.mly"
      ((id * ty) list)
# 615 "rustparser/RustsurfaceParser.ml"
        ) = 
# 156 "rustparser/RustsurfaceParser.mly"
    ( [] )
# 619 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = t;
          MenhirLib.EngineTypes.startp = _startpos_t_;
          MenhirLib.EngineTypes.endp = _endpos_t_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _2;
            MenhirLib.EngineTypes.startp = _startpos__2_;
            MenhirLib.EngineTypes.endp = _endpos__2_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _menhir_s;
              MenhirLib.EngineTypes.semv = x;
              MenhirLib.EngineTypes.startp = _startpos_x_;
              MenhirLib.EngineTypes.endp = _endpos_x_;
              MenhirLib.EngineTypes.next = _menhir_stack;
            };
          };
        } = _menhir_stack in
        let t : (
# 98 "rustparser/RustsurfaceParser.mly"
      (ty)
# 652 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic t in
        let _2 : unit = Obj.magic _2 in
        let x : (
# 5 "rustparser/RustsurfaceParser.mly"
       (string)
# 658 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_x_ in
        let _endpos = _endpos_t_ in
        let _v : (
# 99 "rustparser/RustsurfaceParser.mly"
      ((id * ty) list)
# 666 "rustparser/RustsurfaceParser.ml"
        ) = 
# 157 "rustparser/RustsurfaceParser.mly"
                          ( [(x, t)] )
# 670 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = flds;
          MenhirLib.EngineTypes.startp = _startpos_flds_;
          MenhirLib.EngineTypes.endp = _endpos_flds_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _4;
            MenhirLib.EngineTypes.startp = _startpos__4_;
            MenhirLib.EngineTypes.endp = _endpos__4_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _;
              MenhirLib.EngineTypes.semv = t;
              MenhirLib.EngineTypes.startp = _startpos_t_;
              MenhirLib.EngineTypes.endp = _endpos_t_;
              MenhirLib.EngineTypes.next = {
                MenhirLib.EngineTypes.state = _;
                MenhirLib.EngineTypes.semv = _2;
                MenhirLib.EngineTypes.startp = _startpos__2_;
                MenhirLib.EngineTypes.endp = _endpos__2_;
                MenhirLib.EngineTypes.next = {
                  MenhirLib.EngineTypes.state = _menhir_s;
                  MenhirLib.EngineTypes.semv = x;
                  MenhirLib.EngineTypes.startp = _startpos_x_;
                  MenhirLib.EngineTypes.endp = _endpos_x_;
                  MenhirLib.EngineTypes.next = _menhir_stack;
                };
              };
            };
          };
        } = _menhir_stack in
        let flds : (
# 99 "rustparser/RustsurfaceParser.mly"
      ((id * ty) list)
# 715 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic flds in
        let _4 : unit = Obj.magic _4 in
        let t : (
# 98 "rustparser/RustsurfaceParser.mly"
      (ty)
# 721 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic t in
        let _2 : unit = Obj.magic _2 in
        let x : (
# 5 "rustparser/RustsurfaceParser.mly"
       (string)
# 727 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_x_ in
        let _endpos = _endpos_flds_ in
        let _v : (
# 99 "rustparser/RustsurfaceParser.mly"
      ((id * ty) list)
# 735 "rustparser/RustsurfaceParser.ml"
        ) = 
# 158 "rustparser/RustsurfaceParser.mly"
                                                          ( (x, t)::flds )
# 739 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = _7;
          MenhirLib.EngineTypes.startp = _startpos__7_;
          MenhirLib.EngineTypes.endp = _endpos__7_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = flds;
            MenhirLib.EngineTypes.startp = _startpos_flds_;
            MenhirLib.EngineTypes.endp = _endpos_flds_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _;
              MenhirLib.EngineTypes.semv = _5;
              MenhirLib.EngineTypes.startp = _startpos__5_;
              MenhirLib.EngineTypes.endp = _endpos__5_;
              MenhirLib.EngineTypes.next = {
                MenhirLib.EngineTypes.state = _;
                MenhirLib.EngineTypes.semv = rels;
                MenhirLib.EngineTypes.startp = _startpos_rels_;
                MenhirLib.EngineTypes.endp = _endpos_rels_;
                MenhirLib.EngineTypes.next = {
                  MenhirLib.EngineTypes.state = _;
                  MenhirLib.EngineTypes.semv = orgs;
                  MenhirLib.EngineTypes.startp = _startpos_orgs_;
                  MenhirLib.EngineTypes.endp = _endpos_orgs_;
                  MenhirLib.EngineTypes.next = {
                    MenhirLib.EngineTypes.state = _;
                    MenhirLib.EngineTypes.semv = x;
                    MenhirLib.EngineTypes.startp = _startpos_x_;
                    MenhirLib.EngineTypes.endp = _endpos_x_;
                    MenhirLib.EngineTypes.next = {
                      MenhirLib.EngineTypes.state = _menhir_s;
                      MenhirLib.EngineTypes.semv = _1;
                      MenhirLib.EngineTypes.startp = _startpos__1_;
                      MenhirLib.EngineTypes.endp = _endpos__1_;
                      MenhirLib.EngineTypes.next = _menhir_stack;
                    };
                  };
                };
              };
            };
          };
        } = _menhir_stack in
        let _7 : unit = Obj.magic _7 in
        let flds : (
# 101 "rustparser/RustsurfaceParser.mly"
      ((id * (ty list)) list)
# 797 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic flds in
        let _5 : unit = Obj.magic _5 in
        let rels : (
# 111 "rustparser/RustsurfaceParser.mly"
      ((id * id) list)
# 803 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic rels in
        let orgs : (
# 110 "rustparser/RustsurfaceParser.mly"
      (id list)
# 808 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic orgs in
        let x : (
# 5 "rustparser/RustsurfaceParser.mly"
       (string)
# 813 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos__7_ in
        let _v : (
# 102 "rustparser/RustsurfaceParser.mly"
      (id * comp_enum * id list * (id * id) list)
# 822 "rustparser/RustsurfaceParser.ml"
        ) = 
# 174 "rustparser/RustsurfaceParser.mly"
    ( (x, flds, orgs, rels) )
# 826 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = _5;
          MenhirLib.EngineTypes.startp = _startpos__5_;
          MenhirLib.EngineTypes.endp = _endpos__5_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = rels;
            MenhirLib.EngineTypes.startp = _startpos_rels_;
            MenhirLib.EngineTypes.endp = _endpos_rels_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _;
              MenhirLib.EngineTypes.semv = orgs;
              MenhirLib.EngineTypes.startp = _startpos_orgs_;
              MenhirLib.EngineTypes.endp = _endpos_orgs_;
              MenhirLib.EngineTypes.next = {
                MenhirLib.EngineTypes.state = _;
                MenhirLib.EngineTypes.semv = x;
                MenhirLib.EngineTypes.startp = _startpos_x_;
                MenhirLib.EngineTypes.endp = _endpos_x_;
                MenhirLib.EngineTypes.next = {
                  MenhirLib.EngineTypes.state = _menhir_s;
                  MenhirLib.EngineTypes.semv = _1;
                  MenhirLib.EngineTypes.startp = _startpos__1_;
                  MenhirLib.EngineTypes.endp = _endpos__1_;
                  MenhirLib.EngineTypes.next = _menhir_stack;
                };
              };
            };
          };
        } = _menhir_stack in
        let _5 : unit = Obj.magic _5 in
        let rels : (
# 111 "rustparser/RustsurfaceParser.mly"
      ((id * id) list)
# 872 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic rels in
        let orgs : (
# 110 "rustparser/RustsurfaceParser.mly"
      (id list)
# 877 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic orgs in
        let x : (
# 5 "rustparser/RustsurfaceParser.mly"
       (string)
# 882 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos__5_ in
        let _v : (
# 104 "rustparser/RustsurfaceParser.mly"
      (id * id list * (id * id) list)
# 891 "rustparser/RustsurfaceParser.ml"
        ) = 
# 178 "rustparser/RustsurfaceParser.mly"
    ( (x, orgs, rels) )
# 895 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = x;
          MenhirLib.EngineTypes.startp = _startpos_x_;
          MenhirLib.EngineTypes.endp = _endpos_x_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let x : (
# 5 "rustparser/RustsurfaceParser.mly"
       (string)
# 916 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_x_ in
        let _endpos = _endpos_x_ in
        let _v : (
# 101 "rustparser/RustsurfaceParser.mly"
      ((id * (ty list)) list)
# 924 "rustparser/RustsurfaceParser.ml"
        ) = 
# 165 "rustparser/RustsurfaceParser.mly"
           ( [(x, [Tunit])] )
# 928 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = flds;
          MenhirLib.EngineTypes.startp = _startpos_flds_;
          MenhirLib.EngineTypes.endp = _endpos_flds_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _2;
            MenhirLib.EngineTypes.startp = _startpos__2_;
            MenhirLib.EngineTypes.endp = _endpos__2_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _menhir_s;
              MenhirLib.EngineTypes.semv = x;
              MenhirLib.EngineTypes.startp = _startpos_x_;
              MenhirLib.EngineTypes.endp = _endpos_x_;
              MenhirLib.EngineTypes.next = _menhir_stack;
            };
          };
        } = _menhir_stack in
        let flds : (
# 101 "rustparser/RustsurfaceParser.mly"
      ((id * (ty list)) list)
# 961 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic flds in
        let _2 : unit = Obj.magic _2 in
        let x : (
# 5 "rustparser/RustsurfaceParser.mly"
       (string)
# 967 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_x_ in
        let _endpos = _endpos_flds_ in
        let _v : (
# 101 "rustparser/RustsurfaceParser.mly"
      ((id * (ty list)) list)
# 975 "rustparser/RustsurfaceParser.ml"
        ) = 
# 166 "rustparser/RustsurfaceParser.mly"
                                      ( (x, [Tunit]) :: flds )
# 979 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = _4;
          MenhirLib.EngineTypes.startp = _startpos__4_;
          MenhirLib.EngineTypes.endp = _endpos__4_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = ts;
            MenhirLib.EngineTypes.startp = _startpos_ts_;
            MenhirLib.EngineTypes.endp = _endpos_ts_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _;
              MenhirLib.EngineTypes.semv = _2;
              MenhirLib.EngineTypes.startp = _startpos__2_;
              MenhirLib.EngineTypes.endp = _endpos__2_;
              MenhirLib.EngineTypes.next = {
                MenhirLib.EngineTypes.state = _menhir_s;
                MenhirLib.EngineTypes.semv = x;
                MenhirLib.EngineTypes.startp = _startpos_x_;
                MenhirLib.EngineTypes.endp = _endpos_x_;
                MenhirLib.EngineTypes.next = _menhir_stack;
              };
            };
          };
        } = _menhir_stack in
        let _4 : unit = Obj.magic _4 in
        let ts : (
# 100 "rustparser/RustsurfaceParser.mly"
      (ty list)
# 1019 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic ts in
        let _2 : unit = Obj.magic _2 in
        let x : (
# 5 "rustparser/RustsurfaceParser.mly"
       (string)
# 1025 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_x_ in
        let _endpos = _endpos__4_ in
        let _v : (
# 101 "rustparser/RustsurfaceParser.mly"
      ((id * (ty list)) list)
# 1033 "rustparser/RustsurfaceParser.ml"
        ) = 
# 168 "rustparser/RustsurfaceParser.mly"
    ( [(x, ts)] )
# 1037 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = flds;
          MenhirLib.EngineTypes.startp = _startpos_flds_;
          MenhirLib.EngineTypes.endp = _endpos_flds_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _5;
            MenhirLib.EngineTypes.startp = _startpos__5_;
            MenhirLib.EngineTypes.endp = _endpos__5_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _;
              MenhirLib.EngineTypes.semv = _4;
              MenhirLib.EngineTypes.startp = _startpos__4_;
              MenhirLib.EngineTypes.endp = _endpos__4_;
              MenhirLib.EngineTypes.next = {
                MenhirLib.EngineTypes.state = _;
                MenhirLib.EngineTypes.semv = ts;
                MenhirLib.EngineTypes.startp = _startpos_ts_;
                MenhirLib.EngineTypes.endp = _endpos_ts_;
                MenhirLib.EngineTypes.next = {
                  MenhirLib.EngineTypes.state = _;
                  MenhirLib.EngineTypes.semv = _2;
                  MenhirLib.EngineTypes.startp = _startpos__2_;
                  MenhirLib.EngineTypes.endp = _endpos__2_;
                  MenhirLib.EngineTypes.next = {
                    MenhirLib.EngineTypes.state = _menhir_s;
                    MenhirLib.EngineTypes.semv = x;
                    MenhirLib.EngineTypes.startp = _startpos_x_;
                    MenhirLib.EngineTypes.endp = _endpos_x_;
                    MenhirLib.EngineTypes.next = _menhir_stack;
                  };
                };
              };
            };
          };
        } = _menhir_stack in
        let flds : (
# 101 "rustparser/RustsurfaceParser.mly"
      ((id * (ty list)) list)
# 1088 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic flds in
        let _5 : unit = Obj.magic _5 in
        let _4 : unit = Obj.magic _4 in
        let ts : (
# 100 "rustparser/RustsurfaceParser.mly"
      (ty list)
# 1095 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic ts in
        let _2 : unit = Obj.magic _2 in
        let x : (
# 5 "rustparser/RustsurfaceParser.mly"
       (string)
# 1101 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_x_ in
        let _endpos = _endpos_flds_ in
        let _v : (
# 101 "rustparser/RustsurfaceParser.mly"
      ((id * (ty list)) list)
# 1109 "rustparser/RustsurfaceParser.ml"
        ) = 
# 170 "rustparser/RustsurfaceParser.mly"
    ( (x, ts) :: flds )
# 1113 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = _3;
          MenhirLib.EngineTypes.startp = _startpos__3_;
          MenhirLib.EngineTypes.endp = _endpos__3_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = e;
            MenhirLib.EngineTypes.startp = _startpos_e_;
            MenhirLib.EngineTypes.endp = _endpos_e_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _menhir_s;
              MenhirLib.EngineTypes.semv = _1;
              MenhirLib.EngineTypes.startp = _startpos__1_;
              MenhirLib.EngineTypes.endp = _endpos__1_;
              MenhirLib.EngineTypes.next = _menhir_stack;
            };
          };
        } = _menhir_stack in
        let _3 : unit = Obj.magic _3 in
        let e : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1147 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos__3_ in
        let _v : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1156 "rustparser/RustsurfaceParser.ml"
        ) = 
# 207 "rustparser/RustsurfaceParser.mly"
                             ( e )
# 1160 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = _2;
          MenhirLib.EngineTypes.startp = _startpos__2_;
          MenhirLib.EngineTypes.endp = _endpos__2_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _menhir_s;
            MenhirLib.EngineTypes.semv = _1;
            MenhirLib.EngineTypes.startp = _startpos__1_;
            MenhirLib.EngineTypes.endp = _endpos__1_;
            MenhirLib.EngineTypes.next = _menhir_stack;
          };
        } = _menhir_stack in
        let _2 : unit = Obj.magic _2 in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos__2_ in
        let _v : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1192 "rustparser/RustsurfaceParser.ml"
        ) = 
# 208 "rustparser/RustsurfaceParser.mly"
                   ( Eunit )
# 1196 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = i;
          MenhirLib.EngineTypes.startp = _startpos_i_;
          MenhirLib.EngineTypes.endp = _endpos_i_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let i : (
# 8 "rustparser/RustsurfaceParser.mly"
       (int)
# 1217 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic i in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_i_ in
        let _endpos = _endpos_i_ in
        let _v : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1225 "rustparser/RustsurfaceParser.ml"
        ) = 
# 210 "rustparser/RustsurfaceParser.mly"
    ( Eval (Values.Vint (Camlcoq.Z.of_sint i),
            Tint (Ctypes.I32, Ctypes.Signed)) )
# 1230 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = _1;
          MenhirLib.EngineTypes.startp = _startpos__1_;
          MenhirLib.EngineTypes.endp = _endpos__1_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos__1_ in
        let _v : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1255 "rustparser/RustsurfaceParser.ml"
        ) = 
# 212 "rustparser/RustsurfaceParser.mly"
         ( Eval (Values.Vint (Camlcoq.Z.one), bool_ty) )
# 1259 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = _1;
          MenhirLib.EngineTypes.startp = _startpos__1_;
          MenhirLib.EngineTypes.endp = _endpos__1_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos__1_ in
        let _v : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1284 "rustparser/RustsurfaceParser.ml"
        ) = 
# 213 "rustparser/RustsurfaceParser.mly"
          ( Eval (Values.Vint (Camlcoq.Z.zero), bool_ty) )
# 1288 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = x;
          MenhirLib.EngineTypes.startp = _startpos_x_;
          MenhirLib.EngineTypes.endp = _endpos_x_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let x : (
# 5 "rustparser/RustsurfaceParser.mly"
       (string)
# 1309 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_x_ in
        let _endpos = _endpos_x_ in
        let _v : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1317 "rustparser/RustsurfaceParser.ml"
        ) = 
# 214 "rustparser/RustsurfaceParser.mly"
           ( Evar x )
# 1321 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = _4;
          MenhirLib.EngineTypes.startp = _startpos__4_;
          MenhirLib.EngineTypes.endp = _endpos__4_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = e;
            MenhirLib.EngineTypes.startp = _startpos_e_;
            MenhirLib.EngineTypes.endp = _endpos_e_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _;
              MenhirLib.EngineTypes.semv = _2;
              MenhirLib.EngineTypes.startp = _startpos__2_;
              MenhirLib.EngineTypes.endp = _endpos__2_;
              MenhirLib.EngineTypes.next = {
                MenhirLib.EngineTypes.state = _menhir_s;
                MenhirLib.EngineTypes.semv = _1;
                MenhirLib.EngineTypes.startp = _startpos__1_;
                MenhirLib.EngineTypes.endp = _endpos__1_;
                MenhirLib.EngineTypes.next = _menhir_stack;
              };
            };
          };
        } = _menhir_stack in
        let _4 : unit = Obj.magic _4 in
        let e : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1361 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e in
        let _2 : unit = Obj.magic _2 in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos__4_ in
        let _v : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1371 "rustparser/RustsurfaceParser.ml"
        ) = 
# 215 "rustparser/RustsurfaceParser.mly"
                                  ( Ebox e )
# 1375 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = e;
          MenhirLib.EngineTypes.startp = _startpos_e_;
          MenhirLib.EngineTypes.endp = _endpos_e_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _2;
            MenhirLib.EngineTypes.startp = _startpos__2_;
            MenhirLib.EngineTypes.endp = _endpos__2_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _menhir_s;
              MenhirLib.EngineTypes.semv = _1;
              MenhirLib.EngineTypes.startp = _startpos__1_;
              MenhirLib.EngineTypes.endp = _endpos__1_;
              MenhirLib.EngineTypes.next = _menhir_stack;
            };
          };
        } = _menhir_stack in
        let e : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1408 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e in
        let _2 : unit = Obj.magic _2 in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos_e_ in
        let _v : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1418 "rustparser/RustsurfaceParser.ml"
        ) = 
# 216 "rustparser/RustsurfaceParser.mly"
                       ( Eref (e,Rusttypes.Mutable))
# 1422 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = e;
          MenhirLib.EngineTypes.startp = _startpos_e_;
          MenhirLib.EngineTypes.endp = _endpos_e_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _menhir_s;
            MenhirLib.EngineTypes.semv = _1;
            MenhirLib.EngineTypes.startp = _startpos__1_;
            MenhirLib.EngineTypes.endp = _endpos__1_;
            MenhirLib.EngineTypes.next = _menhir_stack;
          };
        } = _menhir_stack in
        let e : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1449 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos_e_ in
        let _v : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1458 "rustparser/RustsurfaceParser.ml"
        ) = 
# 217 "rustparser/RustsurfaceParser.mly"
                  ( Eref (e,Rusttypes.Immutable))
# 1462 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = x;
          MenhirLib.EngineTypes.startp = _startpos_x_;
          MenhirLib.EngineTypes.endp = _endpos_x_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _2;
            MenhirLib.EngineTypes.startp = _startpos__2_;
            MenhirLib.EngineTypes.endp = _endpos__2_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _menhir_s;
              MenhirLib.EngineTypes.semv = e;
              MenhirLib.EngineTypes.startp = _startpos_e_;
              MenhirLib.EngineTypes.endp = _endpos_e_;
              MenhirLib.EngineTypes.next = _menhir_stack;
            };
          };
        } = _menhir_stack in
        let x : (
# 5 "rustparser/RustsurfaceParser.mly"
       (string)
# 1495 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x in
        let _2 : unit = Obj.magic _2 in
        let e : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1501 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_e_ in
        let _endpos = _endpos_x_ in
        let _v : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1509 "rustparser/RustsurfaceParser.ml"
        ) = 
# 218 "rustparser/RustsurfaceParser.mly"
                          ( Efield (e, x) )
# 1513 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = e;
          MenhirLib.EngineTypes.startp = _startpos_e_;
          MenhirLib.EngineTypes.endp = _endpos_e_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _menhir_s;
            MenhirLib.EngineTypes.semv = _1;
            MenhirLib.EngineTypes.startp = _startpos__1_;
            MenhirLib.EngineTypes.endp = _endpos__1_;
            MenhirLib.EngineTypes.next = _menhir_stack;
          };
        } = _menhir_stack in
        let e : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1540 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos_e_ in
        let _v : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1549 "rustparser/RustsurfaceParser.ml"
        ) = 
# 219 "rustparser/RustsurfaceParser.mly"
                       ( Ederef e )
# 1553 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = e2;
          MenhirLib.EngineTypes.startp = _startpos_e2_;
          MenhirLib.EngineTypes.endp = _endpos_e2_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _2;
            MenhirLib.EngineTypes.startp = _startpos__2_;
            MenhirLib.EngineTypes.endp = _endpos__2_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _menhir_s;
              MenhirLib.EngineTypes.semv = e1;
              MenhirLib.EngineTypes.startp = _startpos_e1_;
              MenhirLib.EngineTypes.endp = _endpos_e1_;
              MenhirLib.EngineTypes.next = _menhir_stack;
            };
          };
        } = _menhir_stack in
        let e2 : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1586 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e2 in
        let _2 : unit = Obj.magic _2 in
        let e1 : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1592 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_e1_ in
        let _endpos = _endpos_e2_ in
        let _v : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1600 "rustparser/RustsurfaceParser.ml"
        ) = 
# 220 "rustparser/RustsurfaceParser.mly"
                                 ( Eassign (e1, e2) )
# 1604 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = p;
          MenhirLib.EngineTypes.startp = _startpos_p_;
          MenhirLib.EngineTypes.endp = _endpos_p_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let p : 'tv_path_expr = Obj.magic p in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_p_ in
        let _endpos = _endpos_p_ in
        let _v : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1629 "rustparser/RustsurfaceParser.ml"
        ) = 
# 222 "rustparser/RustsurfaceParser.mly"
                  ( let (x1, x2) = p in Ecall ((Eaccess (x1, x2)), [Eunit]) )
# 1633 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = _6;
          MenhirLib.EngineTypes.startp = _startpos__6_;
          MenhirLib.EngineTypes.endp = _endpos__6_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = e;
            MenhirLib.EngineTypes.startp = _startpos_e_;
            MenhirLib.EngineTypes.endp = _endpos_e_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _;
              MenhirLib.EngineTypes.semv = _4;
              MenhirLib.EngineTypes.startp = _startpos__4_;
              MenhirLib.EngineTypes.endp = _endpos__4_;
              MenhirLib.EngineTypes.next = {
                MenhirLib.EngineTypes.state = _;
                MenhirLib.EngineTypes.semv = x2;
                MenhirLib.EngineTypes.startp = _startpos_x2_;
                MenhirLib.EngineTypes.endp = _endpos_x2_;
                MenhirLib.EngineTypes.next = {
                  MenhirLib.EngineTypes.state = _;
                  MenhirLib.EngineTypes.semv = _2;
                  MenhirLib.EngineTypes.startp = _startpos__2_;
                  MenhirLib.EngineTypes.endp = _endpos__2_;
                  MenhirLib.EngineTypes.next = {
                    MenhirLib.EngineTypes.state = _menhir_s;
                    MenhirLib.EngineTypes.semv = x1;
                    MenhirLib.EngineTypes.startp = _startpos_x1_;
                    MenhirLib.EngineTypes.endp = _endpos_x1_;
                    MenhirLib.EngineTypes.next = _menhir_stack;
                  };
                };
              };
            };
          };
        } = _menhir_stack in
        let _6 : unit = Obj.magic _6 in
        let e : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1685 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e in
        let _4 : unit = Obj.magic _4 in
        let x2 : (
# 5 "rustparser/RustsurfaceParser.mly"
       (string)
# 1691 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x2 in
        let _2 : unit = Obj.magic _2 in
        let x1 : (
# 5 "rustparser/RustsurfaceParser.mly"
       (string)
# 1697 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_x1_ in
        let _endpos = _endpos__6_ in
        let _v : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1705 "rustparser/RustsurfaceParser.ml"
        ) = 
# 224 "rustparser/RustsurfaceParser.mly"
    ( Ecall ((Eaccess (x1, x2)), [e]) )
# 1709 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = e;
          MenhirLib.EngineTypes.startp = _startpos_e_;
          MenhirLib.EngineTypes.endp = _endpos_e_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _menhir_s;
            MenhirLib.EngineTypes.semv = _1;
            MenhirLib.EngineTypes.startp = _startpos__1_;
            MenhirLib.EngineTypes.endp = _endpos__1_;
            MenhirLib.EngineTypes.next = _menhir_stack;
          };
        } = _menhir_stack in
        let e : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1736 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos_e_ in
        let _v : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1745 "rustparser/RustsurfaceParser.ml"
        ) = 
# 225 "rustparser/RustsurfaceParser.mly"
                   ( Eunop (Cop.Oneg, e) )
# 1749 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = e;
          MenhirLib.EngineTypes.startp = _startpos_e_;
          MenhirLib.EngineTypes.endp = _endpos_e_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _menhir_s;
            MenhirLib.EngineTypes.semv = _1;
            MenhirLib.EngineTypes.startp = _startpos__1_;
            MenhirLib.EngineTypes.endp = _endpos__1_;
            MenhirLib.EngineTypes.next = _menhir_stack;
          };
        } = _menhir_stack in
        let e : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1776 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos_e_ in
        let _v : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1785 "rustparser/RustsurfaceParser.ml"
        ) = 
# 226 "rustparser/RustsurfaceParser.mly"
                  ( Eunop (Cop.Onotbool, e) )
# 1789 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = e2;
          MenhirLib.EngineTypes.startp = _startpos_e2_;
          MenhirLib.EngineTypes.endp = _endpos_e2_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _2;
            MenhirLib.EngineTypes.startp = _startpos__2_;
            MenhirLib.EngineTypes.endp = _endpos__2_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _menhir_s;
              MenhirLib.EngineTypes.semv = e1;
              MenhirLib.EngineTypes.startp = _startpos_e1_;
              MenhirLib.EngineTypes.endp = _endpos_e1_;
              MenhirLib.EngineTypes.next = _menhir_stack;
            };
          };
        } = _menhir_stack in
        let e2 : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1822 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e2 in
        let _2 : unit = Obj.magic _2 in
        let e1 : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1828 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_e1_ in
        let _endpos = _endpos_e2_ in
        let _v : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1836 "rustparser/RustsurfaceParser.ml"
        ) = 
# 227 "rustparser/RustsurfaceParser.mly"
                              ( Ebinop (Cop.Oadd, e1, e2) )
# 1840 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = e2;
          MenhirLib.EngineTypes.startp = _startpos_e2_;
          MenhirLib.EngineTypes.endp = _endpos_e2_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _2;
            MenhirLib.EngineTypes.startp = _startpos__2_;
            MenhirLib.EngineTypes.endp = _endpos__2_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _menhir_s;
              MenhirLib.EngineTypes.semv = e1;
              MenhirLib.EngineTypes.startp = _startpos_e1_;
              MenhirLib.EngineTypes.endp = _endpos_e1_;
              MenhirLib.EngineTypes.next = _menhir_stack;
            };
          };
        } = _menhir_stack in
        let e2 : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1873 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e2 in
        let _2 : unit = Obj.magic _2 in
        let e1 : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1879 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_e1_ in
        let _endpos = _endpos_e2_ in
        let _v : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1887 "rustparser/RustsurfaceParser.ml"
        ) = 
# 228 "rustparser/RustsurfaceParser.mly"
                               ( Ebinop (Cop.Osub, e1, e2) )
# 1891 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = e2;
          MenhirLib.EngineTypes.startp = _startpos_e2_;
          MenhirLib.EngineTypes.endp = _endpos_e2_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _2;
            MenhirLib.EngineTypes.startp = _startpos__2_;
            MenhirLib.EngineTypes.endp = _endpos__2_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _menhir_s;
              MenhirLib.EngineTypes.semv = e1;
              MenhirLib.EngineTypes.startp = _startpos_e1_;
              MenhirLib.EngineTypes.endp = _endpos_e1_;
              MenhirLib.EngineTypes.next = _menhir_stack;
            };
          };
        } = _menhir_stack in
        let e2 : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1924 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e2 in
        let _2 : unit = Obj.magic _2 in
        let e1 : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1930 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_e1_ in
        let _endpos = _endpos_e2_ in
        let _v : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1938 "rustparser/RustsurfaceParser.ml"
        ) = 
# 229 "rustparser/RustsurfaceParser.mly"
                                   ( Ebinop (Cop.Omul, e1, e2) )
# 1942 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = e2;
          MenhirLib.EngineTypes.startp = _startpos_e2_;
          MenhirLib.EngineTypes.endp = _endpos_e2_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _2;
            MenhirLib.EngineTypes.startp = _startpos__2_;
            MenhirLib.EngineTypes.endp = _endpos__2_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _menhir_s;
              MenhirLib.EngineTypes.semv = e1;
              MenhirLib.EngineTypes.startp = _startpos_e1_;
              MenhirLib.EngineTypes.endp = _endpos_e1_;
              MenhirLib.EngineTypes.next = _menhir_stack;
            };
          };
        } = _menhir_stack in
        let e2 : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1975 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e2 in
        let _2 : unit = Obj.magic _2 in
        let e1 : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1981 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_e1_ in
        let _endpos = _endpos_e2_ in
        let _v : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 1989 "rustparser/RustsurfaceParser.ml"
        ) = 
# 230 "rustparser/RustsurfaceParser.mly"
                              ( Ebinop (Cop.Odiv, e1, e2) )
# 1993 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = e2;
          MenhirLib.EngineTypes.startp = _startpos_e2_;
          MenhirLib.EngineTypes.endp = _endpos_e2_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _2;
            MenhirLib.EngineTypes.startp = _startpos__2_;
            MenhirLib.EngineTypes.endp = _endpos__2_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _menhir_s;
              MenhirLib.EngineTypes.semv = e1;
              MenhirLib.EngineTypes.startp = _startpos_e1_;
              MenhirLib.EngineTypes.endp = _endpos_e1_;
              MenhirLib.EngineTypes.next = _menhir_stack;
            };
          };
        } = _menhir_stack in
        let e2 : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 2026 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e2 in
        let _2 : unit = Obj.magic _2 in
        let e1 : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 2032 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_e1_ in
        let _endpos = _endpos_e2_ in
        let _v : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 2040 "rustparser/RustsurfaceParser.ml"
        ) = 
# 231 "rustparser/RustsurfaceParser.mly"
                             ( Ebinop (Cop.Ole, e1, e2) )
# 2044 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = e2;
          MenhirLib.EngineTypes.startp = _startpos_e2_;
          MenhirLib.EngineTypes.endp = _endpos_e2_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _2;
            MenhirLib.EngineTypes.startp = _startpos__2_;
            MenhirLib.EngineTypes.endp = _endpos__2_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _menhir_s;
              MenhirLib.EngineTypes.semv = e1;
              MenhirLib.EngineTypes.startp = _startpos_e1_;
              MenhirLib.EngineTypes.endp = _endpos_e1_;
              MenhirLib.EngineTypes.next = _menhir_stack;
            };
          };
        } = _menhir_stack in
        let e2 : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 2077 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e2 in
        let _2 : unit = Obj.magic _2 in
        let e1 : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 2083 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_e1_ in
        let _endpos = _endpos_e2_ in
        let _v : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 2091 "rustparser/RustsurfaceParser.ml"
        ) = 
# 232 "rustparser/RustsurfaceParser.mly"
                             ( Ebinop (Cop.Oge, e1, e2) )
# 2095 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = e2;
          MenhirLib.EngineTypes.startp = _startpos_e2_;
          MenhirLib.EngineTypes.endp = _endpos_e2_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _2;
            MenhirLib.EngineTypes.startp = _startpos__2_;
            MenhirLib.EngineTypes.endp = _endpos__2_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _menhir_s;
              MenhirLib.EngineTypes.semv = e1;
              MenhirLib.EngineTypes.startp = _startpos_e1_;
              MenhirLib.EngineTypes.endp = _endpos_e1_;
              MenhirLib.EngineTypes.next = _menhir_stack;
            };
          };
        } = _menhir_stack in
        let e2 : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 2128 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e2 in
        let _2 : unit = Obj.magic _2 in
        let e1 : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 2134 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_e1_ in
        let _endpos = _endpos_e2_ in
        let _v : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 2142 "rustparser/RustsurfaceParser.ml"
        ) = 
# 233 "rustparser/RustsurfaceParser.mly"
                                 ( Ebinop (Cop.Ogt, e1, e2) )
# 2146 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = e2;
          MenhirLib.EngineTypes.startp = _startpos_e2_;
          MenhirLib.EngineTypes.endp = _endpos_e2_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _2;
            MenhirLib.EngineTypes.startp = _startpos__2_;
            MenhirLib.EngineTypes.endp = _endpos__2_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _menhir_s;
              MenhirLib.EngineTypes.semv = e1;
              MenhirLib.EngineTypes.startp = _startpos_e1_;
              MenhirLib.EngineTypes.endp = _endpos_e1_;
              MenhirLib.EngineTypes.next = _menhir_stack;
            };
          };
        } = _menhir_stack in
        let e2 : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 2179 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e2 in
        let _2 : unit = Obj.magic _2 in
        let e1 : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 2185 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_e1_ in
        let _endpos = _endpos_e2_ in
        let _v : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 2193 "rustparser/RustsurfaceParser.ml"
        ) = 
# 234 "rustparser/RustsurfaceParser.mly"
                                 ( Ebinop (Cop.Olt, e1, e2) )
# 2197 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = e2;
          MenhirLib.EngineTypes.startp = _startpos_e2_;
          MenhirLib.EngineTypes.endp = _endpos_e2_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _2;
            MenhirLib.EngineTypes.startp = _startpos__2_;
            MenhirLib.EngineTypes.endp = _endpos__2_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _menhir_s;
              MenhirLib.EngineTypes.semv = e1;
              MenhirLib.EngineTypes.startp = _startpos_e1_;
              MenhirLib.EngineTypes.endp = _endpos_e1_;
              MenhirLib.EngineTypes.next = _menhir_stack;
            };
          };
        } = _menhir_stack in
        let e2 : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 2230 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e2 in
        let _2 : unit = Obj.magic _2 in
        let e1 : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 2236 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_e1_ in
        let _endpos = _endpos_e2_ in
        let _v : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 2244 "rustparser/RustsurfaceParser.ml"
        ) = 
# 235 "rustparser/RustsurfaceParser.mly"
                             ( Ebinop (Cop.Oeq, e1, e2) )
# 2248 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = e2;
          MenhirLib.EngineTypes.startp = _startpos_e2_;
          MenhirLib.EngineTypes.endp = _endpos_e2_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _2;
            MenhirLib.EngineTypes.startp = _startpos__2_;
            MenhirLib.EngineTypes.endp = _endpos__2_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _menhir_s;
              MenhirLib.EngineTypes.semv = e1;
              MenhirLib.EngineTypes.startp = _startpos_e1_;
              MenhirLib.EngineTypes.endp = _endpos_e1_;
              MenhirLib.EngineTypes.next = _menhir_stack;
            };
          };
        } = _menhir_stack in
        let e2 : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 2281 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e2 in
        let _2 : unit = Obj.magic _2 in
        let e1 : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 2287 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_e1_ in
        let _endpos = _endpos_e2_ in
        let _v : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 2295 "rustparser/RustsurfaceParser.ml"
        ) = 
# 236 "rustparser/RustsurfaceParser.mly"
                             ( Ebinop (Cop.One, e1, e2) )
# 2299 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = e2;
          MenhirLib.EngineTypes.startp = _startpos_e2_;
          MenhirLib.EngineTypes.endp = _endpos_e2_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _2;
            MenhirLib.EngineTypes.startp = _startpos__2_;
            MenhirLib.EngineTypes.endp = _endpos__2_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _menhir_s;
              MenhirLib.EngineTypes.semv = e1;
              MenhirLib.EngineTypes.startp = _startpos_e1_;
              MenhirLib.EngineTypes.endp = _endpos_e1_;
              MenhirLib.EngineTypes.next = _menhir_stack;
            };
          };
        } = _menhir_stack in
        let e2 : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 2332 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e2 in
        let _2 : unit = Obj.magic _2 in
        let e1 : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 2338 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_e1_ in
        let _endpos = _endpos_e2_ in
        let _v : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 2346 "rustparser/RustsurfaceParser.ml"
        ) = 
# 237 "rustparser/RustsurfaceParser.mly"
                             ( Ebinop (Cop.Oor, e1, e2) )
# 2350 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = e2;
          MenhirLib.EngineTypes.startp = _startpos_e2_;
          MenhirLib.EngineTypes.endp = _endpos_e2_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _2;
            MenhirLib.EngineTypes.startp = _startpos__2_;
            MenhirLib.EngineTypes.endp = _endpos__2_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _menhir_s;
              MenhirLib.EngineTypes.semv = e1;
              MenhirLib.EngineTypes.startp = _startpos_e1_;
              MenhirLib.EngineTypes.endp = _endpos_e1_;
              MenhirLib.EngineTypes.next = _menhir_stack;
            };
          };
        } = _menhir_stack in
        let e2 : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 2383 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e2 in
        let _2 : unit = Obj.magic _2 in
        let e1 : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 2389 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_e1_ in
        let _endpos = _endpos_e2_ in
        let _v : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 2397 "rustparser/RustsurfaceParser.ml"
        ) = 
# 238 "rustparser/RustsurfaceParser.mly"
                              ( Ebinop (Cop.Oand, e1, e2) )
# 2401 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = _4;
          MenhirLib.EngineTypes.startp = _startpos__4_;
          MenhirLib.EngineTypes.endp = _endpos__4_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = args;
            MenhirLib.EngineTypes.startp = _startpos_args_;
            MenhirLib.EngineTypes.endp = _endpos_args_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _;
              MenhirLib.EngineTypes.semv = _2;
              MenhirLib.EngineTypes.startp = _startpos__2_;
              MenhirLib.EngineTypes.endp = _endpos__2_;
              MenhirLib.EngineTypes.next = {
                MenhirLib.EngineTypes.state = _menhir_s;
                MenhirLib.EngineTypes.semv = callee;
                MenhirLib.EngineTypes.startp = _startpos_callee_;
                MenhirLib.EngineTypes.endp = _endpos_callee_;
                MenhirLib.EngineTypes.next = _menhir_stack;
              };
            };
          };
        } = _menhir_stack in
        let _4 : unit = Obj.magic _4 in
        let args : (
# 90 "rustparser/RustsurfaceParser.mly"
      (expr list)
# 2441 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic args in
        let _2 : unit = Obj.magic _2 in
        let callee : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 2447 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic callee in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_callee_ in
        let _endpos = _endpos__4_ in
        let _v : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 2455 "rustparser/RustsurfaceParser.ml"
        ) = 
# 239 "rustparser/RustsurfaceParser.mly"
                                                     ( Ecall (callee, args) )
# 2459 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = lit;
          MenhirLib.EngineTypes.startp = _startpos_lit_;
          MenhirLib.EngineTypes.endp = _endpos_lit_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let lit : (
# 9 "rustparser/RustsurfaceParser.mly"
       (string)
# 2480 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic lit in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_lit_ in
        let _endpos = _endpos_lit_ in
        let _v : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 2488 "rustparser/RustsurfaceParser.ml"
        ) = 
# 240 "rustparser/RustsurfaceParser.mly"
                      ( Estr lit )
# 2492 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = _10;
          MenhirLib.EngineTypes.startp = _startpos__10_;
          MenhirLib.EngineTypes.endp = _endpos__10_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = s;
            MenhirLib.EngineTypes.startp = _startpos_s_;
            MenhirLib.EngineTypes.endp = _endpos_s_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _;
              MenhirLib.EngineTypes.semv = _8;
              MenhirLib.EngineTypes.startp = _startpos__8_;
              MenhirLib.EngineTypes.endp = _endpos__8_;
              MenhirLib.EngineTypes.next = {
                MenhirLib.EngineTypes.state = _;
                MenhirLib.EngineTypes.semv = rels;
                MenhirLib.EngineTypes.startp = _startpos_rels_;
                MenhirLib.EngineTypes.endp = _endpos_rels_;
                MenhirLib.EngineTypes.next = {
                  MenhirLib.EngineTypes.state = _;
                  MenhirLib.EngineTypes.semv = _6;
                  MenhirLib.EngineTypes.startp = _startpos__6_;
                  MenhirLib.EngineTypes.endp = _endpos__6_;
                  MenhirLib.EngineTypes.next = {
                    MenhirLib.EngineTypes.state = _;
                    MenhirLib.EngineTypes.semv = p;
                    MenhirLib.EngineTypes.startp = _startpos_p_;
                    MenhirLib.EngineTypes.endp = _endpos_p_;
                    MenhirLib.EngineTypes.next = {
                      MenhirLib.EngineTypes.state = _;
                      MenhirLib.EngineTypes.semv = _4;
                      MenhirLib.EngineTypes.startp = _startpos__4_;
                      MenhirLib.EngineTypes.endp = _endpos__4_;
                      MenhirLib.EngineTypes.next = {
                        MenhirLib.EngineTypes.state = _;
                        MenhirLib.EngineTypes.semv = orgs;
                        MenhirLib.EngineTypes.startp = _startpos_orgs_;
                        MenhirLib.EngineTypes.endp = _endpos_orgs_;
                        MenhirLib.EngineTypes.next = {
                          MenhirLib.EngineTypes.state = _;
                          MenhirLib.EngineTypes.semv = x;
                          MenhirLib.EngineTypes.startp = _startpos_x_;
                          MenhirLib.EngineTypes.endp = _endpos_x_;
                          MenhirLib.EngineTypes.next = {
                            MenhirLib.EngineTypes.state = _menhir_s;
                            MenhirLib.EngineTypes.semv = _1;
                            MenhirLib.EngineTypes.startp = _startpos__1_;
                            MenhirLib.EngineTypes.endp = _endpos__1_;
                            MenhirLib.EngineTypes.next = _menhir_stack;
                          };
                        };
                      };
                    };
                  };
                };
              };
            };
          };
        } = _menhir_stack in
        let _10 : unit = Obj.magic _10 in
        let s : (
# 95 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 2568 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic s in
        let _8 : unit = Obj.magic _8 in
        let rels : (
# 111 "rustparser/RustsurfaceParser.mly"
      ((id * id) list)
# 2574 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic rels in
        let _6 : unit = Obj.magic _6 in
        let p : (
# 99 "rustparser/RustsurfaceParser.mly"
      ((id * ty) list)
# 2580 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic p in
        let _4 : unit = Obj.magic _4 in
        let orgs : (
# 110 "rustparser/RustsurfaceParser.mly"
      (id list)
# 2586 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic orgs in
        let x : (
# 5 "rustparser/RustsurfaceParser.mly"
       (string)
# 2591 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos__10_ in
        let _v : (
# 106 "rustparser/RustsurfaceParser.mly"
      (id * fn)
# 2600 "rustparser/RustsurfaceParser.ml"
        ) = 
# 190 "rustparser/RustsurfaceParser.mly"
    ( (x, { generic_origins = orgs; origin_relations = rels; return = Tunit; params = p; body = s }) )
# 2604 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = _12;
          MenhirLib.EngineTypes.startp = _startpos__12_;
          MenhirLib.EngineTypes.endp = _endpos__12_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = s;
            MenhirLib.EngineTypes.startp = _startpos_s_;
            MenhirLib.EngineTypes.endp = _endpos_s_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _;
              MenhirLib.EngineTypes.semv = _10;
              MenhirLib.EngineTypes.startp = _startpos__10_;
              MenhirLib.EngineTypes.endp = _endpos__10_;
              MenhirLib.EngineTypes.next = {
                MenhirLib.EngineTypes.state = _;
                MenhirLib.EngineTypes.semv = rels;
                MenhirLib.EngineTypes.startp = _startpos_rels_;
                MenhirLib.EngineTypes.endp = _endpos_rels_;
                MenhirLib.EngineTypes.next = {
                  MenhirLib.EngineTypes.state = _;
                  MenhirLib.EngineTypes.semv = tr;
                  MenhirLib.EngineTypes.startp = _startpos_tr_;
                  MenhirLib.EngineTypes.endp = _endpos_tr_;
                  MenhirLib.EngineTypes.next = {
                    MenhirLib.EngineTypes.state = _;
                    MenhirLib.EngineTypes.semv = _7;
                    MenhirLib.EngineTypes.startp = _startpos__7_;
                    MenhirLib.EngineTypes.endp = _endpos__7_;
                    MenhirLib.EngineTypes.next = {
                      MenhirLib.EngineTypes.state = _;
                      MenhirLib.EngineTypes.semv = _6;
                      MenhirLib.EngineTypes.startp = _startpos__6_;
                      MenhirLib.EngineTypes.endp = _endpos__6_;
                      MenhirLib.EngineTypes.next = {
                        MenhirLib.EngineTypes.state = _;
                        MenhirLib.EngineTypes.semv = p;
                        MenhirLib.EngineTypes.startp = _startpos_p_;
                        MenhirLib.EngineTypes.endp = _endpos_p_;
                        MenhirLib.EngineTypes.next = {
                          MenhirLib.EngineTypes.state = _;
                          MenhirLib.EngineTypes.semv = _4;
                          MenhirLib.EngineTypes.startp = _startpos__4_;
                          MenhirLib.EngineTypes.endp = _endpos__4_;
                          MenhirLib.EngineTypes.next = {
                            MenhirLib.EngineTypes.state = _;
                            MenhirLib.EngineTypes.semv = orgs;
                            MenhirLib.EngineTypes.startp = _startpos_orgs_;
                            MenhirLib.EngineTypes.endp = _endpos_orgs_;
                            MenhirLib.EngineTypes.next = {
                              MenhirLib.EngineTypes.state = _;
                              MenhirLib.EngineTypes.semv = x;
                              MenhirLib.EngineTypes.startp = _startpos_x_;
                              MenhirLib.EngineTypes.endp = _endpos_x_;
                              MenhirLib.EngineTypes.next = {
                                MenhirLib.EngineTypes.state = _menhir_s;
                                MenhirLib.EngineTypes.semv = _1;
                                MenhirLib.EngineTypes.startp = _startpos__1_;
                                MenhirLib.EngineTypes.endp = _endpos__1_;
                                MenhirLib.EngineTypes.next = _menhir_stack;
                              };
                            };
                          };
                        };
                      };
                    };
                  };
                };
              };
            };
          };
        } = _menhir_stack in
        let _12 : unit = Obj.magic _12 in
        let s : (
# 95 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 2692 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic s in
        let _10 : unit = Obj.magic _10 in
        let rels : (
# 111 "rustparser/RustsurfaceParser.mly"
      ((id * id) list)
# 2698 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic rels in
        let tr : (
# 98 "rustparser/RustsurfaceParser.mly"
      (ty)
# 2703 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic tr in
        let _7 : unit = Obj.magic _7 in
        let _6 : unit = Obj.magic _6 in
        let p : (
# 99 "rustparser/RustsurfaceParser.mly"
      ((id * ty) list)
# 2710 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic p in
        let _4 : unit = Obj.magic _4 in
        let orgs : (
# 110 "rustparser/RustsurfaceParser.mly"
      (id list)
# 2716 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic orgs in
        let x : (
# 5 "rustparser/RustsurfaceParser.mly"
       (string)
# 2721 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos__12_ in
        let _v : (
# 106 "rustparser/RustsurfaceParser.mly"
      (id * fn)
# 2730 "rustparser/RustsurfaceParser.ml"
        ) = 
# 193 "rustparser/RustsurfaceParser.mly"
    ( (x, { generic_origins = orgs; origin_relations = rels; return = tr; params = p; body = s }) )
# 2734 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let _menhir_s = _menhir_env.MenhirLib.EngineTypes.current in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _endpos = _startpos in
        let _v : (
# 110 "rustparser/RustsurfaceParser.mly"
      (id list)
# 2752 "rustparser/RustsurfaceParser.ml"
        ) = 
# 143 "rustparser/RustsurfaceParser.mly"
    ( [] )
# 2756 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = _3;
          MenhirLib.EngineTypes.startp = _startpos__3_;
          MenhirLib.EngineTypes.endp = _endpos__3_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = l;
            MenhirLib.EngineTypes.startp = _startpos_l_;
            MenhirLib.EngineTypes.endp = _endpos_l_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _menhir_s;
              MenhirLib.EngineTypes.semv = _1;
              MenhirLib.EngineTypes.startp = _startpos__1_;
              MenhirLib.EngineTypes.endp = _endpos__1_;
              MenhirLib.EngineTypes.next = _menhir_stack;
            };
          };
        } = _menhir_stack in
        let _3 : unit = Obj.magic _3 in
        let l : 'tv_generic_origins_ = Obj.magic l in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos__3_ in
        let _v : (
# 110 "rustparser/RustsurfaceParser.mly"
      (id list)
# 2795 "rustparser/RustsurfaceParser.ml"
        ) = 
# 144 "rustparser/RustsurfaceParser.mly"
                                         ( l )
# 2799 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let _menhir_s = _menhir_env.MenhirLib.EngineTypes.current in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _endpos = _startpos in
        let _v : 'tv_generic_origins_ = 
# 137 "rustparser/RustsurfaceParser.mly"
    ( [] )
# 2817 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = x;
          MenhirLib.EngineTypes.startp = _startpos_x_;
          MenhirLib.EngineTypes.endp = _endpos_x_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let x : (
# 6 "rustparser/RustsurfaceParser.mly"
       (string)
# 2838 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_x_ in
        let _endpos = _endpos_x_ in
        let _v : 'tv_generic_origins_ = 
# 138 "rustparser/RustsurfaceParser.mly"
               ( [x] )
# 2846 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = orgs;
          MenhirLib.EngineTypes.startp = _startpos_orgs_;
          MenhirLib.EngineTypes.endp = _endpos_orgs_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _2;
            MenhirLib.EngineTypes.startp = _startpos__2_;
            MenhirLib.EngineTypes.endp = _endpos__2_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _menhir_s;
              MenhirLib.EngineTypes.semv = x;
              MenhirLib.EngineTypes.startp = _startpos_x_;
              MenhirLib.EngineTypes.endp = _endpos_x_;
              MenhirLib.EngineTypes.next = _menhir_stack;
            };
          };
        } = _menhir_stack in
        let orgs : 'tv_generic_origins_ = Obj.magic orgs in
        let _2 : unit = Obj.magic _2 in
        let x : (
# 6 "rustparser/RustsurfaceParser.mly"
       (string)
# 2881 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_x_ in
        let _endpos = _endpos_orgs_ in
        let _v : 'tv_generic_origins_ = 
# 139 "rustparser/RustsurfaceParser.mly"
                                               ( x::orgs )
# 2889 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = x;
          MenhirLib.EngineTypes.startp = _startpos_x_;
          MenhirLib.EngineTypes.endp = _endpos_x_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _2;
            MenhirLib.EngineTypes.startp = _startpos__2_;
            MenhirLib.EngineTypes.endp = _endpos__2_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _menhir_s;
              MenhirLib.EngineTypes.semv = _1;
              MenhirLib.EngineTypes.startp = _startpos__1_;
              MenhirLib.EngineTypes.endp = _endpos__1_;
              MenhirLib.EngineTypes.next = _menhir_stack;
            };
          };
        } = _menhir_stack in
        let x : (
# 5 "rustparser/RustsurfaceParser.mly"
       (string)
# 2922 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x in
        let _2 : unit = Obj.magic _2 in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos_x_ in
        let _v : 'tv_identifier_pattern = 
# 257 "rustparser/RustsurfaceParser.mly"
                      ( Pbind(Option.Some(RefMut), x) )
# 2932 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = x;
          MenhirLib.EngineTypes.startp = _startpos_x_;
          MenhirLib.EngineTypes.endp = _endpos_x_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _menhir_s;
            MenhirLib.EngineTypes.semv = _1;
            MenhirLib.EngineTypes.startp = _startpos__1_;
            MenhirLib.EngineTypes.endp = _endpos__1_;
            MenhirLib.EngineTypes.next = _menhir_stack;
          };
        } = _menhir_stack in
        let x : (
# 5 "rustparser/RustsurfaceParser.mly"
       (string)
# 2959 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos_x_ in
        let _v : 'tv_identifier_pattern = 
# 258 "rustparser/RustsurfaceParser.mly"
                 ( Pbind(Option.Some(RefImmut),x) )
# 2968 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = x;
          MenhirLib.EngineTypes.startp = _startpos_x_;
          MenhirLib.EngineTypes.endp = _endpos_x_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let x : (
# 5 "rustparser/RustsurfaceParser.mly"
       (string)
# 2989 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_x_ in
        let _endpos = _endpos_x_ in
        let _v : 'tv_identifier_pattern = 
# 259 "rustparser/RustsurfaceParser.mly"
           ( Pbind(Option.None, x) )
# 2997 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = _5;
          MenhirLib.EngineTypes.startp = _startpos__5_;
          MenhirLib.EngineTypes.endp = _endpos__5_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = s;
            MenhirLib.EngineTypes.startp = _startpos_s_;
            MenhirLib.EngineTypes.endp = _endpos_s_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _;
              MenhirLib.EngineTypes.semv = _3;
              MenhirLib.EngineTypes.startp = _startpos__3_;
              MenhirLib.EngineTypes.endp = _endpos__3_;
              MenhirLib.EngineTypes.next = {
                MenhirLib.EngineTypes.state = _;
                MenhirLib.EngineTypes.semv = _2;
                MenhirLib.EngineTypes.startp = _startpos__2_;
                MenhirLib.EngineTypes.endp = _endpos__2_;
                MenhirLib.EngineTypes.next = {
                  MenhirLib.EngineTypes.state = _menhir_s;
                  MenhirLib.EngineTypes.semv = p;
                  MenhirLib.EngineTypes.startp = _startpos_p_;
                  MenhirLib.EngineTypes.endp = _endpos_p_;
                  MenhirLib.EngineTypes.next = _menhir_stack;
                };
              };
            };
          };
        } = _menhir_stack in
        let _5 : unit = Obj.magic _5 in
        let s : (
# 95 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 3043 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic s in
        let _3 : unit = Obj.magic _3 in
        let _2 : unit = Obj.magic _2 in
        let p : (
# 108 "rustparser/RustsurfaceParser.mly"
      (pat)
# 3050 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic p in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_p_ in
        let _endpos = _endpos__5_ in
        let _v : (
# 92 "rustparser/RustsurfaceParser.mly"
      (case)
# 3058 "rustparser/RustsurfaceParser.ml"
        ) = 
# 293 "rustparser/RustsurfaceParser.mly"
    ( { pattern = p ; body = s } )
# 3062 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = arm;
          MenhirLib.EngineTypes.startp = _startpos_arm_;
          MenhirLib.EngineTypes.endp = _endpos_arm_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let arm : (
# 92 "rustparser/RustsurfaceParser.mly"
      (case)
# 3083 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic arm in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_arm_ in
        let _endpos = _endpos_arm_ in
        let _v : (
# 93 "rustparser/RustsurfaceParser.mly"
      (case list)
# 3091 "rustparser/RustsurfaceParser.ml"
        ) = 
# 296 "rustparser/RustsurfaceParser.mly"
                    ( [arm] )
# 3095 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = arms;
          MenhirLib.EngineTypes.startp = _startpos_arms_;
          MenhirLib.EngineTypes.endp = _endpos_arms_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _menhir_s;
            MenhirLib.EngineTypes.semv = arm;
            MenhirLib.EngineTypes.startp = _startpos_arm_;
            MenhirLib.EngineTypes.endp = _endpos_arm_;
            MenhirLib.EngineTypes.next = _menhir_stack;
          };
        } = _menhir_stack in
        let arms : (
# 93 "rustparser/RustsurfaceParser.mly"
      (case list)
# 3122 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic arms in
        let arm : (
# 92 "rustparser/RustsurfaceParser.mly"
      (case)
# 3127 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic arm in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_arm_ in
        let _endpos = _endpos_arms_ in
        let _v : (
# 93 "rustparser/RustsurfaceParser.mly"
      (case list)
# 3135 "rustparser/RustsurfaceParser.ml"
        ) = 
# 297 "rustparser/RustsurfaceParser.mly"
                                       ( arm::arms )
# 3139 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = t;
          MenhirLib.EngineTypes.startp = _startpos_t_;
          MenhirLib.EngineTypes.endp = _endpos_t_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let t : (
# 98 "rustparser/RustsurfaceParser.mly"
      (ty)
# 3160 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic t in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_t_ in
        let _endpos = _endpos_t_ in
        let _v : (
# 100 "rustparser/RustsurfaceParser.mly"
      (ty list)
# 3168 "rustparser/RustsurfaceParser.ml"
        ) = 
# 161 "rustparser/RustsurfaceParser.mly"
           ( [t] )
# 3172 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = ts;
          MenhirLib.EngineTypes.startp = _startpos_ts_;
          MenhirLib.EngineTypes.endp = _endpos_ts_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _2;
            MenhirLib.EngineTypes.startp = _startpos__2_;
            MenhirLib.EngineTypes.endp = _endpos__2_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _menhir_s;
              MenhirLib.EngineTypes.semv = t;
              MenhirLib.EngineTypes.startp = _startpos_t_;
              MenhirLib.EngineTypes.endp = _endpos_t_;
              MenhirLib.EngineTypes.next = _menhir_stack;
            };
          };
        } = _menhir_stack in
        let ts : (
# 100 "rustparser/RustsurfaceParser.mly"
      (ty list)
# 3205 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic ts in
        let _2 : unit = Obj.magic _2 in
        let t : (
# 98 "rustparser/RustsurfaceParser.mly"
      (ty)
# 3211 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic t in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_t_ in
        let _endpos = _endpos_ts_ in
        let _v : (
# 100 "rustparser/RustsurfaceParser.mly"
      (ty list)
# 3219 "rustparser/RustsurfaceParser.ml"
        ) = 
# 162 "rustparser/RustsurfaceParser.mly"
                                              ( t :: ts )
# 3223 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let _menhir_s = _menhir_env.MenhirLib.EngineTypes.current in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _endpos = _startpos in
        let _v : 'tv_origin_opt = 
# 132 "rustparser/RustsurfaceParser.mly"
    ( Rustsurface.dummy_origin_str )
# 3241 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = x;
          MenhirLib.EngineTypes.startp = _startpos_x_;
          MenhirLib.EngineTypes.endp = _endpos_x_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let x : (
# 6 "rustparser/RustsurfaceParser.mly"
       (string)
# 3262 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_x_ in
        let _endpos = _endpos_x_ in
        let _v : 'tv_origin_opt = 
# 133 "rustparser/RustsurfaceParser.mly"
               ( x )
# 3270 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let _menhir_s = _menhir_env.MenhirLib.EngineTypes.current in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _endpos = _startpos in
        let _v : (
# 111 "rustparser/RustsurfaceParser.mly"
      ((id * id) list)
# 3288 "rustparser/RustsurfaceParser.ml"
        ) = 
# 152 "rustparser/RustsurfaceParser.mly"
    ( [] )
# 3292 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = rels;
          MenhirLib.EngineTypes.startp = _startpos_rels_;
          MenhirLib.EngineTypes.endp = _endpos_rels_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _menhir_s;
            MenhirLib.EngineTypes.semv = _1;
            MenhirLib.EngineTypes.startp = _startpos__1_;
            MenhirLib.EngineTypes.endp = _endpos__1_;
            MenhirLib.EngineTypes.next = _menhir_stack;
          };
        } = _menhir_stack in
        let rels : 'tv_origin_relations_ = Obj.magic rels in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos_rels_ in
        let _v : (
# 111 "rustparser/RustsurfaceParser.mly"
      ((id * id) list)
# 3324 "rustparser/RustsurfaceParser.ml"
        ) = 
# 153 "rustparser/RustsurfaceParser.mly"
                                    ( rels )
# 3328 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let _menhir_s = _menhir_env.MenhirLib.EngineTypes.current in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _endpos = _startpos in
        let _v : 'tv_origin_relations_ = 
# 147 "rustparser/RustsurfaceParser.mly"
    ( [] )
# 3346 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = y;
          MenhirLib.EngineTypes.startp = _startpos_y_;
          MenhirLib.EngineTypes.endp = _endpos_y_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _2;
            MenhirLib.EngineTypes.startp = _startpos__2_;
            MenhirLib.EngineTypes.endp = _endpos__2_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _menhir_s;
              MenhirLib.EngineTypes.semv = x;
              MenhirLib.EngineTypes.startp = _startpos_x_;
              MenhirLib.EngineTypes.endp = _endpos_x_;
              MenhirLib.EngineTypes.next = _menhir_stack;
            };
          };
        } = _menhir_stack in
        let y : (
# 6 "rustparser/RustsurfaceParser.mly"
       (string)
# 3379 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic y in
        let _2 : unit = Obj.magic _2 in
        let x : (
# 6 "rustparser/RustsurfaceParser.mly"
       (string)
# 3385 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_x_ in
        let _endpos = _endpos_y_ in
        let _v : 'tv_origin_relations_ = 
# 148 "rustparser/RustsurfaceParser.mly"
                                  ( [(x,y)] )
# 3393 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = rels;
          MenhirLib.EngineTypes.startp = _startpos_rels_;
          MenhirLib.EngineTypes.endp = _endpos_rels_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _4;
            MenhirLib.EngineTypes.startp = _startpos__4_;
            MenhirLib.EngineTypes.endp = _endpos__4_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _;
              MenhirLib.EngineTypes.semv = y;
              MenhirLib.EngineTypes.startp = _startpos_y_;
              MenhirLib.EngineTypes.endp = _endpos_y_;
              MenhirLib.EngineTypes.next = {
                MenhirLib.EngineTypes.state = _;
                MenhirLib.EngineTypes.semv = _2;
                MenhirLib.EngineTypes.startp = _startpos__2_;
                MenhirLib.EngineTypes.endp = _endpos__2_;
                MenhirLib.EngineTypes.next = {
                  MenhirLib.EngineTypes.state = _menhir_s;
                  MenhirLib.EngineTypes.semv = x;
                  MenhirLib.EngineTypes.startp = _startpos_x_;
                  MenhirLib.EngineTypes.endp = _endpos_x_;
                  MenhirLib.EngineTypes.next = _menhir_stack;
                };
              };
            };
          };
        } = _menhir_stack in
        let rels : 'tv_origin_relations_ = Obj.magic rels in
        let _4 : unit = Obj.magic _4 in
        let y : (
# 6 "rustparser/RustsurfaceParser.mly"
       (string)
# 3440 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic y in
        let _2 : unit = Obj.magic _2 in
        let x : (
# 6 "rustparser/RustsurfaceParser.mly"
       (string)
# 3446 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_x_ in
        let _endpos = _endpos_rels_ in
        let _v : 'tv_origin_relations_ = 
# 149 "rustparser/RustsurfaceParser.mly"
                                                                   ( (x, y)::rels )
# 3454 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let _menhir_s = _menhir_env.MenhirLib.EngineTypes.current in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _endpos = _startpos in
        let _v : (
# 94 "rustparser/RustsurfaceParser.mly"
      (ty list)
# 3472 "rustparser/RustsurfaceParser.ml"
        ) = 
# 270 "rustparser/RustsurfaceParser.mly"
    ( [] )
# 3476 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = t;
          MenhirLib.EngineTypes.startp = _startpos_t_;
          MenhirLib.EngineTypes.endp = _endpos_t_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let t : (
# 98 "rustparser/RustsurfaceParser.mly"
      (ty)
# 3497 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic t in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_t_ in
        let _endpos = _endpos_t_ in
        let _v : (
# 94 "rustparser/RustsurfaceParser.mly"
      (ty list)
# 3505 "rustparser/RustsurfaceParser.ml"
        ) = 
# 271 "rustparser/RustsurfaceParser.mly"
           ( [t] )
# 3509 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = ts;
          MenhirLib.EngineTypes.startp = _startpos_ts_;
          MenhirLib.EngineTypes.endp = _endpos_ts_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _2;
            MenhirLib.EngineTypes.startp = _startpos__2_;
            MenhirLib.EngineTypes.endp = _endpos__2_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _menhir_s;
              MenhirLib.EngineTypes.semv = t;
              MenhirLib.EngineTypes.startp = _startpos_t_;
              MenhirLib.EngineTypes.endp = _endpos_t_;
              MenhirLib.EngineTypes.next = _menhir_stack;
            };
          };
        } = _menhir_stack in
        let ts : (
# 94 "rustparser/RustsurfaceParser.mly"
      (ty list)
# 3542 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic ts in
        let _2 : unit = Obj.magic _2 in
        let t : (
# 98 "rustparser/RustsurfaceParser.mly"
      (ty)
# 3548 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic t in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_t_ in
        let _endpos = _endpos_ts_ in
        let _v : (
# 94 "rustparser/RustsurfaceParser.mly"
      (ty list)
# 3556 "rustparser/RustsurfaceParser.ml"
        ) = 
# 272 "rustparser/RustsurfaceParser.mly"
                                   ( t :: ts )
# 3560 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = x2;
          MenhirLib.EngineTypes.startp = _startpos_x2_;
          MenhirLib.EngineTypes.endp = _endpos_x2_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _2;
            MenhirLib.EngineTypes.startp = _startpos__2_;
            MenhirLib.EngineTypes.endp = _endpos__2_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _menhir_s;
              MenhirLib.EngineTypes.semv = x1;
              MenhirLib.EngineTypes.startp = _startpos_x1_;
              MenhirLib.EngineTypes.endp = _endpos_x1_;
              MenhirLib.EngineTypes.next = _menhir_stack;
            };
          };
        } = _menhir_stack in
        let x2 : (
# 5 "rustparser/RustsurfaceParser.mly"
       (string)
# 3593 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x2 in
        let _2 : unit = Obj.magic _2 in
        let x1 : (
# 5 "rustparser/RustsurfaceParser.mly"
       (string)
# 3599 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_x1_ in
        let _endpos = _endpos_x2_ in
        let _v : 'tv_path_expr = 
# 250 "rustparser/RustsurfaceParser.mly"
                             ( (x1, x2) )
# 3607 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = p;
          MenhirLib.EngineTypes.startp = _startpos_p_;
          MenhirLib.EngineTypes.endp = _endpos_p_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let p : 'tv_path_expr = Obj.magic p in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_p_ in
        let _endpos = _endpos_p_ in
        let _v : 'tv_path_pattern = 
# 254 "rustparser/RustsurfaceParser.mly"
                  ( let (x, y) = p in Pconstructor (x, y, [Pbind(Option.None, wildcard_id)]))
# 3632 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = p;
          MenhirLib.EngineTypes.startp = _startpos_p_;
          MenhirLib.EngineTypes.endp = _endpos_p_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let p : 'tv_path_pattern = Obj.magic p in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_p_ in
        let _endpos = _endpos_p_ in
        let _v : (
# 108 "rustparser/RustsurfaceParser.mly"
      (pat)
# 3657 "rustparser/RustsurfaceParser.ml"
        ) = 
# 265 "rustparser/RustsurfaceParser.mly"
                     ( p )
# 3661 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = p;
          MenhirLib.EngineTypes.startp = _startpos_p_;
          MenhirLib.EngineTypes.endp = _endpos_p_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let p : 'tv_tuple_struct_pattern = Obj.magic p in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_p_ in
        let _endpos = _endpos_p_ in
        let _v : (
# 108 "rustparser/RustsurfaceParser.mly"
      (pat)
# 3686 "rustparser/RustsurfaceParser.ml"
        ) = 
# 266 "rustparser/RustsurfaceParser.mly"
                             ( p )
# 3690 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = p;
          MenhirLib.EngineTypes.startp = _startpos_p_;
          MenhirLib.EngineTypes.endp = _endpos_p_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let p : 'tv_identifier_pattern = Obj.magic p in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_p_ in
        let _endpos = _endpos_p_ in
        let _v : (
# 108 "rustparser/RustsurfaceParser.mly"
      (pat)
# 3715 "rustparser/RustsurfaceParser.ml"
        ) = 
# 267 "rustparser/RustsurfaceParser.mly"
                           ( p )
# 3719 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = d;
          MenhirLib.EngineTypes.startp = _startpos_d_;
          MenhirLib.EngineTypes.endp = _endpos_d_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let d : (
# 104 "rustparser/RustsurfaceParser.mly"
      (id * id list * (id * id) list)
# 3740 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic d in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_d_ in
        let _endpos = _endpos_d_ in
        let _v : (
# 107 "rustparser/RustsurfaceParser.mly"
      (prog_item list)
# 3748 "rustparser/RustsurfaceParser.ml"
        ) = 
# 119 "rustparser/RustsurfaceParser.mly"
                  ( let (x, orgs, rels) = d in [Pcomp_decl (x, Enum, orgs, rels)] )
# 3752 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = d;
          MenhirLib.EngineTypes.startp = _startpos_d_;
          MenhirLib.EngineTypes.endp = _endpos_d_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let d : (
# 105 "rustparser/RustsurfaceParser.mly"
      (id * id list * (id * id) list)
# 3773 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic d in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_d_ in
        let _endpos = _endpos_d_ in
        let _v : (
# 107 "rustparser/RustsurfaceParser.mly"
      (prog_item list)
# 3781 "rustparser/RustsurfaceParser.ml"
        ) = 
# 120 "rustparser/RustsurfaceParser.mly"
                    ( let (x, orgs, rels) = d in [Pcomp_decl (x, Struct, orgs, rels)] )
# 3785 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = c;
          MenhirLib.EngineTypes.startp = _startpos_c_;
          MenhirLib.EngineTypes.endp = _endpos_c_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let c : (
# 102 "rustparser/RustsurfaceParser.mly"
      (id * comp_enum * id list * (id * id) list)
# 3806 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic c in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_c_ in
        let _endpos = _endpos_c_ in
        let _v : (
# 107 "rustparser/RustsurfaceParser.mly"
      (prog_item list)
# 3814 "rustparser/RustsurfaceParser.ml"
        ) = 
# 121 "rustparser/RustsurfaceParser.mly"
             ( let (x, flds, orgs, rels) = c in [Penum (x, flds, orgs, rels)] )
# 3818 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = c;
          MenhirLib.EngineTypes.startp = _startpos_c_;
          MenhirLib.EngineTypes.endp = _endpos_c_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let c : (
# 103 "rustparser/RustsurfaceParser.mly"
      (id * comp_struc * id list * (id * id) list)
# 3839 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic c in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_c_ in
        let _endpos = _endpos_c_ in
        let _v : (
# 107 "rustparser/RustsurfaceParser.mly"
      (prog_item list)
# 3847 "rustparser/RustsurfaceParser.ml"
        ) = 
# 122 "rustparser/RustsurfaceParser.mly"
                ( let (x, flds, orgs, rels) = c in [Pstruc (x, flds, orgs, rels)] )
# 3851 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = f;
          MenhirLib.EngineTypes.startp = _startpos_f_;
          MenhirLib.EngineTypes.endp = _endpos_f_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let f : (
# 106 "rustparser/RustsurfaceParser.mly"
      (id * fn)
# 3872 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic f in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_f_ in
        let _endpos = _endpos_f_ in
        let _v : (
# 107 "rustparser/RustsurfaceParser.mly"
      (prog_item list)
# 3880 "rustparser/RustsurfaceParser.ml"
        ) = 
# 123 "rustparser/RustsurfaceParser.mly"
           ( [Pfn (fst f, snd f)] )
# 3884 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = p;
          MenhirLib.EngineTypes.startp = _startpos_p_;
          MenhirLib.EngineTypes.endp = _endpos_p_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _menhir_s;
            MenhirLib.EngineTypes.semv = d;
            MenhirLib.EngineTypes.startp = _startpos_d_;
            MenhirLib.EngineTypes.endp = _endpos_d_;
            MenhirLib.EngineTypes.next = _menhir_stack;
          };
        } = _menhir_stack in
        let p : (
# 107 "rustparser/RustsurfaceParser.mly"
      (prog_item list)
# 3911 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic p in
        let d : (
# 104 "rustparser/RustsurfaceParser.mly"
      (id * id list * (id * id) list)
# 3916 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic d in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_d_ in
        let _endpos = _endpos_p_ in
        let _v : (
# 107 "rustparser/RustsurfaceParser.mly"
      (prog_item list)
# 3924 "rustparser/RustsurfaceParser.ml"
        ) = 
# 124 "rustparser/RustsurfaceParser.mly"
                            ( let (x, orgs, rels) = d in (Pcomp_decl (x, Enum, orgs, rels)) :: p )
# 3928 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = p;
          MenhirLib.EngineTypes.startp = _startpos_p_;
          MenhirLib.EngineTypes.endp = _endpos_p_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _menhir_s;
            MenhirLib.EngineTypes.semv = d;
            MenhirLib.EngineTypes.startp = _startpos_d_;
            MenhirLib.EngineTypes.endp = _endpos_d_;
            MenhirLib.EngineTypes.next = _menhir_stack;
          };
        } = _menhir_stack in
        let p : (
# 107 "rustparser/RustsurfaceParser.mly"
      (prog_item list)
# 3955 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic p in
        let d : (
# 105 "rustparser/RustsurfaceParser.mly"
      (id * id list * (id * id) list)
# 3960 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic d in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_d_ in
        let _endpos = _endpos_p_ in
        let _v : (
# 107 "rustparser/RustsurfaceParser.mly"
      (prog_item list)
# 3968 "rustparser/RustsurfaceParser.ml"
        ) = 
# 125 "rustparser/RustsurfaceParser.mly"
                              ( let (x, orgs, rels) = d in (Pcomp_decl (x, Struct, orgs, rels)) :: p )
# 3972 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = p;
          MenhirLib.EngineTypes.startp = _startpos_p_;
          MenhirLib.EngineTypes.endp = _endpos_p_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _menhir_s;
            MenhirLib.EngineTypes.semv = c;
            MenhirLib.EngineTypes.startp = _startpos_c_;
            MenhirLib.EngineTypes.endp = _endpos_c_;
            MenhirLib.EngineTypes.next = _menhir_stack;
          };
        } = _menhir_stack in
        let p : (
# 107 "rustparser/RustsurfaceParser.mly"
      (prog_item list)
# 3999 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic p in
        let c : (
# 102 "rustparser/RustsurfaceParser.mly"
      (id * comp_enum * id list * (id * id) list)
# 4004 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic c in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_c_ in
        let _endpos = _endpos_p_ in
        let _v : (
# 107 "rustparser/RustsurfaceParser.mly"
      (prog_item list)
# 4012 "rustparser/RustsurfaceParser.ml"
        ) = 
# 126 "rustparser/RustsurfaceParser.mly"
                       ( let (x, flds, orgs, rels) = c in (Penum (x, flds, orgs, rels))::p )
# 4016 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = p;
          MenhirLib.EngineTypes.startp = _startpos_p_;
          MenhirLib.EngineTypes.endp = _endpos_p_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _menhir_s;
            MenhirLib.EngineTypes.semv = c;
            MenhirLib.EngineTypes.startp = _startpos_c_;
            MenhirLib.EngineTypes.endp = _endpos_c_;
            MenhirLib.EngineTypes.next = _menhir_stack;
          };
        } = _menhir_stack in
        let p : (
# 107 "rustparser/RustsurfaceParser.mly"
      (prog_item list)
# 4043 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic p in
        let c : (
# 103 "rustparser/RustsurfaceParser.mly"
      (id * comp_struc * id list * (id * id) list)
# 4048 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic c in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_c_ in
        let _endpos = _endpos_p_ in
        let _v : (
# 107 "rustparser/RustsurfaceParser.mly"
      (prog_item list)
# 4056 "rustparser/RustsurfaceParser.ml"
        ) = 
# 127 "rustparser/RustsurfaceParser.mly"
                          ( let (x, flds, orgs, rels) = c in (Pstruc (x, flds, orgs, rels))::p )
# 4060 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = p;
          MenhirLib.EngineTypes.startp = _startpos_p_;
          MenhirLib.EngineTypes.endp = _endpos_p_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _menhir_s;
            MenhirLib.EngineTypes.semv = f;
            MenhirLib.EngineTypes.startp = _startpos_f_;
            MenhirLib.EngineTypes.endp = _endpos_f_;
            MenhirLib.EngineTypes.next = _menhir_stack;
          };
        } = _menhir_stack in
        let p : (
# 107 "rustparser/RustsurfaceParser.mly"
      (prog_item list)
# 4087 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic p in
        let f : (
# 106 "rustparser/RustsurfaceParser.mly"
      (id * fn)
# 4092 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic f in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_f_ in
        let _endpos = _endpos_p_ in
        let _v : (
# 107 "rustparser/RustsurfaceParser.mly"
      (prog_item list)
# 4100 "rustparser/RustsurfaceParser.ml"
        ) = 
# 128 "rustparser/RustsurfaceParser.mly"
                     ( let (id, f) = f in (Pfn (id, f))::p )
# 4104 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = _2;
          MenhirLib.EngineTypes.startp = _startpos__2_;
          MenhirLib.EngineTypes.endp = _endpos__2_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _menhir_s;
            MenhirLib.EngineTypes.semv = p;
            MenhirLib.EngineTypes.startp = _startpos_p_;
            MenhirLib.EngineTypes.endp = _endpos_p_;
            MenhirLib.EngineTypes.next = _menhir_stack;
          };
        } = _menhir_stack in
        let _2 : unit = Obj.magic _2 in
        let p : (
# 107 "rustparser/RustsurfaceParser.mly"
      (prog_item list)
# 4132 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic p in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_p_ in
        let _endpos = _endpos__2_ in
        let _v : (
# 88 "rustparser/RustsurfaceParser.mly"
       (Rustsurface.prog_item list)
# 4140 "rustparser/RustsurfaceParser.ml"
        ) = 
# 116 "rustparser/RustsurfaceParser.mly"
                  ( p )
# 4144 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = s;
          MenhirLib.EngineTypes.startp = _startpos_s_;
          MenhirLib.EngineTypes.endp = _endpos_s_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let s : (
# 96 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 4165 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic s in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_s_ in
        let _endpos = _endpos_s_ in
        let _v : (
# 95 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 4173 "rustparser/RustsurfaceParser.ml"
        ) = 
# 317 "rustparser/RustsurfaceParser.mly"
                  ( s )
# 4177 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = s3;
          MenhirLib.EngineTypes.startp = _startpos_s3_;
          MenhirLib.EngineTypes.endp = _endpos_s3_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _9;
            MenhirLib.EngineTypes.startp = _startpos__9_;
            MenhirLib.EngineTypes.endp = _endpos__9_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _;
              MenhirLib.EngineTypes.semv = s2;
              MenhirLib.EngineTypes.startp = _startpos_s2_;
              MenhirLib.EngineTypes.endp = _endpos_s2_;
              MenhirLib.EngineTypes.next = {
                MenhirLib.EngineTypes.state = _;
                MenhirLib.EngineTypes.semv = _7;
                MenhirLib.EngineTypes.startp = _startpos__7_;
                MenhirLib.EngineTypes.endp = _endpos__7_;
                MenhirLib.EngineTypes.next = {
                  MenhirLib.EngineTypes.state = _;
                  MenhirLib.EngineTypes.semv = _6;
                  MenhirLib.EngineTypes.startp = _startpos__6_;
                  MenhirLib.EngineTypes.endp = _endpos__6_;
                  MenhirLib.EngineTypes.next = {
                    MenhirLib.EngineTypes.state = _;
                    MenhirLib.EngineTypes.semv = _5;
                    MenhirLib.EngineTypes.startp = _startpos__5_;
                    MenhirLib.EngineTypes.endp = _endpos__5_;
                    MenhirLib.EngineTypes.next = {
                      MenhirLib.EngineTypes.state = _;
                      MenhirLib.EngineTypes.semv = s1;
                      MenhirLib.EngineTypes.startp = _startpos_s1_;
                      MenhirLib.EngineTypes.endp = _endpos_s1_;
                      MenhirLib.EngineTypes.next = {
                        MenhirLib.EngineTypes.state = _;
                        MenhirLib.EngineTypes.semv = _3;
                        MenhirLib.EngineTypes.startp = _startpos__3_;
                        MenhirLib.EngineTypes.endp = _endpos__3_;
                        MenhirLib.EngineTypes.next = {
                          MenhirLib.EngineTypes.state = _;
                          MenhirLib.EngineTypes.semv = e;
                          MenhirLib.EngineTypes.startp = _startpos_e_;
                          MenhirLib.EngineTypes.endp = _endpos_e_;
                          MenhirLib.EngineTypes.next = {
                            MenhirLib.EngineTypes.state = _menhir_s;
                            MenhirLib.EngineTypes.semv = _1;
                            MenhirLib.EngineTypes.startp = _startpos__1_;
                            MenhirLib.EngineTypes.endp = _endpos__1_;
                            MenhirLib.EngineTypes.next = _menhir_stack;
                          };
                        };
                      };
                    };
                  };
                };
              };
            };
          };
        } = _menhir_stack in
        let s3 : (
# 95 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 4252 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic s3 in
        let _9 : unit = Obj.magic _9 in
        let s2 : (
# 95 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 4258 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic s2 in
        let _7 : unit = Obj.magic _7 in
        let _6 : unit = Obj.magic _6 in
        let _5 : unit = Obj.magic _5 in
        let s1 : (
# 95 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 4266 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic s1 in
        let _3 : unit = Obj.magic _3 in
        let e : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 4272 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos_s3_ in
        let _v : (
# 95 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 4281 "rustparser/RustsurfaceParser.ml"
        ) = 
# 319 "rustparser/RustsurfaceParser.mly"
    ( Ssequence (Sifthenelse (e, s1, s2), s3) )
# 4285 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = s3;
          MenhirLib.EngineTypes.startp = _startpos_s3_;
          MenhirLib.EngineTypes.endp = _endpos_s3_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _5;
            MenhirLib.EngineTypes.startp = _startpos__5_;
            MenhirLib.EngineTypes.endp = _endpos__5_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _;
              MenhirLib.EngineTypes.semv = s1;
              MenhirLib.EngineTypes.startp = _startpos_s1_;
              MenhirLib.EngineTypes.endp = _endpos_s1_;
              MenhirLib.EngineTypes.next = {
                MenhirLib.EngineTypes.state = _;
                MenhirLib.EngineTypes.semv = _3;
                MenhirLib.EngineTypes.startp = _startpos__3_;
                MenhirLib.EngineTypes.endp = _endpos__3_;
                MenhirLib.EngineTypes.next = {
                  MenhirLib.EngineTypes.state = _;
                  MenhirLib.EngineTypes.semv = e;
                  MenhirLib.EngineTypes.startp = _startpos_e_;
                  MenhirLib.EngineTypes.endp = _endpos_e_;
                  MenhirLib.EngineTypes.next = {
                    MenhirLib.EngineTypes.state = _menhir_s;
                    MenhirLib.EngineTypes.semv = _1;
                    MenhirLib.EngineTypes.startp = _startpos__1_;
                    MenhirLib.EngineTypes.endp = _endpos__1_;
                    MenhirLib.EngineTypes.next = _menhir_stack;
                  };
                };
              };
            };
          };
        } = _menhir_stack in
        let s3 : (
# 95 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 4336 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic s3 in
        let _5 : unit = Obj.magic _5 in
        let s1 : (
# 95 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 4342 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic s1 in
        let _3 : unit = Obj.magic _3 in
        let e : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 4348 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos_s3_ in
        let _v : (
# 95 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 4357 "rustparser/RustsurfaceParser.ml"
        ) = 
# 321 "rustparser/RustsurfaceParser.mly"
    ( Ssequence (Sifthenelse (e, s1, Sskip), s3) )
# 4361 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = s1;
          MenhirLib.EngineTypes.startp = _startpos_s1_;
          MenhirLib.EngineTypes.endp = _endpos_s1_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _5;
            MenhirLib.EngineTypes.startp = _startpos__5_;
            MenhirLib.EngineTypes.endp = _endpos__5_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _;
              MenhirLib.EngineTypes.semv = s;
              MenhirLib.EngineTypes.startp = _startpos_s_;
              MenhirLib.EngineTypes.endp = _endpos_s_;
              MenhirLib.EngineTypes.next = {
                MenhirLib.EngineTypes.state = _;
                MenhirLib.EngineTypes.semv = _3;
                MenhirLib.EngineTypes.startp = _startpos__3_;
                MenhirLib.EngineTypes.endp = _endpos__3_;
                MenhirLib.EngineTypes.next = {
                  MenhirLib.EngineTypes.state = _;
                  MenhirLib.EngineTypes.semv = e;
                  MenhirLib.EngineTypes.startp = _startpos_e_;
                  MenhirLib.EngineTypes.endp = _endpos_e_;
                  MenhirLib.EngineTypes.next = {
                    MenhirLib.EngineTypes.state = _menhir_s;
                    MenhirLib.EngineTypes.semv = _1;
                    MenhirLib.EngineTypes.startp = _startpos__1_;
                    MenhirLib.EngineTypes.endp = _endpos__1_;
                    MenhirLib.EngineTypes.next = _menhir_stack;
                  };
                };
              };
            };
          };
        } = _menhir_stack in
        let s1 : (
# 95 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 4412 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic s1 in
        let _5 : unit = Obj.magic _5 in
        let s : (
# 95 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 4418 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic s in
        let _3 : unit = Obj.magic _3 in
        let e : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 4424 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos_s1_ in
        let _v : (
# 95 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 4433 "rustparser/RustsurfaceParser.ml"
        ) = 
# 323 "rustparser/RustsurfaceParser.mly"
    ( Ssequence (Swhile (e, s), s1) )
# 4437 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = s1;
          MenhirLib.EngineTypes.startp = _startpos_s1_;
          MenhirLib.EngineTypes.endp = _endpos_s1_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _4;
            MenhirLib.EngineTypes.startp = _startpos__4_;
            MenhirLib.EngineTypes.endp = _endpos__4_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _;
              MenhirLib.EngineTypes.semv = s;
              MenhirLib.EngineTypes.startp = _startpos_s_;
              MenhirLib.EngineTypes.endp = _endpos_s_;
              MenhirLib.EngineTypes.next = {
                MenhirLib.EngineTypes.state = _;
                MenhirLib.EngineTypes.semv = _2;
                MenhirLib.EngineTypes.startp = _startpos__2_;
                MenhirLib.EngineTypes.endp = _endpos__2_;
                MenhirLib.EngineTypes.next = {
                  MenhirLib.EngineTypes.state = _menhir_s;
                  MenhirLib.EngineTypes.semv = _1;
                  MenhirLib.EngineTypes.startp = _startpos__1_;
                  MenhirLib.EngineTypes.endp = _endpos__1_;
                  MenhirLib.EngineTypes.next = _menhir_stack;
                };
              };
            };
          };
        } = _menhir_stack in
        let s1 : (
# 95 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 4482 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic s1 in
        let _4 : unit = Obj.magic _4 in
        let s : (
# 95 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 4488 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic s in
        let _2 : unit = Obj.magic _2 in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos_s1_ in
        let _v : (
# 95 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 4498 "rustparser/RustsurfaceParser.ml"
        ) = 
# 325 "rustparser/RustsurfaceParser.mly"
    ( Ssequence (Sloop s, s1) )
# 4502 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = s1;
          MenhirLib.EngineTypes.startp = _startpos_s1_;
          MenhirLib.EngineTypes.endp = _endpos_s1_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _3;
            MenhirLib.EngineTypes.startp = _startpos__3_;
            MenhirLib.EngineTypes.endp = _endpos__3_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _;
              MenhirLib.EngineTypes.semv = s;
              MenhirLib.EngineTypes.startp = _startpos_s_;
              MenhirLib.EngineTypes.endp = _endpos_s_;
              MenhirLib.EngineTypes.next = {
                MenhirLib.EngineTypes.state = _menhir_s;
                MenhirLib.EngineTypes.semv = _1;
                MenhirLib.EngineTypes.startp = _startpos__1_;
                MenhirLib.EngineTypes.endp = _endpos__1_;
                MenhirLib.EngineTypes.next = _menhir_stack;
              };
            };
          };
        } = _menhir_stack in
        let s1 : (
# 95 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 4541 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic s1 in
        let _3 : unit = Obj.magic _3 in
        let s : (
# 95 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 4547 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic s in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos_s1_ in
        let _v : (
# 95 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 4556 "rustparser/RustsurfaceParser.ml"
        ) = 
# 326 "rustparser/RustsurfaceParser.mly"
                                         ( Ssequence (Sscope s, s1) )
# 4560 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = s2;
          MenhirLib.EngineTypes.startp = _startpos_s2_;
          MenhirLib.EngineTypes.endp = _endpos_s2_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _2;
            MenhirLib.EngineTypes.startp = _startpos__2_;
            MenhirLib.EngineTypes.endp = _endpos__2_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _menhir_s;
              MenhirLib.EngineTypes.semv = s;
              MenhirLib.EngineTypes.startp = _startpos_s_;
              MenhirLib.EngineTypes.endp = _endpos_s_;
              MenhirLib.EngineTypes.next = _menhir_stack;
            };
          };
        } = _menhir_stack in
        let s2 : (
# 95 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 4593 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic s2 in
        let _2 : unit = Obj.magic _2 in
        let s : (
# 96 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 4599 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic s in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_s_ in
        let _endpos = _endpos_s2_ in
        let _v : (
# 95 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 4607 "rustparser/RustsurfaceParser.ml"
        ) = 
# 327 "rustparser/RustsurfaceParser.mly"
                                        ( Ssequence (s, s2) )
# 4611 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let _menhir_s = _menhir_env.MenhirLib.EngineTypes.current in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _endpos = _startpos in
        let _v : (
# 96 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 4629 "rustparser/RustsurfaceParser.ml"
        ) = 
# 300 "rustparser/RustsurfaceParser.mly"
    ( Sskip )
# 4633 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = e;
          MenhirLib.EngineTypes.startp = _startpos_e_;
          MenhirLib.EngineTypes.endp = _endpos_e_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let e : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 4654 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_e_ in
        let _endpos = _endpos_e_ in
        let _v : (
# 96 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 4662 "rustparser/RustsurfaceParser.ml"
        ) = 
# 301 "rustparser/RustsurfaceParser.mly"
             ( Sdo e )
# 4666 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = _6;
          MenhirLib.EngineTypes.startp = _startpos__6_;
          MenhirLib.EngineTypes.endp = _endpos__6_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = flds;
            MenhirLib.EngineTypes.startp = _startpos_flds_;
            MenhirLib.EngineTypes.endp = _endpos_flds_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _;
              MenhirLib.EngineTypes.semv = _4;
              MenhirLib.EngineTypes.startp = _startpos__4_;
              MenhirLib.EngineTypes.endp = _endpos__4_;
              MenhirLib.EngineTypes.next = {
                MenhirLib.EngineTypes.state = _;
                MenhirLib.EngineTypes.semv = x;
                MenhirLib.EngineTypes.startp = _startpos_x_;
                MenhirLib.EngineTypes.endp = _endpos_x_;
                MenhirLib.EngineTypes.next = {
                  MenhirLib.EngineTypes.state = _;
                  MenhirLib.EngineTypes.semv = _2;
                  MenhirLib.EngineTypes.startp = _startpos__2_;
                  MenhirLib.EngineTypes.endp = _endpos__2_;
                  MenhirLib.EngineTypes.next = {
                    MenhirLib.EngineTypes.state = _menhir_s;
                    MenhirLib.EngineTypes.semv = e1;
                    MenhirLib.EngineTypes.startp = _startpos_e1_;
                    MenhirLib.EngineTypes.endp = _endpos_e1_;
                    MenhirLib.EngineTypes.next = _menhir_stack;
                  };
                };
              };
            };
          };
        } = _menhir_stack in
        let _6 : unit = Obj.magic _6 in
        let flds : (
# 97 "rustparser/RustsurfaceParser.mly"
      (id list * expr list)
# 4718 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic flds in
        let _4 : unit = Obj.magic _4 in
        let x : (
# 5 "rustparser/RustsurfaceParser.mly"
       (string)
# 4724 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x in
        let _2 : unit = Obj.magic _2 in
        let e1 : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 4730 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_e1_ in
        let _endpos = _endpos__6_ in
        let _v : (
# 96 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 4738 "rustparser/RustsurfaceParser.ml"
        ) = 
# 303 "rustparser/RustsurfaceParser.mly"
    ( Sdo (Eassign (e1, Estruct (x, fst flds, snd flds))) )
# 4742 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = t;
          MenhirLib.EngineTypes.startp = _startpos_t_;
          MenhirLib.EngineTypes.endp = _endpos_t_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _3;
            MenhirLib.EngineTypes.startp = _startpos__3_;
            MenhirLib.EngineTypes.endp = _endpos__3_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _;
              MenhirLib.EngineTypes.semv = x;
              MenhirLib.EngineTypes.startp = _startpos_x_;
              MenhirLib.EngineTypes.endp = _endpos_x_;
              MenhirLib.EngineTypes.next = {
                MenhirLib.EngineTypes.state = _menhir_s;
                MenhirLib.EngineTypes.semv = _1;
                MenhirLib.EngineTypes.startp = _startpos__1_;
                MenhirLib.EngineTypes.endp = _endpos__1_;
                MenhirLib.EngineTypes.next = _menhir_stack;
              };
            };
          };
        } = _menhir_stack in
        let t : (
# 98 "rustparser/RustsurfaceParser.mly"
      (ty)
# 4781 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic t in
        let _3 : unit = Obj.magic _3 in
        let x : (
# 5 "rustparser/RustsurfaceParser.mly"
       (string)
# 4787 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos_t_ in
        let _v : (
# 96 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 4796 "rustparser/RustsurfaceParser.ml"
        ) = 
# 305 "rustparser/RustsurfaceParser.mly"
    ( Slet (x, t, Option.None) )
# 4800 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = e;
          MenhirLib.EngineTypes.startp = _startpos_e_;
          MenhirLib.EngineTypes.endp = _endpos_e_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _5;
            MenhirLib.EngineTypes.startp = _startpos__5_;
            MenhirLib.EngineTypes.endp = _endpos__5_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _;
              MenhirLib.EngineTypes.semv = t;
              MenhirLib.EngineTypes.startp = _startpos_t_;
              MenhirLib.EngineTypes.endp = _endpos_t_;
              MenhirLib.EngineTypes.next = {
                MenhirLib.EngineTypes.state = _;
                MenhirLib.EngineTypes.semv = _3;
                MenhirLib.EngineTypes.startp = _startpos__3_;
                MenhirLib.EngineTypes.endp = _endpos__3_;
                MenhirLib.EngineTypes.next = {
                  MenhirLib.EngineTypes.state = _;
                  MenhirLib.EngineTypes.semv = x;
                  MenhirLib.EngineTypes.startp = _startpos_x_;
                  MenhirLib.EngineTypes.endp = _endpos_x_;
                  MenhirLib.EngineTypes.next = {
                    MenhirLib.EngineTypes.state = _menhir_s;
                    MenhirLib.EngineTypes.semv = _1;
                    MenhirLib.EngineTypes.startp = _startpos__1_;
                    MenhirLib.EngineTypes.endp = _endpos__1_;
                    MenhirLib.EngineTypes.next = _menhir_stack;
                  };
                };
              };
            };
          };
        } = _menhir_stack in
        let e : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 4851 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e in
        let _5 : unit = Obj.magic _5 in
        let t : (
# 98 "rustparser/RustsurfaceParser.mly"
      (ty)
# 4857 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic t in
        let _3 : unit = Obj.magic _3 in
        let x : (
# 5 "rustparser/RustsurfaceParser.mly"
       (string)
# 4863 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos_e_ in
        let _v : (
# 96 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 4872 "rustparser/RustsurfaceParser.ml"
        ) = 
# 307 "rustparser/RustsurfaceParser.mly"
    ( Slet (x, t, Option.Some e))
# 4876 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = _9;
          MenhirLib.EngineTypes.startp = _startpos__9_;
          MenhirLib.EngineTypes.endp = _endpos__9_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = flds;
            MenhirLib.EngineTypes.startp = _startpos_flds_;
            MenhirLib.EngineTypes.endp = _endpos_flds_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _;
              MenhirLib.EngineTypes.semv = _7;
              MenhirLib.EngineTypes.startp = _startpos__7_;
              MenhirLib.EngineTypes.endp = _endpos__7_;
              MenhirLib.EngineTypes.next = {
                MenhirLib.EngineTypes.state = _;
                MenhirLib.EngineTypes.semv = xs;
                MenhirLib.EngineTypes.startp = _startpos_xs_;
                MenhirLib.EngineTypes.endp = _endpos_xs_;
                MenhirLib.EngineTypes.next = {
                  MenhirLib.EngineTypes.state = _;
                  MenhirLib.EngineTypes.semv = _5;
                  MenhirLib.EngineTypes.startp = _startpos__5_;
                  MenhirLib.EngineTypes.endp = _endpos__5_;
                  MenhirLib.EngineTypes.next = {
                    MenhirLib.EngineTypes.state = _;
                    MenhirLib.EngineTypes.semv = t;
                    MenhirLib.EngineTypes.startp = _startpos_t_;
                    MenhirLib.EngineTypes.endp = _endpos_t_;
                    MenhirLib.EngineTypes.next = {
                      MenhirLib.EngineTypes.state = _;
                      MenhirLib.EngineTypes.semv = _3;
                      MenhirLib.EngineTypes.startp = _startpos__3_;
                      MenhirLib.EngineTypes.endp = _endpos__3_;
                      MenhirLib.EngineTypes.next = {
                        MenhirLib.EngineTypes.state = _;
                        MenhirLib.EngineTypes.semv = x;
                        MenhirLib.EngineTypes.startp = _startpos_x_;
                        MenhirLib.EngineTypes.endp = _endpos_x_;
                        MenhirLib.EngineTypes.next = {
                          MenhirLib.EngineTypes.state = _menhir_s;
                          MenhirLib.EngineTypes.semv = _1;
                          MenhirLib.EngineTypes.startp = _startpos__1_;
                          MenhirLib.EngineTypes.endp = _endpos__1_;
                          MenhirLib.EngineTypes.next = _menhir_stack;
                        };
                      };
                    };
                  };
                };
              };
            };
          };
        } = _menhir_stack in
        let _9 : unit = Obj.magic _9 in
        let flds : (
# 97 "rustparser/RustsurfaceParser.mly"
      (id list * expr list)
# 4946 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic flds in
        let _7 : unit = Obj.magic _7 in
        let xs : (
# 5 "rustparser/RustsurfaceParser.mly"
       (string)
# 4952 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic xs in
        let _5 : unit = Obj.magic _5 in
        let t : (
# 98 "rustparser/RustsurfaceParser.mly"
      (ty)
# 4958 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic t in
        let _3 : unit = Obj.magic _3 in
        let x : (
# 5 "rustparser/RustsurfaceParser.mly"
       (string)
# 4964 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos__9_ in
        let _v : (
# 96 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 4973 "rustparser/RustsurfaceParser.ml"
        ) = 
# 309 "rustparser/RustsurfaceParser.mly"
    ( Slet (x, t, Option.Some (Estruct (xs, fst flds, snd flds))) )
# 4977 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = _1;
          MenhirLib.EngineTypes.startp = _startpos__1_;
          MenhirLib.EngineTypes.endp = _endpos__1_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos__1_ in
        let _v : (
# 96 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 5002 "rustparser/RustsurfaceParser.ml"
        ) = 
# 310 "rustparser/RustsurfaceParser.mly"
          ( Sbreak )
# 5006 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = _1;
          MenhirLib.EngineTypes.startp = _startpos__1_;
          MenhirLib.EngineTypes.endp = _endpos__1_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos__1_ in
        let _v : (
# 96 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 5031 "rustparser/RustsurfaceParser.ml"
        ) = 
# 311 "rustparser/RustsurfaceParser.mly"
             ( Scontinue )
# 5035 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = _1;
          MenhirLib.EngineTypes.startp = _startpos__1_;
          MenhirLib.EngineTypes.endp = _endpos__1_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos__1_ in
        let _v : (
# 96 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 5060 "rustparser/RustsurfaceParser.ml"
        ) = 
# 312 "rustparser/RustsurfaceParser.mly"
            ( Sreturn None )
# 5064 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = e;
          MenhirLib.EngineTypes.startp = _startpos_e_;
          MenhirLib.EngineTypes.endp = _endpos_e_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _menhir_s;
            MenhirLib.EngineTypes.semv = _1;
            MenhirLib.EngineTypes.startp = _startpos__1_;
            MenhirLib.EngineTypes.endp = _endpos__1_;
            MenhirLib.EngineTypes.next = _menhir_stack;
          };
        } = _menhir_stack in
        let e : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 5091 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos_e_ in
        let _v : (
# 96 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 5100 "rustparser/RustsurfaceParser.ml"
        ) = 
# 313 "rustparser/RustsurfaceParser.mly"
                     ( Sreturn (Some e) )
# 5104 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = _5;
          MenhirLib.EngineTypes.startp = _startpos__5_;
          MenhirLib.EngineTypes.endp = _endpos__5_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = arms;
            MenhirLib.EngineTypes.startp = _startpos_arms_;
            MenhirLib.EngineTypes.endp = _endpos_arms_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _;
              MenhirLib.EngineTypes.semv = _3;
              MenhirLib.EngineTypes.startp = _startpos__3_;
              MenhirLib.EngineTypes.endp = _endpos__3_;
              MenhirLib.EngineTypes.next = {
                MenhirLib.EngineTypes.state = _;
                MenhirLib.EngineTypes.semv = e;
                MenhirLib.EngineTypes.startp = _startpos_e_;
                MenhirLib.EngineTypes.endp = _endpos_e_;
                MenhirLib.EngineTypes.next = {
                  MenhirLib.EngineTypes.state = _menhir_s;
                  MenhirLib.EngineTypes.semv = _1;
                  MenhirLib.EngineTypes.startp = _startpos__1_;
                  MenhirLib.EngineTypes.endp = _endpos__1_;
                  MenhirLib.EngineTypes.next = _menhir_stack;
                };
              };
            };
          };
        } = _menhir_stack in
        let _5 : unit = Obj.magic _5 in
        let arms : (
# 93 "rustparser/RustsurfaceParser.mly"
      (case list)
# 5150 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic arms in
        let _3 : unit = Obj.magic _3 in
        let e : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 5156 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos__5_ in
        let _v : (
# 96 "rustparser/RustsurfaceParser.mly"
      (stmt)
# 5165 "rustparser/RustsurfaceParser.ml"
        ) = 
# 314 "rustparser/RustsurfaceParser.mly"
                                                       ( Smatch (e, arms) )
# 5169 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = _7;
          MenhirLib.EngineTypes.startp = _startpos__7_;
          MenhirLib.EngineTypes.endp = _endpos__7_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = flds;
            MenhirLib.EngineTypes.startp = _startpos_flds_;
            MenhirLib.EngineTypes.endp = _endpos_flds_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _;
              MenhirLib.EngineTypes.semv = _5;
              MenhirLib.EngineTypes.startp = _startpos__5_;
              MenhirLib.EngineTypes.endp = _endpos__5_;
              MenhirLib.EngineTypes.next = {
                MenhirLib.EngineTypes.state = _;
                MenhirLib.EngineTypes.semv = rels;
                MenhirLib.EngineTypes.startp = _startpos_rels_;
                MenhirLib.EngineTypes.endp = _endpos_rels_;
                MenhirLib.EngineTypes.next = {
                  MenhirLib.EngineTypes.state = _;
                  MenhirLib.EngineTypes.semv = orgs;
                  MenhirLib.EngineTypes.startp = _startpos_orgs_;
                  MenhirLib.EngineTypes.endp = _endpos_orgs_;
                  MenhirLib.EngineTypes.next = {
                    MenhirLib.EngineTypes.state = _;
                    MenhirLib.EngineTypes.semv = x;
                    MenhirLib.EngineTypes.startp = _startpos_x_;
                    MenhirLib.EngineTypes.endp = _endpos_x_;
                    MenhirLib.EngineTypes.next = {
                      MenhirLib.EngineTypes.state = _menhir_s;
                      MenhirLib.EngineTypes.semv = _1;
                      MenhirLib.EngineTypes.startp = _startpos__1_;
                      MenhirLib.EngineTypes.endp = _endpos__1_;
                      MenhirLib.EngineTypes.next = _menhir_stack;
                    };
                  };
                };
              };
            };
          };
        } = _menhir_stack in
        let _7 : unit = Obj.magic _7 in
        let flds : (
# 99 "rustparser/RustsurfaceParser.mly"
      ((id * ty) list)
# 5227 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic flds in
        let _5 : unit = Obj.magic _5 in
        let rels : (
# 111 "rustparser/RustsurfaceParser.mly"
      ((id * id) list)
# 5233 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic rels in
        let orgs : (
# 110 "rustparser/RustsurfaceParser.mly"
      (id list)
# 5238 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic orgs in
        let x : (
# 5 "rustparser/RustsurfaceParser.mly"
       (string)
# 5243 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos__7_ in
        let _v : (
# 103 "rustparser/RustsurfaceParser.mly"
      (id * comp_struc * id list * (id * id) list)
# 5252 "rustparser/RustsurfaceParser.ml"
        ) = 
# 182 "rustparser/RustsurfaceParser.mly"
    ( (x, flds, orgs, rels) )
# 5256 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = _5;
          MenhirLib.EngineTypes.startp = _startpos__5_;
          MenhirLib.EngineTypes.endp = _endpos__5_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = rels;
            MenhirLib.EngineTypes.startp = _startpos_rels_;
            MenhirLib.EngineTypes.endp = _endpos_rels_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _;
              MenhirLib.EngineTypes.semv = orgs;
              MenhirLib.EngineTypes.startp = _startpos_orgs_;
              MenhirLib.EngineTypes.endp = _endpos_orgs_;
              MenhirLib.EngineTypes.next = {
                MenhirLib.EngineTypes.state = _;
                MenhirLib.EngineTypes.semv = x;
                MenhirLib.EngineTypes.startp = _startpos_x_;
                MenhirLib.EngineTypes.endp = _endpos_x_;
                MenhirLib.EngineTypes.next = {
                  MenhirLib.EngineTypes.state = _menhir_s;
                  MenhirLib.EngineTypes.semv = _1;
                  MenhirLib.EngineTypes.startp = _startpos__1_;
                  MenhirLib.EngineTypes.endp = _endpos__1_;
                  MenhirLib.EngineTypes.next = _menhir_stack;
                };
              };
            };
          };
        } = _menhir_stack in
        let _5 : unit = Obj.magic _5 in
        let rels : (
# 111 "rustparser/RustsurfaceParser.mly"
      ((id * id) list)
# 5302 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic rels in
        let orgs : (
# 110 "rustparser/RustsurfaceParser.mly"
      (id list)
# 5307 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic orgs in
        let x : (
# 5 "rustparser/RustsurfaceParser.mly"
       (string)
# 5312 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos__5_ in
        let _v : (
# 105 "rustparser/RustsurfaceParser.mly"
      (id * id list * (id * id) list)
# 5321 "rustparser/RustsurfaceParser.ml"
        ) = 
# 186 "rustparser/RustsurfaceParser.mly"
    ( (x, orgs, rels) )
# 5325 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let _menhir_s = _menhir_env.MenhirLib.EngineTypes.current in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _endpos = _startpos in
        let _v : (
# 97 "rustparser/RustsurfaceParser.mly"
      (id list * expr list)
# 5343 "rustparser/RustsurfaceParser.ml"
        ) = 
# 201 "rustparser/RustsurfaceParser.mly"
    ( ([], []) )
# 5347 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = e;
          MenhirLib.EngineTypes.startp = _startpos_e_;
          MenhirLib.EngineTypes.endp = _endpos_e_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _2;
            MenhirLib.EngineTypes.startp = _startpos__2_;
            MenhirLib.EngineTypes.endp = _endpos__2_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _menhir_s;
              MenhirLib.EngineTypes.semv = x;
              MenhirLib.EngineTypes.startp = _startpos_x_;
              MenhirLib.EngineTypes.endp = _endpos_x_;
              MenhirLib.EngineTypes.next = _menhir_stack;
            };
          };
        } = _menhir_stack in
        let e : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 5380 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e in
        let _2 : unit = Obj.magic _2 in
        let x : (
# 5 "rustparser/RustsurfaceParser.mly"
       (string)
# 5386 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_x_ in
        let _endpos = _endpos_e_ in
        let _v : (
# 97 "rustparser/RustsurfaceParser.mly"
      (id list * expr list)
# 5394 "rustparser/RustsurfaceParser.ml"
        ) = 
# 202 "rustparser/RustsurfaceParser.mly"
                            ( ([x], [e]) )
# 5398 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = flds;
          MenhirLib.EngineTypes.startp = _startpos_flds_;
          MenhirLib.EngineTypes.endp = _endpos_flds_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _4;
            MenhirLib.EngineTypes.startp = _startpos__4_;
            MenhirLib.EngineTypes.endp = _endpos__4_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _;
              MenhirLib.EngineTypes.semv = e;
              MenhirLib.EngineTypes.startp = _startpos_e_;
              MenhirLib.EngineTypes.endp = _endpos_e_;
              MenhirLib.EngineTypes.next = {
                MenhirLib.EngineTypes.state = _;
                MenhirLib.EngineTypes.semv = _2;
                MenhirLib.EngineTypes.startp = _startpos__2_;
                MenhirLib.EngineTypes.endp = _endpos__2_;
                MenhirLib.EngineTypes.next = {
                  MenhirLib.EngineTypes.state = _menhir_s;
                  MenhirLib.EngineTypes.semv = x;
                  MenhirLib.EngineTypes.startp = _startpos_x_;
                  MenhirLib.EngineTypes.endp = _endpos_x_;
                  MenhirLib.EngineTypes.next = _menhir_stack;
                };
              };
            };
          };
        } = _menhir_stack in
        let flds : (
# 97 "rustparser/RustsurfaceParser.mly"
      (id list * expr list)
# 5443 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic flds in
        let _4 : unit = Obj.magic _4 in
        let e : (
# 91 "rustparser/RustsurfaceParser.mly"
      (expr)
# 5449 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic e in
        let _2 : unit = Obj.magic _2 in
        let x : (
# 5 "rustparser/RustsurfaceParser.mly"
       (string)
# 5455 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_x_ in
        let _endpos = _endpos_flds_ in
        let _v : (
# 97 "rustparser/RustsurfaceParser.mly"
      (id list * expr list)
# 5463 "rustparser/RustsurfaceParser.ml"
        ) = 
# 204 "rustparser/RustsurfaceParser.mly"
    ( (x::(fst flds), e::(snd flds)) )
# 5467 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = _4;
          MenhirLib.EngineTypes.startp = _startpos__4_;
          MenhirLib.EngineTypes.endp = _endpos__4_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = args;
            MenhirLib.EngineTypes.startp = _startpos_args_;
            MenhirLib.EngineTypes.endp = _endpos_args_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _;
              MenhirLib.EngineTypes.semv = _2;
              MenhirLib.EngineTypes.startp = _startpos__2_;
              MenhirLib.EngineTypes.endp = _endpos__2_;
              MenhirLib.EngineTypes.next = {
                MenhirLib.EngineTypes.state = _menhir_s;
                MenhirLib.EngineTypes.semv = p;
                MenhirLib.EngineTypes.startp = _startpos_p_;
                MenhirLib.EngineTypes.endp = _endpos_p_;
                MenhirLib.EngineTypes.next = _menhir_stack;
              };
            };
          };
        } = _menhir_stack in
        let _4 : unit = Obj.magic _4 in
        let args : (
# 109 "rustparser/RustsurfaceParser.mly"
      (pat list)
# 5507 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic args in
        let _2 : unit = Obj.magic _2 in
        let p : 'tv_path_expr = Obj.magic p in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_p_ in
        let _endpos = _endpos__4_ in
        let _v : 'tv_tuple_struct_pattern = 
# 262 "rustparser/RustsurfaceParser.mly"
                                                       ( let (x, y) = p in Pconstructor (x, y, args) )
# 5517 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = _2;
          MenhirLib.EngineTypes.startp = _startpos__2_;
          MenhirLib.EngineTypes.endp = _endpos__2_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _menhir_s;
            MenhirLib.EngineTypes.semv = _1;
            MenhirLib.EngineTypes.startp = _startpos__1_;
            MenhirLib.EngineTypes.endp = _endpos__1_;
            MenhirLib.EngineTypes.next = _menhir_stack;
          };
        } = _menhir_stack in
        let _2 : unit = Obj.magic _2 in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos__2_ in
        let _v : (
# 98 "rustparser/RustsurfaceParser.mly"
      (ty)
# 5549 "rustparser/RustsurfaceParser.ml"
        ) = 
# 275 "rustparser/RustsurfaceParser.mly"
                   ( Tunit )
# 5553 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = _1;
          MenhirLib.EngineTypes.startp = _startpos__1_;
          MenhirLib.EngineTypes.endp = _endpos__1_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos__1_ in
        let _v : (
# 98 "rustparser/RustsurfaceParser.mly"
      (ty)
# 5578 "rustparser/RustsurfaceParser.ml"
        ) = 
# 276 "rustparser/RustsurfaceParser.mly"
         ( Tint (Ctypes.IBool, Ctypes.Unsigned) )
# 5582 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = _1;
          MenhirLib.EngineTypes.startp = _startpos__1_;
          MenhirLib.EngineTypes.endp = _endpos__1_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos__1_ in
        let _v : (
# 98 "rustparser/RustsurfaceParser.mly"
      (ty)
# 5607 "rustparser/RustsurfaceParser.ml"
        ) = 
# 277 "rustparser/RustsurfaceParser.mly"
          ( Tint (Ctypes.I32, Ctypes.Signed) )
# 5611 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = _1;
          MenhirLib.EngineTypes.startp = _startpos__1_;
          MenhirLib.EngineTypes.endp = _endpos__1_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos__1_ in
        let _v : (
# 98 "rustparser/RustsurfaceParser.mly"
      (ty)
# 5636 "rustparser/RustsurfaceParser.ml"
        ) = 
# 278 "rustparser/RustsurfaceParser.mly"
          ( Tint (Ctypes.I16, Ctypes.Signed) )
# 5640 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = _1;
          MenhirLib.EngineTypes.startp = _startpos__1_;
          MenhirLib.EngineTypes.endp = _endpos__1_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos__1_ in
        let _v : (
# 98 "rustparser/RustsurfaceParser.mly"
      (ty)
# 5665 "rustparser/RustsurfaceParser.ml"
        ) = 
# 279 "rustparser/RustsurfaceParser.mly"
         ( Tint (Ctypes.I8, Ctypes.Signed) )
# 5669 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = _1;
          MenhirLib.EngineTypes.startp = _startpos__1_;
          MenhirLib.EngineTypes.endp = _endpos__1_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos__1_ in
        let _v : (
# 98 "rustparser/RustsurfaceParser.mly"
      (ty)
# 5694 "rustparser/RustsurfaceParser.ml"
        ) = 
# 280 "rustparser/RustsurfaceParser.mly"
           ( Tint (Ctypes.I32, Ctypes.Unsigned) )
# 5698 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = _1;
          MenhirLib.EngineTypes.startp = _startpos__1_;
          MenhirLib.EngineTypes.endp = _endpos__1_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos__1_ in
        let _v : (
# 98 "rustparser/RustsurfaceParser.mly"
      (ty)
# 5723 "rustparser/RustsurfaceParser.ml"
        ) = 
# 281 "rustparser/RustsurfaceParser.mly"
           ( Tint (Ctypes.I16, Ctypes.Unsigned) )
# 5727 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = _1;
          MenhirLib.EngineTypes.startp = _startpos__1_;
          MenhirLib.EngineTypes.endp = _endpos__1_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos__1_ in
        let _v : (
# 98 "rustparser/RustsurfaceParser.mly"
      (ty)
# 5752 "rustparser/RustsurfaceParser.ml"
        ) = 
# 282 "rustparser/RustsurfaceParser.mly"
          ( Tint (Ctypes.I8, Ctypes.Unsigned) )
# 5756 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = _1;
          MenhirLib.EngineTypes.startp = _startpos__1_;
          MenhirLib.EngineTypes.endp = _endpos__1_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos__1_ in
        let _v : (
# 98 "rustparser/RustsurfaceParser.mly"
      (ty)
# 5781 "rustparser/RustsurfaceParser.ml"
        ) = 
# 283 "rustparser/RustsurfaceParser.mly"
            ( Tfloat (Ctypes.F64) )
# 5785 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = _1;
          MenhirLib.EngineTypes.startp = _startpos__1_;
          MenhirLib.EngineTypes.endp = _endpos__1_;
          MenhirLib.EngineTypes.next = _menhir_stack;
        } = _menhir_stack in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos__1_ in
        let _v : (
# 98 "rustparser/RustsurfaceParser.mly"
      (ty)
# 5810 "rustparser/RustsurfaceParser.ml"
        ) = 
# 284 "rustparser/RustsurfaceParser.mly"
            ( Tfloat (Ctypes.F32) )
# 5814 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = rels;
          MenhirLib.EngineTypes.startp = _startpos_rels_;
          MenhirLib.EngineTypes.endp = _endpos_rels_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = rt;
            MenhirLib.EngineTypes.startp = _startpos_rt_;
            MenhirLib.EngineTypes.endp = _endpos_rt_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _;
              MenhirLib.EngineTypes.semv = _6;
              MenhirLib.EngineTypes.startp = _startpos__6_;
              MenhirLib.EngineTypes.endp = _endpos__6_;
              MenhirLib.EngineTypes.next = {
                MenhirLib.EngineTypes.state = _;
                MenhirLib.EngineTypes.semv = _5;
                MenhirLib.EngineTypes.startp = _startpos__5_;
                MenhirLib.EngineTypes.endp = _endpos__5_;
                MenhirLib.EngineTypes.next = {
                  MenhirLib.EngineTypes.state = _;
                  MenhirLib.EngineTypes.semv = pt;
                  MenhirLib.EngineTypes.startp = _startpos_pt_;
                  MenhirLib.EngineTypes.endp = _endpos_pt_;
                  MenhirLib.EngineTypes.next = {
                    MenhirLib.EngineTypes.state = _;
                    MenhirLib.EngineTypes.semv = _3;
                    MenhirLib.EngineTypes.startp = _startpos__3_;
                    MenhirLib.EngineTypes.endp = _endpos__3_;
                    MenhirLib.EngineTypes.next = {
                      MenhirLib.EngineTypes.state = _;
                      MenhirLib.EngineTypes.semv = orgs;
                      MenhirLib.EngineTypes.startp = _startpos_orgs_;
                      MenhirLib.EngineTypes.endp = _endpos_orgs_;
                      MenhirLib.EngineTypes.next = {
                        MenhirLib.EngineTypes.state = _menhir_s;
                        MenhirLib.EngineTypes.semv = _1;
                        MenhirLib.EngineTypes.startp = _startpos__1_;
                        MenhirLib.EngineTypes.endp = _endpos__1_;
                        MenhirLib.EngineTypes.next = _menhir_stack;
                      };
                    };
                  };
                };
              };
            };
          };
        } = _menhir_stack in
        let rels : (
# 111 "rustparser/RustsurfaceParser.mly"
      ((id * id) list)
# 5877 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic rels in
        let rt : (
# 98 "rustparser/RustsurfaceParser.mly"
      (ty)
# 5882 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic rt in
        let _6 : unit = Obj.magic _6 in
        let _5 : unit = Obj.magic _5 in
        let pt : (
# 94 "rustparser/RustsurfaceParser.mly"
      (ty list)
# 5889 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic pt in
        let _3 : unit = Obj.magic _3 in
        let orgs : (
# 110 "rustparser/RustsurfaceParser.mly"
      (id list)
# 5895 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic orgs in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos_rels_ in
        let _v : (
# 98 "rustparser/RustsurfaceParser.mly"
      (ty)
# 5904 "rustparser/RustsurfaceParser.ml"
        ) = 
# 285 "rustparser/RustsurfaceParser.mly"
                                                                                                         ( Tfunction (pt, rt, orgs, rels) )
# 5908 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = _4;
          MenhirLib.EngineTypes.startp = _startpos__4_;
          MenhirLib.EngineTypes.endp = _endpos__4_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = t;
            MenhirLib.EngineTypes.startp = _startpos_t_;
            MenhirLib.EngineTypes.endp = _endpos_t_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _;
              MenhirLib.EngineTypes.semv = _2;
              MenhirLib.EngineTypes.startp = _startpos__2_;
              MenhirLib.EngineTypes.endp = _endpos__2_;
              MenhirLib.EngineTypes.next = {
                MenhirLib.EngineTypes.state = _menhir_s;
                MenhirLib.EngineTypes.semv = _1;
                MenhirLib.EngineTypes.startp = _startpos__1_;
                MenhirLib.EngineTypes.endp = _endpos__1_;
                MenhirLib.EngineTypes.next = _menhir_stack;
              };
            };
          };
        } = _menhir_stack in
        let _4 : unit = Obj.magic _4 in
        let t : (
# 98 "rustparser/RustsurfaceParser.mly"
      (ty)
# 5948 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic t in
        let _2 : unit = Obj.magic _2 in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos__4_ in
        let _v : (
# 98 "rustparser/RustsurfaceParser.mly"
      (ty)
# 5958 "rustparser/RustsurfaceParser.ml"
        ) = 
# 286 "rustparser/RustsurfaceParser.mly"
                                ( Tbox (t) )
# 5962 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = t;
          MenhirLib.EngineTypes.startp = _startpos_t_;
          MenhirLib.EngineTypes.endp = _endpos_t_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = _3;
            MenhirLib.EngineTypes.startp = _startpos__3_;
            MenhirLib.EngineTypes.endp = _endpos__3_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _;
              MenhirLib.EngineTypes.semv = org;
              MenhirLib.EngineTypes.startp = _startpos_org_;
              MenhirLib.EngineTypes.endp = _endpos_org_;
              MenhirLib.EngineTypes.next = {
                MenhirLib.EngineTypes.state = _menhir_s;
                MenhirLib.EngineTypes.semv = _1;
                MenhirLib.EngineTypes.startp = _startpos__1_;
                MenhirLib.EngineTypes.endp = _endpos__1_;
                MenhirLib.EngineTypes.next = _menhir_stack;
              };
            };
          };
        } = _menhir_stack in
        let t : (
# 98 "rustparser/RustsurfaceParser.mly"
      (ty)
# 6001 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic t in
        let _3 : unit = Obj.magic _3 in
        let org : 'tv_origin_opt = Obj.magic org in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos_t_ in
        let _v : (
# 98 "rustparser/RustsurfaceParser.mly"
      (ty)
# 6012 "rustparser/RustsurfaceParser.ml"
        ) = 
# 287 "rustparser/RustsurfaceParser.mly"
                                        ( Treference(t, org, Rusttypes.Mutable) )
# 6016 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = t;
          MenhirLib.EngineTypes.startp = _startpos_t_;
          MenhirLib.EngineTypes.endp = _endpos_t_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _;
            MenhirLib.EngineTypes.semv = org;
            MenhirLib.EngineTypes.startp = _startpos_org_;
            MenhirLib.EngineTypes.endp = _endpos_org_;
            MenhirLib.EngineTypes.next = {
              MenhirLib.EngineTypes.state = _menhir_s;
              MenhirLib.EngineTypes.semv = _1;
              MenhirLib.EngineTypes.startp = _startpos__1_;
              MenhirLib.EngineTypes.endp = _endpos__1_;
              MenhirLib.EngineTypes.next = _menhir_stack;
            };
          };
        } = _menhir_stack in
        let t : (
# 98 "rustparser/RustsurfaceParser.mly"
      (ty)
# 6049 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic t in
        let org : 'tv_origin_opt = Obj.magic org in
        let _1 : unit = Obj.magic _1 in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos__1_ in
        let _endpos = _endpos_t_ in
        let _v : (
# 98 "rustparser/RustsurfaceParser.mly"
      (ty)
# 6059 "rustparser/RustsurfaceParser.ml"
        ) = 
# 288 "rustparser/RustsurfaceParser.mly"
                                   ( Treference(t, org, Rusttypes.Immutable) )
# 6063 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
      (fun _menhir_env ->
        let _menhir_stack = _menhir_env.MenhirLib.EngineTypes.stack in
        let {
          MenhirLib.EngineTypes.state = _;
          MenhirLib.EngineTypes.semv = orgs;
          MenhirLib.EngineTypes.startp = _startpos_orgs_;
          MenhirLib.EngineTypes.endp = _endpos_orgs_;
          MenhirLib.EngineTypes.next = {
            MenhirLib.EngineTypes.state = _menhir_s;
            MenhirLib.EngineTypes.semv = x;
            MenhirLib.EngineTypes.startp = _startpos_x_;
            MenhirLib.EngineTypes.endp = _endpos_x_;
            MenhirLib.EngineTypes.next = _menhir_stack;
          };
        } = _menhir_stack in
        let orgs : (
# 110 "rustparser/RustsurfaceParser.mly"
      (id list)
# 6090 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic orgs in
        let x : (
# 5 "rustparser/RustsurfaceParser.mly"
       (string)
# 6095 "rustparser/RustsurfaceParser.ml"
        ) = Obj.magic x in
        let _endpos__0_ = _menhir_stack.MenhirLib.EngineTypes.endp in
        let _startpos = _startpos_x_ in
        let _endpos = _endpos_orgs_ in
        let _v : (
# 98 "rustparser/RustsurfaceParser.mly"
      (ty)
# 6103 "rustparser/RustsurfaceParser.ml"
        ) = 
# 289 "rustparser/RustsurfaceParser.mly"
                                   ( Tadt (x, Ctypes.noattr, orgs) )
# 6107 "rustparser/RustsurfaceParser.ml"
         in
        {
          MenhirLib.EngineTypes.state = _menhir_s;
          MenhirLib.EngineTypes.semv = Obj.repr _v;
          MenhirLib.EngineTypes.startp = _startpos;
          MenhirLib.EngineTypes.endp = _endpos;
          MenhirLib.EngineTypes.next = _menhir_stack;
        });
    |]
  
  and trace =
    None
  
end

module MenhirInterpreter = struct
  
  module ET = MenhirLib.TableInterpreter.MakeEngineTable (Tables)
  
  module TI = MenhirLib.Engine.Make (ET)
  
  include TI
  
end

let prog_eof =
  fun lexer lexbuf ->
    (Obj.magic (MenhirInterpreter.entry `Legacy 0 lexer lexbuf) : (
# 88 "rustparser/RustsurfaceParser.mly"
       (Rustsurface.prog_item list)
# 6138 "rustparser/RustsurfaceParser.ml"
    ))

module Incremental = struct
  
  let prog_eof =
    fun initial_position ->
      (Obj.magic (MenhirInterpreter.start 0 initial_position) : (
# 88 "rustparser/RustsurfaceParser.mly"
       (Rustsurface.prog_item list)
# 6148 "rustparser/RustsurfaceParser.ml"
      ) MenhirInterpreter.checkpoint)
  
end
